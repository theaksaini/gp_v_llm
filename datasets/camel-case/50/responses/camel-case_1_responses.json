{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_string):\n    result = []\n    capitalize_next = False\n    \n    for char in input_string:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_string):\n    result = []\n    capitalize_next = False\n    \n    for char in input_string:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_string):\n    result = []\n    capitalize_next = False\n    \n    for char in input_string:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_string):\n    result = []\n    capitalize_next = False\n    \n    for char in input_string:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_str):\n    if '-' not in input_str:\n        return input_str\n\n    result = []\n    capitalize_next = False\n\n    for char in input_str:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n\n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_str):\n    if input_str is None:\n        return None\n    \n    result = []\n    capitalize_next = False\n\n    for char in input_str:\n        if char == '-':\n            capitalize_next = True\n        elif capitalize_next:\n            result.append(char.upper())\n            capitalize_next = False\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_str):\n    if input_str is None:\n        return None\n    \n    result = []\n    capitalize_next = False\n\n    for char in input_str:\n        if char == '-':\n            capitalize_next = True\n        elif capitalize_next:\n            result.append(char.upper())\n            capitalize_next = False\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_str):\n    # Split the input string on spaces to handle each segment separately\n    parts = input_str.split(' ')\n    # Process each part individually\n    for i in range(len(parts)):\n        # Split the part on hyphens\n        sub_parts = parts[i].split('-')\n        # Capitalize each sub-part except the first one\n        sub_parts = [sub_parts[0]] + [sub.capitalize() for sub in sub_parts[1:]]\n        # Join them back without any hyphens\n        parts[i] = ''.join(sub_parts)\n    # Join all the parts back with spaces\n    return ' '.join(parts)\n\n# Test the function with the provided assertions\nassert my_func(\"i-xww y ci\") == \"iXww y ci\"\nassert my_func(\"mgfhr-kp-bnib-iao\") == \"mgfhrKpBnibIao\"\nassert my_func(\"rtk zn-i-gym\") == \"rtk znIGym\"\nassert my_func(\"gt n-z-fyzy-pi\") == \"gt nZFyzyPi\"\nassert my_func(\"gik\") == \"gik\"\nassert my_func(\"ui norp-txb\") == \"ui norpTxb\"\nassert my_func(\"w m-avs sbho\") == \"w mAvs sbho\"\nassert my_func(\"azyio-o-zj-ann nm\") == \"azyioOZjAnn nm\"\nassert my_func(\"xhz-vpp-bbs-t\") == \"xhzVppBbsT\"\nassert my_func(\"i\") == \"i\"\nassert my_func(\"pkkzy-i-weo-tdtzb-f\") == \"pkkzyIWeoTdtzbF\"\nassert my_func(\"pnb\") == \"pnb\"\nassert my_func(\"nyid-upgq\") == \"nyidUpgq\"\nassert my_func(\"ipp-nmo-i kungv d-z\") == \"ippNmoI kungv dZ\"\nassert my_func(\"iy-jbwju hiwh\") == \"iyJbwju hiwh\"\nassert my_func(\"nujo-ji-ezp\") == \"nujoJiEzp\"\nassert my_func(\"two-words\") == \"twoWords\"\nassert my_func(\"zwbz-xou\") == \"zwbzXou\"\nassert my_func(\"a b c d e f g h i j\") == \"a b c d e f g h i j\"\nassert my_func(\"hg nax-lxh\") == \"hg naxLxh\"\nassert my_func(\"zakwm rxna\") == \"zakwm rxna\"\nassert my_func(\"w-mvckd qg\") == \"wMvckd qg\"\nassert my_func(\"ssvc\") == \"ssvc\"\nassert my_func(\"all-one-word-dashed\") == \"allOneWordDashed\"\nassert my_func(\"loooooong wooooords\") == \"loooooong wooooords\"\nassert my_func(\"ggm-z-vf-hm-rhww-vf\") == \"ggmZVfHmRhwwVf\"\nassert my_func(\"two words\") == \"two words\"\nassert my_func(\"vkji-i-y\") == \"vkjiIY\"\nassert my_func(\"ln-wqda fqff-n-snb\") == \"lnWqda fqffNSnb\"\nassert my_func(\"d\") == \"d\"\nassert my_func(\"nbsf-lkm-majhu i p\") == \"nbsfLkmMajhu i p\"\nassert my_func(\"izsvb fcz\") == \"izsvb fcz\"\nassert my_func(\"dyvy-r-a\") == \"dyvyRA\"\nassert my_func(\"ee-qjjo-xnqrp\") == \"eeQjjoXnqrp\"\nassert my_func(\"a-b-c-d-e-f-g-h-i-j\") == \"aBCDEFGHIJ\"\nassert my_func(\"b erpa\") == \"b erpa\"\nassert my_func(\"do\") == \"do\"\nassert my_func(\"nospaceordash\") == \"nospaceordash\"\nassert my_func(\"nan\") == \"nan\"\nassert my_func(\"gfxlv-rboq\") == \"gfxlvRboq\"\nassert my_func(\"wr-yb\") == \"wrYb\"\nassert my_func(\"xqie-kw-xxa\") == \"xqieKwXxa\"\nassert my_func(\"loooooong-wooooords\") == \"loooooongWooooords\"\nassert my_func(\"k-sztp ek-ct-ewrxl\") == \"kSztp ekCtEwrxl\"\nassert my_func(\"saaaaaaaaaaaaaaaaame\") == \"saaaaaaaaaaaaaaaaame\"\nassert my_func(\"aimz-yg\") == \"aimzYg\"\nassert my_func(\"qvuer o bs\") == \"qvuer o bs\"\nassert my_func(\"e-nfkl-h\") == \"eNfklH\"\nassert my_func(\"us\") == \"us\"\nassert my_func(\"all separate words\") == \"all separate words\"\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(s):\n    # Split the input string by spaces\n    parts = s.split(' ')\n    # Initialize a list to hold the processed parts\n    processed_parts = []\n\n    # Iterate over each part\n    for part in parts:\n        # Split each part by '-'\n        sub_parts = part.split('-')\n        # Capitalize each sub-part except the first one and join them\n        sub_parts = [sub_parts[0]] + [sub.capitalize() for sub in sub_parts[1:]]\n        # Join the sub-parts\n        processed_part = ''.join(sub_parts)\n        # Append the processed part to the list\n        processed_parts.append(processed_part)\n\n    # Join the processed parts by spaces and return\n    return ' '.join(processed_parts)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(s):\n    result = []\n    capitalize_next = False\n    \n    for char in s:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n\n# Test cases\nassert my_func(\"i-xww y ci\") == \"iXww y ci\"\nassert my_func(\"mgfhr-kp-bnib-iao\") == \"mgfhrKpBnibIao\"\nassert my_func(\"rtk zn-i-gym\") == \"rtk znIGym\"\nassert my_func(\"gt n-z-fyzy-pi\") == \"gt nZFyzyPi\"\nassert my_func(\"gik\") == \"gik\"\nassert my_func(\"ui norp-txb\") == \"ui norpTxb\"\nassert my_func(\"w m-avs sbho\") == \"w mAvs sbho\"\nassert my_func(\"azyio-o-zj-ann nm\") == \"azyioOZjAnn nm\"\nassert my_func(\"xhz-vpp-bbs-t\") == \"xhzVppBbsT\"\nassert my_func(\"i\") == \"i\"\nassert my_func(\"pkkzy-i-weo-tdtzb-f\") == \"pkkzyIWeoTdtzbF\"\nassert my_func(\"pnb\") == \"pnb\"\nassert my_func(\"nyid-upgq\") == \"nyidUpgq\"\nassert my_func(\"ipp-nmo-i kungv d-z\") == \"ippNmoI kungv dZ\"\nassert my_func(\"iy-jbwju hiwh\") == \"iyJbwju hiwh\"\nassert my_func(\"nujo-ji-ezp\") == \"nujoJiEzp\"\nassert my_func(\"two-words\") == \"twoWords\"\nassert my_func(\"zwbz-xou\") == \"zwbzXou\"\nassert my_func(\"a b c d e f g h i j\") == \"a b c d e f g h i j\"\nassert my_func(\"hg nax-lxh\") == \"hg naxLxh\"\nassert my_func(\"zakwm rxna\") == \"zakwm rxna\"\nassert my_func(\"w-mvckd qg\") == \"wMvckd qg\"\nassert my_func(\"ssvc\") == \"ssvc\"\nassert my_func(\"all-one-word-dashed\") == \"allOneWordDashed\"\nassert my_func(\"loooooong wooooords\") == \"loooooong wooooords\"\nassert my_func(\"ggm-z-vf-hm-rhww-vf\") == \"ggmZVfHmRhwwVf\"\nassert my_func(\"two words\") == \"two words\"\nassert my_func(\"vkji-i-y\") == \"vkjiIY\"\nassert my_func(\"ln-wqda fqff-n-snb\") == \"lnWqda fqffNSnb\"\nassert my_func(\"d\") == \"d\"\nassert my_func(\"nbsf-lkm-majhu i p\") == \"nbsfLkmMajhu i p\"\nassert my_func(\"izsvb fcz\") == \"izsvb fcz\"\nassert my_func(\"dyvy-r-a\") == \"dyvyRA\"\nassert my_func(\"ee-qjjo-xnqrp\") == \"eeQjjoXnqrp\"\nassert my_func(\"a-b-c-d-e-f-g-h-i-j\") == \"aBCDEFGHIJ\"\nassert my_func(\"b erpa\") == \"b erpa\"\nassert my_func(\"do\") == \"do\"\nassert my_func(\"nospaceordash\") == \"nospaceordash\"\nassert my_func(\"nan\") == \"nan\"\nassert my_func(\"gfxlv-rboq\") == \"gfxlvRboq\"\nassert my_func(\"wr-yb\") == \"wrYb\"\nassert my_func(\"xqie-kw-xxa\") == \"xqieKwXxa\"\nassert my_func(\"loooooong-wooooords\") == \"loooooongWooooords\"\nassert my_func(\"k-sztp ek-ct-ewrxl\") == \"kSztp ekCtEwrxl\"\nassert my_func(\"saaaaaaaaaaaaaaaaame\") == \"saaaaaaaaaaaaaaaaame\"\nassert my_func(\"aimz-yg\") == \"aimzYg\"\nassert my_func(\"qvuer o bs\") == \"qvuer o bs\"\nassert my_func(\"e-nfkl-h\") == \"eNfklH\"\nassert my_func(\"us\") == \"us\"\nassert my_func(\"all separate words\") == \"all separate words\"\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(s):\n    if s is None:\n        return None\n    parts = s.split()\n    for i in range(len(parts)):\n        sub_parts = parts[i].split('-')\n        for j in range(1, len(sub_parts)):\n            sub_parts[j] = sub_parts[j].capitalize()\n        parts[i] = ''.join(sub_parts)\n    return ' '.join(parts)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(s):\n    words = s.split(' ')\n    camel_cased_words = []\n    \n    for word in words:\n        parts = word.split('-')\n        camel_cased_word = parts[0] + ''.join(p.capitalize() for p in parts[1:])\n        camel_cased_words.append(camel_cased_word)\n    \n    return ' '.join(camel_cased_words)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_str):\n    output = []  # List to accumulate the result characters\n    capitalize_next = False  # Flag to indicate if the next character should be capitalized\n\n    for char in input_str:\n        if char == '-':\n            # Set flag to capitalize the next character\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                # If the flag is set, capitalize the character and reset the flag\n                output.append(char.upper())\n                capitalize_next = False\n            else:\n                # Otherwise, append the character as is\n                output.append(char)\n    \n    return ''.join(output)\n\n# Example usage:\nprint(my_func(\"i-xww y ci\"))  # Output: \"iXww y ci\"\nprint(my_func(\"mgfhr-kp-bnib-iao\"))  # Output: \"mgfhrKpBnibIao\"\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1):\n    \"\"\"This function takes a string of length [1, 20] and transforms it\n    by capitalizing letters following a dash and removing the dashes.\n    \"\"\"\n    if input1 is None:  # Handle the case where the input is None\n        return None\n    \n    output = []\n    capitalize_next = False\n    \n    for char in input1:\n        if char == '-':\n            # Set flag to capitalize the next character\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                # Capitalize the current character\n                output.append(char.upper())\n                capitalize_next = False\n            else:\n                # Add the current character as is\n                output.append(char)\n    \n    return ''.join(output)\n\n# Example usage:\nprint(my_func(\"i-xww y ci\"))  # Output: \"iXww y ci\"\nprint(my_func(\"mgfhr-kp-bnib-iao\"))  # Output: \"mgfhrKpBnibIao\"\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1):\n    \"\"\"\n    Alter this python function \"my_func\" to accept inputs containing\n    a string of length [1, 20] and output a string that replicates the\n    underlying mechanism of the examples provided.\n    \"\"\"\n    if input1 is None:\n        return None\n    \n    # Split the input string by spaces to handle space-separated words\n    parts = input1.split(' ')\n    \n    # Transform each part separately\n    transformed_parts = []\n    for part in parts:\n        # Split each part by dashes to handle dash-separated words\n        sub_parts = part.split('-')\n        # Capitalize each subpart after the first one and join them\n        transformed_part = sub_parts[0] + ''.join(sub.capitalize() for sub in sub_parts[1:])\n        transformed_parts.append(transformed_part)\n    \n    # Join the transformed parts with spaces to form the final string\n    output1 = ' '.join(transformed_parts)\n    \n    return output1\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1): \n    \"\"\"\n    Accepts an input string and transforms it by converting words separated by dashes into camelCase.\n    \"\"\"\n    if input1 is None:\n        return None\n    \n    # Split the input string on spaces to handle each word separately\n    words = input1.split(' ')\n    \n    # Process each word separately\n    processed_words = []\n    for word in words:\n        if '-' in word:\n            # Split the word on dashes and capitalize the first letter of each subsequent word\n            parts = word.split('-')\n            camel_case_word = parts[0] + ''.join(part.capitalize() for part in parts[1:])\n            processed_words.append(camel_case_word)\n        else:\n            # If there are no dashes, keep the word as is\n            processed_words.append(word)\n\n    # Join the processed words back with spaces\n    output1 = ' '.join(processed_words)\n    return output1\n\n# Example usage:\nexample_input = \"mgfhr-kp-bnib-iao\"\nprint(my_func(example_input))  # Output: \"mgfhrKpBnibIao\"\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1):\n    \"\"\"This function takes a string of length [1, 20] and transforms it\n    by capitalizing letters following a dash and removing the dashes.\n    \"\"\"\n    if input1 is None:  # Handle the case where the input is None\n        return None\n    \n    output = []\n    capitalize_next = False\n    \n    for char in input1:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                output.append(char.upper())\n                capitalize_next = False\n            else:\n                output.append(char)\n    \n    return ''.join(output)\n\n# Examples for testing\nexamples = {\n    \"Example 0\": {\"input1\": \"i-xww y ci\", \"output1\": \"iXww y ci\"},\n    \"Example 1\": {\"input1\": \"mgfhr-kp-bnib-iao\", \"output1\": \"mgfhrKpBnibIao\"},\n    # Add more examples as needed\n}\n\n# Testing the function with examples\nfor example in examples.values():\n    input1 = example['input1']\n    expected_output = example['output1']\n    result = my_func(input1)\n    assert result == expected_output, f\"Error: {input1} -> {result}, expected {expected_output}\"\n\nprint(\"All tests passed!\")\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1):\n    \"\"\"This function takes a string of length [1, 20] and transforms it by capitalizing\n    letters following a dash and removing the dashes, as illustrated by the given examples.\"\"\"\n    \n    # Check if the input is valid\n    if not isinstance(input1, str) or not (1 <= len(input1) <= 20):\n        return None\n    \n    # Initialize the output as an empty list\n    output = []\n    \n    # Flag to indicate if the next character should be uppercased\n    capitalize_next = False\n    \n    # Iterate over each character in the input string\n    for char in input1:\n        if char == '-':\n            # Set the flag to capitalize the next character\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                # Append the uppercase version of the character\n                output.append(char.upper())\n                # Reset the flag\n                capitalize_next = False\n            else:\n                # Append the character as it is\n                output.append(char)\n    \n    # Join the list into a string and return\n    return ''.join(output)\n\n# Example usage:\nprint(my_func(\"i-xww y ci\"))  # Output: \"iXww y ci\"\n"}
{"question": ["", "a string of length [1, 20]", "a string", "input1:str"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1: str) -> str:\n    if input1 is None:\n        return None\n\n    # Split the input string into words based on spaces\n    words = input1.split(' ')\n\n    # Process each word individually\n    transformed_words = []\n    for word in words:\n        if '-' in word:\n            # Split the word by dashes and capitalize each part after the first\n            parts = word.split('-')\n            transformed_word = parts[0] + ''.join(part.capitalize() for part in parts[1:])\n        else:\n            # If no dash, the word remains unchanged\n            transformed_word = word\n        transformed_words.append(transformed_word)\n\n    # Join the transformed words with spaces to form the final output\n    return ' '.join(transformed_words)\n\n# Example usage:\n# print(my_func(\"i-xww y ci\"))  # Output: \"iXww y ci\"\n"}
{"question": ["", "a string of length [1, 20]", "a string", "input1:str"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1: str) -> str:\n    if input1 is None:\n        return None\n\n    # Split the input by spaces to handle space-separated segments\n    segments = input1.split(' ')\n    \n    transformed_segments = []\n    for segment in segments:\n        # Split each segment by hyphen, capitalize the first letter of each sub-segment except the first one\n        sub_segments = segment.split('-')\n        transformed_sub_segments = [sub_segments[0]] + [s.capitalize() for s in sub_segments[1:]]\n        \n        # Join back the transformed sub-segments without any separator\n        transformed_segments.append(''.join(transformed_sub_segments))\n    \n    # Join the transformed segments with spaces to maintain original spacing\n    return ' '.join(transformed_segments)\n\n# Testing the function with the given examples\nexamples = {\n    \"Example 0\": {\"input1\": \"i-xww y ci\", \"output1\": \"iXww y ci\"},\n    \"Example 1\": {\"input1\": \"mgfhr-kp-bnib-iao\", \"output1\": \"mgfhrKpBnibIao\"},\n    \"Example 2\": {\"input1\": \"rtk zn-i-gym\", \"output1\": \"rtk znIGym\"},\n    \"Example 3\": {\"input1\": \"gt n-z-fyzy-pi\", \"output1\": \"gt nZFyzyPi\"},\n    \"Example 4\": {\"input1\": \"gik\", \"output1\": \"gik\"},\n    \"Example 5\": {\"input1\": \"ui norp-txb\", \"output1\": \"ui norpTxb\"},\n    \"Example 6\": {\"input1\": \"w m-avs sbho\", \"output1\": \"w mAvs sbho\"},\n    \"Example 7\": {\"input1\": \"azyio-o-zj-ann nm\", \"output1\": \"azyioOZjAnn nm\"},\n    \"Example 8\": {\"input1\": \"xhz-vpp-bbs-t\", \"output1\": \"xhzVppBbsT\"},\n    \"Example 9\": {\"input1\": \"i\", \"output1\": \"i\"},\n    \"Example 10\": {\"input1\": \"pkkzy-i-weo-tdtzb-f\", \"output1\": \"pkkzyIWeoTdtzbF\"},\n    # More examples...\n}\n\nfor example_name, example_data in examples.items():\n    result = my_func(example_data[\"input1\"])\n    assert result == example_data[\"output1\"], f\"Test failed for {example_name}: {result} != {example_data['output1']}\"\n\nprint(\"All tests passed.\")\n"}
