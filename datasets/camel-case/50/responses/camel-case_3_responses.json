{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_string):\n    if '-' in input_string:\n        words = input_string.split('-')\n        return words[0] + ''.join(word.capitalize() for word in words[1:])\n    return input_string\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_str):\n    if '-' in input_str:\n        parts = input_str.split('-')\n        return parts[0] + ''.join(word.capitalize() for word in parts[1:])\n    else:\n        return input_str\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(s):\n    # Check if there are dashes in the string\n    if '-' in s:\n        # Split the string by dashes\n        parts = s.split('-')\n        # Capitalize each part except the first one\n        parts = [parts[0]] + [p.capitalize() for p in parts[1:]]\n        # Join the parts without dashes\n        return ''.join(parts)\n    else:\n        # If there are no dashes, return the string as is\n        return s\n\n# Example Usage:\n# print(my_func(\"two-words\"))  # Output: \"twoWords\"\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_string):\n    if len(input_string) < 1 or len(input_string) > 20:\n        return None\n    \n    result = []\n    capitalize_next = False\n    \n    for char in input_string:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":null,\"output1\":null},\"1\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"2\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"3\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"4\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"},\"5\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"6\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"7\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"8\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"9\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"10\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"11\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"12\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"13\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"14\":{\"input1\":\"us\",\"output1\":\"us\"},\"15\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"16\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"17\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"18\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"19\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"20\":{\"input1\":\"i\",\"output1\":\"i\"},\"21\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"22\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"23\":{\"input1\":\"do\",\"output1\":\"do\"},\"24\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"25\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"26\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"27\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"28\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"29\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"30\":{\"input1\":\"d\",\"output1\":\"d\"},\"31\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"32\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"33\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"34\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"35\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"36\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"37\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"38\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"39\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"40\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"41\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"42\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"45\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"46\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"47\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"48\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"49\":{\"input1\":\"gik\",\"output1\":\"gik\"}}", "response": "\ndef my_func(input_str):\n    # Split the string by '-'\n    parts = input_str.split('-')\n    \n    # Reconstruct the string with camelCase logic\n    output_str = parts[0] + ''.join(part.capitalize() for part in parts[1:])\n    \n    return output_str\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_str):\n    if input_str is None:\n        return None\n\n    result = []\n    capitalize_next = False\n\n    for char in input_str:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n\n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_str):\n    if input_str is None:\n        return None\n\n    result = []\n    capitalize_next = False\n\n    for char in input_str:\n        if char == '-':\n            capitalize_next = True\n        else:\n            if capitalize_next:\n                result.append(char.upper())\n                capitalize_next = False\n            else:\n                result.append(char)\n\n    return ''.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_string):\n    # Split the input string on dashes\n    parts = input_string.split('-')\n    \n    # Capitalize the first letter of each part except the first one\n    capitalized_parts = [parts[0]] + [part.capitalize() for part in parts[1:]]\n    \n    # Join the parts back together without dashes\n    result = ''.join(capitalized_parts)\n    \n    return result\n\n# Example usage:\nprint(my_func(\"i-xww y ci\"))  # Output: iXww y ci\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_string):\n    # Step 1: Check if the input is None or an empty string\n    if not input_string:\n        return input_string\n    \n    # Step 2: Split the input string on spaces to handle multiple words separately\n    words = input_string.split(' ')\n    \n    # Step 3: Initialize an empty list to store transformed words\n    transformed_words = []\n    \n    # Step 4: Iterate over each word in the list of words\n    for word in words:\n        # Step 5: Split the word on dashes\n        parts = word.split('-')\n        \n        # Step 6: Capitalize each part except the first one\n        for i in range(1, len(parts)):\n            parts[i] = parts[i].capitalize()\n        \n        # Step 7: Join the parts back together without dashes\n        transformed_word = ''.join(parts)\n        \n        # Step 8: Append the transformed word to the list of transformed words\n        transformed_words.append(transformed_word)\n    \n    # Step 9: Join the transformed words back together with spaces\n    result = ' '.join(transformed_words)\n    \n    # Step 10: Return the final result\n    return result\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_string):\n    # Split the input string by spaces to handle each segment separately\n    segments = input_string.split(' ')\n    # Initialize the result list\n    result = []\n\n    for segment in segments:\n        # Split each segment by hyphens\n        parts = segment.split('-')\n        # Initialize a new segment to store camelCase conversion\n        new_segment = parts[0]  # Keep the first part as it is\n        # Convert subsequent parts to title case\n        for part in parts[1:]:\n            new_segment += part.capitalize()\n        # Append the processed segment to the result list\n        result.append(new_segment)\n\n    # Join the processed segments with spaces to form the final result\n    return ' '.join(result)\n\n# Test cases\nassert my_func(\"i-xww y ci\") == \"iXww y ci\"\nassert my_func(\"mgfhr-kp-bnib-iao\") == \"mgfhrKpBnibIao\"\nassert my_func(\"rtk zn-i-gym\") == \"rtk znIGym\"\nassert my_func(\"gt n-z-fyzy-pi\") == \"gt nZFyzyPi\"\nassert my_func(\"gik\") == \"gik\"\nassert my_func(\"ui norp-txb\") == \"ui norpTxb\"\nassert my_func(\"w m-avs sbho\") == \"w mAvs sbho\"\nassert my_func(\"azyio-o-zj-ann nm\") == \"azyioOZjAnn nm\"\nassert my_func(\"xhz-vpp-bbs-t\") == \"xhzVppBbsT\"\nassert my_func(\"i\") == \"i\"\nassert my_func(\"pkkzy-i-weo-tdtzb-f\") == \"pkkzyIWeoTdtzbF\"\nassert my_func(\"pnb\") == \"pnb\"\nassert my_func(\"nyid-upgq\") == \"nyidUpgq\"\nassert my_func(\"ipp-nmo-i kungv d-z\") == \"ippNmoI kungv dZ\"\nassert my_func(\"iy-jbwju hiwh\") == \"iyJbwju hiwh\"\nassert my_func(\"nujo-ji-ezp\") == \"nujoJiEzp\"\nassert my_func(\"two-words\") == \"twoWords\"\nassert my_func(\"zwbz-xou\") == \"zwbzXou\"\nassert my_func(\"a b c d e f g h i j\") == \"a b c d e f g h i j\"\nassert my_func(\"hg nax-lxh\") == \"hg naxLxh\"\nassert my_func(\"zakwm rxna\") == \"zakwm rxna\"\nassert my_func(\"w-mvckd qg\") == \"wMvckd qg\"\nassert my_func(\"ssvc\") == \"ssvc\"\nassert my_func(\"all-one-word-dashed\") == \"allOneWordDashed\"\nassert my_func(\"loooooong wooooords\") == \"loooooong wooooords\"\nassert my_func(\"ggm-z-vf-hm-rhww-vf\") == \"ggmZVfHmRhwwVf\"\nassert my_func(\"two words\") == \"two words\"\nassert my_func(\"vkji-i-y\") == \"vkjiIY\"\nassert my_func(\"ln-wqda fqff-n-snb\") == \"lnWqda fqffNSnb\"\nassert my_func(\"d\") == \"d\"\nassert my_func(\"nbsf-lkm-majhu i p\") == \"nbsfLkmMajhu i p\"\nassert my_func(\"izsvb fcz\") == \"izsvb fcz\"\nassert my_func(\"dyvy-r-a\") == \"dyvyRA\"\nassert my_func(\"ee-qjjo-xnqrp\") == \"eeQjjoXnqrp\"\nassert my_func(\"a-b-c-d-e-f-g-h-i-j\") == \"aBCDEFGHIJ\"\nassert my_func(\"b erpa\") == \"b erpa\"\nassert my_func(\"do\") == \"do\"\nassert my_func(\"nospaceordash\") == \"nospaceordash\"\nassert my_func(\"nan\") == \"nan\"\nassert my_func(\"gfxlv-rboq\") == \"gfxlvRboq\"\nassert my_func(\"wr-yb\") == \"wrYb\"\nassert my_func(\"xqie-kw-xxa\") == \"xqieKwXxa\"\nassert my_func(\"loooooong-wooooords\") == \"loooooongWooooords\"\nassert my_func(\"k-sztp ek-ct-ewrxl\") == \"kSztp ekCtEwrxl\"\nassert my_func(\"saaaaaaaaaaaaaaaaame\") == \"saaaaaaaaaaaaaaaaame\"\nassert my_func(\"aimz-yg\") == \"aimzYg\"\nassert my_func(\"qvuer o bs\") == \"qvuer o bs\"\nassert my_func(\"e-nfkl-h\") == \"eNfklH\"\nassert my_func(\"us\") == \"us\"\nassert my_func(\"all separate words\") == \"all separate words\"\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(s):\n    if s is None:\n        return None\n    parts = s.split(' ')\n    result = []\n    for part in parts:\n        subparts = part.split('-')\n        camel_case = subparts[0] + ''.join(x.capitalize() for x in subparts[1:])\n        result.append(camel_case)\n    return ' '.join(result)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(s):\n    parts = s.split(' ')\n    for i in range(len(parts)):\n        subparts = parts[i].split('-')\n        for j in range(1, len(subparts)):\n            subparts[j] = subparts[j].capitalize()\n        parts[i] = ''.join(subparts)\n    return ' '.join(parts)\n"}
{"question": [" ", "a string of length [1, 20]", "a string"], "context": "{\"0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"9\":{\"input1\":\"i\",\"output1\":\"i\"},\"10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"29\":{\"input1\":\"d\",\"output1\":\"d\"},\"30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"36\":{\"input1\":\"do\",\"output1\":\"do\"},\"37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"38\":{\"input1\":null,\"output1\":null},\"39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"48\":{\"input1\":\"us\",\"output1\":\"us\"},\"49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input_str):\n    if input_str is None:\n        return None\n\n    output = []\n    capitalize_next = False\n\n    for char in input_str:\n        if char == '-':\n            capitalize_next = True\n        elif capitalize_next:\n            output.append(char.upper())\n            capitalize_next = False\n        else:\n            output.append(char)\n\n    return ''.join(output)\n\n# Test cases\nprint(my_func(\"i-xww y ci\"))  # Output: \"iXww y ci\"\nprint(my_func(\"mgfhr-kp-bnib-iao\"))  # Output: \"mgfhrKpBnibIao\"\nprint(my_func(\"rtk zn-i-gym\"))  # Output: \"rtk znIGym\"\nprint(my_func(\"gt n-z-fyzy-pi\"))  # Output: \"gt nZFyzyPi\"\nprint(my_func(\"gik\"))  # Output: \"gik\"\nprint(my_func(None))  # Output: None\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1):\n    \"\"\"\n    This function transforms an input string by converting segments separated by dashes\n    into camel case while leaving space-separated segments unchanged.\n    \"\"\"\n    if input1 is None:\n        return None\n    \n    # Split the input string by spaces\n    segments = input1.split(' ')\n    \n    # Function to convert dash-separated segments into camel case\n    def convert_to_camel_case(segment):\n        parts = segment.split('-')\n        # Capitalize each part except for the first one\n        return ''.join(parts[0] + part.capitalize() for part in parts[1:])\n    \n    # Convert each segment separated by space\n    transformed_segments = [convert_to_camel_case(segment) for segment in segments]\n    \n    # Join the transformed segments by spaces\n    return ' '.join(transformed_segments)\n\n# Example usage:\n# output = my_func(\"mgfhr-kp-bnib-iao\")\n# print(output)  # This should print \"mgfhrKpBnibIao\"\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1):\n    # Split the input string on spaces to handle words separately\n    words = input1.split(' ')\n    \n    # Process each word individually\n    transformed_words = []\n    for word in words:\n        parts = word.split('-')\n        \n        # Capitalize the first letter of each part after the first\n        transformed_word = parts[0] + ''.join(part.capitalize() for part in parts[1:])\n        \n        transformed_words.append(transformed_word)\n    \n    # Join the transformed words back with a space\n    return ' '.join(transformed_words)\n"}
{"question": ["", "a string of length [1, 20]", "a string"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1):\n    if input1 is None:\n        return None\n        \n    output = []\n    to_upper = False\n    \n    for char in input1:\n        if char == '-':\n            to_upper = True\n        elif char == ' ':\n            output.append(char)\n            to_upper = False  # Reset the flag because spaces should not be converted\n        else:\n            if to_upper:\n                output.append(char.upper())\n                to_upper = False\n            else:\n                output.append(char)\n                \n    return ''.join(output)\n\n# Examples to test the function\nprint(my_func(\"i-xww y ci\"))          # Output: \"iXww y ci\"\nprint(my_func(\"mgfhr-kp-bnib-iao\"))   # Output: \"mgfhrKpBnibIao\"\nprint(my_func(\"a-b-c-d-e-f-g-h-i-j\")) # Output: \"aBCDEFGHIJ\"\nprint(my_func(\"all separate words\"))  # Output: \"all separate words\"\nprint(my_func(None))                  # Output: None\n"}
{"question": ["", "a string of length [1, 20]", "a string", "input1:str"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1: str):\n    if input1 is None:\n        return None\n    \n    # Split the input string by spaces\n    space_split = input1.split(' ')\n    \n    # Function to convert dash-separated words to camel case\n    def to_camel_case(dash_separated):\n        # Split the string by dashes\n        parts = dash_separated.split('-')\n        # Capitalize all parts except the first one and join them\n        return parts[0] + ''.join(part.capitalize() for part in parts[1:])\n    \n    # Apply camel case conversion to each part split by spaces\n    result = [to_camel_case(part) for part in space_split]\n    \n    # Join the parts back with spaces\n    return ' '.join(result)\n\n# Testing the function with an example\nprint(my_func(\"i-xww y ci\"))  # Output: \"iXww y ci\"\n"}
{"question": ["", "a string of length [1, 20]", "a string", "input1:str"], "context": "{\"Example 0\":{\"input1\":\"i-xww y ci\",\"output1\":\"iXww y ci\"},\"Example 1\":{\"input1\":\"mgfhr-kp-bnib-iao\",\"output1\":\"mgfhrKpBnibIao\"},\"Example 2\":{\"input1\":\"rtk zn-i-gym\",\"output1\":\"rtk znIGym\"},\"Example 3\":{\"input1\":\"gt n-z-fyzy-pi\",\"output1\":\"gt nZFyzyPi\"},\"Example 4\":{\"input1\":\"gik\",\"output1\":\"gik\"},\"Example 5\":{\"input1\":\"ui norp-txb\",\"output1\":\"ui norpTxb\"},\"Example 6\":{\"input1\":\"w m-avs sbho\",\"output1\":\"w mAvs sbho\"},\"Example 7\":{\"input1\":\"azyio-o-zj-ann nm\",\"output1\":\"azyioOZjAnn nm\"},\"Example 8\":{\"input1\":\"xhz-vpp-bbs-t\",\"output1\":\"xhzVppBbsT\"},\"Example 9\":{\"input1\":\"i\",\"output1\":\"i\"},\"Example 10\":{\"input1\":\"pkkzy-i-weo-tdtzb-f\",\"output1\":\"pkkzyIWeoTdtzbF\"},\"Example 11\":{\"input1\":\"pnb\",\"output1\":\"pnb\"},\"Example 12\":{\"input1\":\"nyid-upgq\",\"output1\":\"nyidUpgq\"},\"Example 13\":{\"input1\":\"ipp-nmo-i kungv d-z\",\"output1\":\"ippNmoI kungv dZ\"},\"Example 14\":{\"input1\":\"iy-jbwju hiwh\",\"output1\":\"iyJbwju hiwh\"},\"Example 15\":{\"input1\":\"nujo-ji-ezp\",\"output1\":\"nujoJiEzp\"},\"Example 16\":{\"input1\":\"two-words\",\"output1\":\"twoWords\"},\"Example 17\":{\"input1\":\"zwbz-xou\",\"output1\":\"zwbzXou\"},\"Example 18\":{\"input1\":\"a b c d e f g h i j\",\"output1\":\"a b c d e f g h i j\"},\"Example 19\":{\"input1\":\"hg nax-lxh\",\"output1\":\"hg naxLxh\"},\"Example 20\":{\"input1\":\"zakwm rxna\",\"output1\":\"zakwm rxna\"},\"Example 21\":{\"input1\":\"w-mvckd qg\",\"output1\":\"wMvckd qg\"},\"Example 22\":{\"input1\":\"ssvc\",\"output1\":\"ssvc\"},\"Example 23\":{\"input1\":\"all-one-word-dashed\",\"output1\":\"allOneWordDashed\"},\"Example 24\":{\"input1\":\"loooooong wooooords\",\"output1\":\"loooooong wooooords\"},\"Example 25\":{\"input1\":\"ggm-z-vf-hm-rhww-vf\",\"output1\":\"ggmZVfHmRhwwVf\"},\"Example 26\":{\"input1\":\"two words\",\"output1\":\"two words\"},\"Example 27\":{\"input1\":\"vkji-i-y\",\"output1\":\"vkjiIY\"},\"Example 28\":{\"input1\":\"ln-wqda fqff-n-snb\",\"output1\":\"lnWqda fqffNSnb\"},\"Example 29\":{\"input1\":\"d\",\"output1\":\"d\"},\"Example 30\":{\"input1\":\"nbsf-lkm-majhu i p\",\"output1\":\"nbsfLkmMajhu i p\"},\"Example 31\":{\"input1\":\"izsvb fcz\",\"output1\":\"izsvb fcz\"},\"Example 32\":{\"input1\":\"dyvy-r-a\",\"output1\":\"dyvyRA\"},\"Example 33\":{\"input1\":\"ee-qjjo-xnqrp\",\"output1\":\"eeQjjoXnqrp\"},\"Example 34\":{\"input1\":\"a-b-c-d-e-f-g-h-i-j\",\"output1\":\"aBCDEFGHIJ\"},\"Example 35\":{\"input1\":\"b erpa\",\"output1\":\"b erpa\"},\"Example 36\":{\"input1\":\"do\",\"output1\":\"do\"},\"Example 37\":{\"input1\":\"nospaceordash\",\"output1\":\"nospaceordash\"},\"Example 38\":{\"input1\":null,\"output1\":null},\"Example 39\":{\"input1\":\"gfxlv-rboq\",\"output1\":\"gfxlvRboq\"},\"Example 40\":{\"input1\":\"wr-yb\",\"output1\":\"wrYb\"},\"Example 41\":{\"input1\":\"xqie-kw-xxa\",\"output1\":\"xqieKwXxa\"},\"Example 42\":{\"input1\":\"loooooong-wooooords\",\"output1\":\"loooooongWooooords\"},\"Example 43\":{\"input1\":\"k-sztp ek-ct-ewrxl\",\"output1\":\"kSztp ekCtEwrxl\"},\"Example 44\":{\"input1\":\"saaaaaaaaaaaaaaaaame\",\"output1\":\"saaaaaaaaaaaaaaaaame\"},\"Example 45\":{\"input1\":\"aimz-yg\",\"output1\":\"aimzYg\"},\"Example 46\":{\"input1\":\"qvuer o bs\",\"output1\":\"qvuer o bs\"},\"Example 47\":{\"input1\":\"e-nfkl-h\",\"output1\":\"eNfklH\"},\"Example 48\":{\"input1\":\"us\",\"output1\":\"us\"},\"Example 49\":{\"input1\":\"all separate words\",\"output1\":\"all separate words\"}}", "response": "\ndef my_func(input1: str) -> str:\n    \"\"\"\n    Alter this python function \"my_func\" to accept inputs containing\n    a string of length [1, 20] and output a string that replicates the underlying\n    mechanism of the following examples.\n    \"\"\"\n    if input1 is None:\n        return None\n    \n    # Split the input based on spaces, to handle each part separately\n    parts = input1.split(' ')\n    \n    # Process each part individually\n    processed_parts = []\n    for part in parts:\n        # Split by hyphen\n        sub_parts = part.split('-')\n        # Capitalize the first letter of each sub-part except the first one\n        camel_case_part = sub_parts[0] + ''.join(sub_part.capitalize() for sub_part in sub_parts[1:])\n        processed_parts.append(camel_case_part)\n    \n    # Join the processed parts with spaces\n    return ' '.join(processed_parts)\n\n# Example usage\nprint(my_func(\"mgfhr-kp-bnib-iao\"))  # Output: \"mgfhrKpBnibIao\"\nprint(my_func(\"two words\"))          # Output: \"two words\"\n"}
