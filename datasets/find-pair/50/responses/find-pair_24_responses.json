{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(vector, target):\n    for i in range(len(vector)):\n        for j in range(i + 1, len(vector)):\n            if vector[i] + vector[j] == target:\n                return vector[i], vector[j]\n"}
{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(input_list, target_sum):\n    for i in range(len(input_list)):\n        for j in range(i + 1, len(input_list)):\n            if input_list[i] + input_list[j] == target_sum:\n                return input_list[i], input_list[j]\n"}
{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(input1, input2):\n    # Convert the input1 string to a list of integers\n    numbers = list(map(int, input1.strip('[]').split()))\n    closest_sum = float('-inf')\n    best_pair = (None, None)\n    \n    # Iterate over all pairs of numbers\n    for i in range(len(numbers)):\n        for j in range(i+1, len(numbers)):\n            current_sum = numbers[i] + numbers[j]\n            if current_sum <= input2 and current_sum > closest_sum:\n                closest_sum = current_sum\n                best_pair = (numbers[i], numbers[j])\n    \n    return best_pair\n\n# Example usage\ninput1 = \"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\"\ninput2 = -5080\nprint(my_func(input1, input2))  # Output would be (277, -5357)\n"}
{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(input1, input2):\n    # Step 1: Sort the input1 list\n    input1_sorted = sorted(input1)\n    \n    # Step 2: Initialize variables to store the outputs\n    closest_sum = float('inf')\n    output_pair = (input1_sorted[0], input1_sorted[1])\n    \n    # Step 3: Use two pointers to find the pair of numbers that sum closest to input2\n    left, right = 0, len(input1_sorted) - 1\n    while left < right:\n        current_sum = input1_sorted[left] + input1_sorted[right]\n        \n        # Step 4: Check if the current sum is closer to input2 than the previously found sums\n        if abs(input2 - current_sum) < abs(input2 - closest_sum):\n            closest_sum = current_sum\n            output_pair = (input1_sorted[left], input1_sorted[right])\n        \n        # Step 5: Move pointers based on the comparison between current_sum and input2\n        if current_sum < input2:\n            left += 1\n        else:\n            right -= 1\n    \n    # Step 6: Return the pair of numbers whose sum is closest to input2\n    return output_pair\n"}
{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(vec, target):\n    for i in range(len(vec)):\n        for j in range(i + 1, len(vec)):\n            if vec[i] + vec[j] == target:\n                return vec[i], vec[j]\n    return None, None\n\n# Test cases\nassert my_func([277, 3127, -188, 1445, 7641, 3412, -2483, -5357, -3457, 6542], -5080) == (277, -5357)\nassert my_func([-9664, 8051, 4990, 4198, 5230, -4335, -5492, 994, 1256, -256, 9894, -9569, -7492, -5408, 7260, -2441, 100], 8516) == (1256, 7260)\nassert my_func([2650, 6057, 7986, 5430], 8080) == (2650, 5430)\nassert my_func([-14, 5], -9) == (-14, 5)\nassert my_func([4742, 2691, -2860, 5513, 2172, -9231], 7685) == (5513, 2172)\nassert my_func([-2156, 2808, 5575], 8383) == (2808, 5575)\nassert my_func([1, 3, 5], 4) == (1, 3)\nassert my_func([3761, -1416, -3804], -43) == (3761, -3804)\nassert my_func([-4165, 3030, 4327, -8278, 3151, -8603, 7659, -8930], -5900) == (3030, -8930)\nassert my_func([3174, -8792, -6758, -4497, -3264, -1690, 8446, 964], 4138) == (3174, 964)\nassert my_func([-9100, -1911, -2150, 9609], -11011) == (-9100, -1911)\nassert my_func([9492, -3791, -7317], -11108) == (-3791, -7317)\nassert my_func([-1, 0, 1], 0) == (-1, 1)\nassert my_func([-1, 0, 1], -1) == (-1, 0)\nassert my_func([10000, -10000], 0) == (10000, -10000)\nassert my_func([2500, 6352], 8852) == (2500, 6352)\nassert my_func([1, 3, 5], 6) == (1, 5)\nassert my_func([237, 410, -777], 647) == (237, 410)\nassert my_func([1435, 4488, -9727, -1775, 3294], -5239) == (4488, -9727)\nassert my_func([3085, -4615, -4840, 7622, -6043, 6375, -5280, -3767, -2926, -8478, -3141], -13758) == (-5280, -8478)\nassert my_func([1, 3, 5], 8) == (3, 5)\nassert my_func([3437, 7905, -3641, -8731], 4264) == (7905, -3641)\nassert my_func([14, -35, 78], 43) == (-35, 78)\nassert my_func([-5, -20], -25) == (-5, -20)\nassert my_func([9859, -6964, -7144, 8740, 5224, -8321, 6774, 3033, -2469, -1007, 1428, -703, 4569, -5355, 4925, -7638, -9924], -3931) == (-6964, 3033)\nassert my_func([237, 410, -777], -367) == (410, -777)\nassert my_func([2920, -6275, 8680, 8184, -4232], 3952) == (8184, -4232)\nassert my_func([9546, -5742, -8659, 5298], 14844) == (9546, 5298)\nassert my_func([1492, 7016, 879, -2143, -5842, -2551, -3084, -4262, -2351], -4694) == (-2143, -2551)\nassert my_func([237, 410, -777], -540) == (237, -777)\nassert my_func([-7831, -3001], -10832) == (-7831, -3001)\nassert my_func([8310, -8320], -10) == (8310, -8320)\nassert my_func([6370, 9223, 1143, -2242, 4, -9670, 4287, -5571, 6291, -9207, 8385, 8179, -136], -1491) == (-9670, 8179)\nassert my_func([4331, 7921, -7566, 1805], 6136) == (4331, 1805)\nassert my_func([-310, -5786, 5266, 6166, 1473, -1512, -7349, -8753, -2091, -4889, 7821, 8755, -3656], 1277) == (6166, -4889)\nassert my_func([9492, -3791, -7317], 5701) == (9492, -3791)\nassert my_func([5, 7], 12) == (5, 7)\nassert my_func([-3508, 6942, 8542, -3735, 4842, -3315, -8645, -1346, -6442, 5524, -4054, -7279, 5260, -1952, -6863, 9539], -5460) == (-3508, -1952)\nassert my_func([1018, -3991, -153, -9209, 1364, 1584, 7655, 2705, -9333, -7028, -1519, 5135], 2552) == (-153, 2705)\nassert my_func([14, -35, 78], 92) == (14, 78)\nassert my_func([-4, 4], 0) == (-4, 4)\nassert my_func([67, 321, -3755, -2522], -3434) == (321, -3755)\nassert my_func([40, -19], 21) == (40, -19)\nassert my_func([9492, -3791, -7317], 2175) == (9492, -7317)\nassert my_func([-3790, 7641, -1663, 6516, -7075, 2503, 5557, -2258, 7892, 2918, 4900, 2535, -9843, -5768, 7840, -3709], -4943) == (4900, -9843)\nassert my_func([14, -35, 78], -21) == (14, -35)\nassert my_func([-3296, 787, -6541, -6427, -6852, 4667, 4097, -3920, -3888, 7790, -159], 938) == (-6852, 7790)\nassert my_func([-9678, 8301, 1705, -4207, -3153, 3666, -7549, -9154, 4569, -2508], -1448) == (1705, -3153)\nassert my_func([0, 1234], 1234) == (0, 1234)\nassert my_func([-1, 0, 1], 1) == (0, 1)\n"}
{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(input1, input2):\n    input1 = sorted(input1)\n    if input2 < sum(input1) / 2:\n        return input1[0], input1[1]\n    else:\n        return input1[-2], input1[-1]\n"}
{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(arr, target):\n    arr.sort()\n    left, right = 0, len(arr) - 1\n    while left < right:\n        s = arr[left] + arr[right]\n        if s == target:\n            return arr[left], arr[right]\n        elif s < target:\n            left += 1\n        else:\n            right -= 1\n    return None\n"}
{"question": [" ", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(input1, input2):\n    input1 = eval(input1)  # Convert string representation of list to actual list\n    # Sort input1 based on the absolute difference from input2\n    sorted_input = sorted(input1, key=lambda x: abs(x - input2))\n    # Return the first two elements\n    return sorted_input[0], sorted_input[1]\n"}
{"question": ["", "a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]", "2 integers"], "context": "{\"Example 0\":{\"input1\":\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\",\"input2\":-5080,\"output1\":277,\"output2\":-5357},\"Example 1\":{\"input1\":\"[-9664 8051 4990 4198 5230 -4335 -5492 994 1256 -256 9894 -9569 -7492 -5408 7260 -2441 100]\",\"input2\":8516,\"output1\":1256,\"output2\":7260},\"Example 2\":{\"input1\":\"[2650 6057 7986 5430]\",\"input2\":8080,\"output1\":2650,\"output2\":5430},\"Example 3\":{\"input1\":\"[-14 5]\",\"input2\":-9,\"output1\":-14,\"output2\":5},\"Example 4\":{\"input1\":\"[4742 2691 -2860 5513 2172 -9231]\",\"input2\":7685,\"output1\":5513,\"output2\":2172},\"Example 5\":{\"input1\":\"[-2156 2808 5575]\",\"input2\":8383,\"output1\":2808,\"output2\":5575},\"Example 6\":{\"input1\":\"[1 3 5]\",\"input2\":4,\"output1\":1,\"output2\":3},\"Example 7\":{\"input1\":\"[3761 -1416 -3804]\",\"input2\":-43,\"output1\":3761,\"output2\":-3804},\"Example 8\":{\"input1\":\"[-4165 3030 4327 -8278 3151 -8603 7659 -8930]\",\"input2\":-5900,\"output1\":3030,\"output2\":-8930},\"Example 9\":{\"input1\":\"[3174 -8792 -6758 -4497 -3264 -1690 8446 964]\",\"input2\":4138,\"output1\":3174,\"output2\":964},\"Example 10\":{\"input1\":\"[-9100 -1911 -2150 9609]\",\"input2\":-11011,\"output1\":-9100,\"output2\":-1911},\"Example 11\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":-11108,\"output1\":-3791,\"output2\":-7317},\"Example 12\":{\"input1\":\"[-1 0 1]\",\"input2\":0,\"output1\":-1,\"output2\":1},\"Example 13\":{\"input1\":\"[-1 0 1]\",\"input2\":-1,\"output1\":-1,\"output2\":0},\"Example 14\":{\"input1\":\"[10000 -10000]\",\"input2\":0,\"output1\":10000,\"output2\":-10000},\"Example 15\":{\"input1\":\"[2500 6352]\",\"input2\":8852,\"output1\":2500,\"output2\":6352},\"Example 16\":{\"input1\":\"[1 3 5]\",\"input2\":6,\"output1\":1,\"output2\":5},\"Example 17\":{\"input1\":\"[237 410 -777]\",\"input2\":647,\"output1\":237,\"output2\":410},\"Example 18\":{\"input1\":\"[1435 4488 -9727 -1775 3294]\",\"input2\":-5239,\"output1\":4488,\"output2\":-9727},\"Example 19\":{\"input1\":\"[3085 -4615 -4840 7622 -6043 6375 -5280 -3767 -2926 -8478 -3141]\",\"input2\":-13758,\"output1\":-5280,\"output2\":-8478},\"Example 20\":{\"input1\":\"[1 3 5]\",\"input2\":8,\"output1\":3,\"output2\":5},\"Example 21\":{\"input1\":\"[3437 7905 -3641 -8731]\",\"input2\":4264,\"output1\":7905,\"output2\":-3641},\"Example 22\":{\"input1\":\"[14 -35 78]\",\"input2\":43,\"output1\":-35,\"output2\":78},\"Example 23\":{\"input1\":\"[-5 -20]\",\"input2\":-25,\"output1\":-5,\"output2\":-20},\"Example 24\":{\"input1\":\"[9859 -6964 -7144 8740 5224 -8321 6774 3033 -2469 -1007 1428 -703 4569 -5355 4925 -7638 -9924]\",\"input2\":-3931,\"output1\":-6964,\"output2\":3033},\"Example 25\":{\"input1\":\"[237 410 -777]\",\"input2\":-367,\"output1\":410,\"output2\":-777},\"Example 26\":{\"input1\":\"[2920 -6275 8680 8184 -4232]\",\"input2\":3952,\"output1\":8184,\"output2\":-4232},\"Example 27\":{\"input1\":\"[9546 -5742 -8659 5298]\",\"input2\":14844,\"output1\":9546,\"output2\":5298},\"Example 28\":{\"input1\":\"[1492 7016 879 -2143 -5842 -2551 -3084 -4262 -2351]\",\"input2\":-4694,\"output1\":-2143,\"output2\":-2551},\"Example 29\":{\"input1\":\"[237 410 -777]\",\"input2\":-540,\"output1\":237,\"output2\":-777},\"Example 30\":{\"input1\":\"[-7831 -3001]\",\"input2\":-10832,\"output1\":-7831,\"output2\":-3001},\"Example 31\":{\"input1\":\"[8310 -8320]\",\"input2\":-10,\"output1\":8310,\"output2\":-8320},\"Example 32\":{\"input1\":\"[6370 9223 1143 -2242 4 -9670 4287 -5571 6291 -9207 8385 8179 -136]\",\"input2\":-1491,\"output1\":-9670,\"output2\":8179},\"Example 33\":{\"input1\":\"[4331 7921 -7566 1805]\",\"input2\":6136,\"output1\":4331,\"output2\":1805},\"Example 34\":{\"input1\":\"[-310 -5786 5266 6166 1473 -1512 -7349 -8753 -2091 -4889 7821 8755 -3656]\",\"input2\":1277,\"output1\":6166,\"output2\":-4889},\"Example 35\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":5701,\"output1\":9492,\"output2\":-3791},\"Example 36\":{\"input1\":\"[5 7]\",\"input2\":12,\"output1\":5,\"output2\":7},\"Example 37\":{\"input1\":\"[-3508 6942 8542 -3735 4842 -3315 -8645 -1346 -6442 5524 -4054 -7279 5260 -1952 -6863 9539]\",\"input2\":-5460,\"output1\":-3508,\"output2\":-1952},\"Example 38\":{\"input1\":\"[1018 -3991 -153 -9209 1364 1584 7655 2705 -9333 -7028 -1519 5135]\",\"input2\":2552,\"output1\":-153,\"output2\":2705},\"Example 39\":{\"input1\":\"[14 -35 78]\",\"input2\":92,\"output1\":14,\"output2\":78},\"Example 40\":{\"input1\":\"[-4 4]\",\"input2\":0,\"output1\":-4,\"output2\":4},\"Example 41\":{\"input1\":\"[67 321 -3755 -2522]\",\"input2\":-3434,\"output1\":321,\"output2\":-3755},\"Example 42\":{\"input1\":\"[40 -19]\",\"input2\":21,\"output1\":40,\"output2\":-19},\"Example 43\":{\"input1\":\"[9492 -3791 -7317]\",\"input2\":2175,\"output1\":9492,\"output2\":-7317},\"Example 44\":{\"input1\":\"[-3790 7641 -1663 6516 -7075 2503 5557 -2258 7892 2918 4900 2535 -9843 -5768 7840 -3709]\",\"input2\":-4943,\"output1\":4900,\"output2\":-9843},\"Example 45\":{\"input1\":\"[14 -35 78]\",\"input2\":-21,\"output1\":14,\"output2\":-35},\"Example 46\":{\"input1\":\"[-3296 787 -6541 -6427 -6852 4667 4097 -3920 -3888 7790 -159]\",\"input2\":938,\"output1\":-6852,\"output2\":7790},\"Example 47\":{\"input1\":\"[-9678 8301 1705 -4207 -3153 3666 -7549 -9154 4569 -2508]\",\"input2\":-1448,\"output1\":1705,\"output2\":-3153},\"Example 48\":{\"input1\":\"[0 1234]\",\"input2\":1234,\"output1\":0,\"output2\":1234},\"Example 49\":{\"input1\":\"[-1 0 1]\",\"input2\":1,\"output1\":0,\"output2\":1}}", "response": "\ndef my_func(input1, input2):\n    \"\"\"\n    Accepts inputs containing a vector of integers and an integer,\n    and outputs two integers according to the observed pattern.\n    \"\"\"\n    import numpy as np\n    \n    # Parse input1 from string format to a list of integers\n    input1 = list(map(int, input1.strip('[]').split()))\n    \n    # Initialize variables to track the best pair and the smallest difference\n    best_pair = None\n    smallest_diff = float('inf')\n    \n    # Check all pairs in input1\n    for i in range(len(input1)):\n        for j in range(i + 1, len(input1)):\n            # Calculate the sum of the current pair\n            pair_sum = input1[i] + input1[j]\n            # Calculate the difference from input2\n            diff = abs(pair_sum - input2)\n            \n            # Update the best pair if the current difference is smaller\n            if diff < smallest_diff:\n                smallest_diff = diff\n                best_pair = (input1[i], input1[j])\n    \n    # Return the best pair found\n    return best_pair\n\n# Example usage:\n# output1, output2 = my_func(\"[277 3127 -188 1445 7641 3412 -2483 -5357 -3457 6542]\", -5080)\n# print(output1, output2)  # Output should be: 277, -5357\n"}
