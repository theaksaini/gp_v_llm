{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"--------------------\",\"output1\":0},\"1\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"2\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"3\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"4\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"5\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"6\":{\"input1\":\"------X------------\",\"output1\":10},\"7\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"10\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"11\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"12\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"13\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120},\"14\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"15\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"16\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"17\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"18\":{\"input1\":\"--X34--------------\",\"output1\":24},\"19\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"20\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"21\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"22\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"23\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"24\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"25\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"26\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"27\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"28\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"29\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"30\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"31\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"32\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"33\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"34\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"35\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"36\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"37\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"38\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"39\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"40\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"41\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"42\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"43\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"44\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"45\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"46\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"47\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"48\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"49\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69}}", "response": "\ndef my_func(bowling_card: str) -> int:\n    import numpy as np\n    \n    score = 0\n    rolls = list(bowling_card)\n    frame = 0\n    roll_index = 0\n\n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + get_value(rolls, roll_index + 1) + get_value(rolls, roll_index + 2)\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + get_value(rolls, roll_index + 2)\n            roll_index += 2\n        else:  # Open Frame\n            score += get_value(rolls, roll_index) + get_value(rolls, roll_index + 1)\n            roll_index += 2\n        \n        frame += 1\n\n    return score\n\ndef get_value(rolls, index):\n    if index >= len(rolls):\n        return 0\n    if rolls[index] == 'X':\n        return 10\n    if rolls[index] == '/':\n        return 10 - get_value(rolls, index - 1)\n    if rolls[index] == '-':\n        return 0\n    return int(rolls[index])\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"--------------------\",\"output1\":0},\"1\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"2\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"3\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"4\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"5\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"6\":{\"input1\":\"------X------------\",\"output1\":10},\"7\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"10\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"11\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"12\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"13\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120},\"14\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"15\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"16\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"17\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"18\":{\"input1\":\"--X34--------------\",\"output1\":24},\"19\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"20\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"21\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"22\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"23\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"24\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"25\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"26\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"27\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"28\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"29\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"30\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"31\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"32\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"33\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"34\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"35\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"36\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"37\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"38\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"39\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"40\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"41\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"42\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"43\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"44\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"45\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"46\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"47\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"48\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"49\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69}}", "response": "\nimport numpy as np\n\ndef my_func(bowling_card):\n    rolls = list(bowling_card)\n    total_score = 0\n    roll_index = 0\n    frames = 0\n\n    while frames < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10\n            if roll_index + 1 < len(rolls):\n                total_score += score_roll(rolls[roll_index + 1])\n            if roll_index + 2 < len(rolls):\n                total_score += score_roll(rolls[roll_index + 2])\n            roll_index += 1\n            frames += 1\n        elif roll_index + 1 < len(rolls) and rolls[roll_index + 1] == '/':  # Spare\n            total_score += 10\n            if roll_index + 2 < len(rolls):\n                total_score += score_roll(rolls[roll_index + 2])\n            roll_index += 2\n            frames += 1\n        else:  # Open frame\n            total_score += score_roll(rolls[roll_index]) + score_roll(rolls[roll_index + 1])\n            roll_index += 2\n            frames += 1\n\n    return total_score\n\ndef score_roll(roll):\n    if roll == 'X':\n        return 10\n    elif roll == '/':\n        return 10\n    elif roll == '-':\n        return 0\n    else:\n        return int(roll)\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"--------------------\",\"output1\":0},\"1\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"2\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"3\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"4\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"5\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"6\":{\"input1\":\"------X------------\",\"output1\":10},\"7\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"10\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"11\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"12\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"13\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120},\"14\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"15\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"16\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"17\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"18\":{\"input1\":\"--X34--------------\",\"output1\":24},\"19\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"20\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"21\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"22\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"23\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"24\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"25\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"26\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"27\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"28\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"29\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"30\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"31\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"32\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"33\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"34\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"35\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"36\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"37\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"38\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"39\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"40\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"41\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"42\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"43\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"44\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"45\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"46\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"47\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"48\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"49\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69}}", "response": "\ndef my_func(bowling_card: str) -> int:\n    frames = []\n    score = 0\n    roll_index = 0\n    rolls = list(bowling_card)\n\n    while roll_index < len(rolls):\n        if len(frames) == 10:\n            break\n\n        roll = rolls[roll_index]\n\n        if roll == 'X':  # Strike\n            frames.append(('X',))\n            roll_index += 1\n        elif roll == '/':  # Spare\n            frames.append((rolls[roll_index - 1], '/'))\n            roll_index += 1\n        else:\n            if roll_index + 1 < len(rolls) and rolls[roll_index + 1] == '/':\n                frames.append((roll, '/'))\n                roll_index += 2\n            else:\n                if roll == '-':\n                    roll = '0'\n                frames.append((roll, rolls[roll_index + 1] if roll_index + 1 < len(rolls) else '0'))\n                roll_index += 2\n\n    for frame_index in range(len(frames)):\n        frame = frames[frame_index]\n\n        if frame[0] == 'X':  # Strike\n            score += 10\n            if frame_index < len(frames) - 1:\n                next_frame = frames[frame_index + 1]\n                if next_frame[0] == 'X':\n                    score += 10\n                    if frame_index < len(frames) - 2:\n                        second_next_frame = frames[frame_index + 2]\n                        if second_next_frame[0] == 'X':\n                            score += 10\n                        else:\n                            score += int(second_next_frame[0]) if second_next_frame[0] != '-' else 0\n                    else:\n                        score += 0\n                else:\n                    score += int(next_frame[0]) if next_frame[0] != '-' else 0\n                    score += 10 if next_frame[1] == '/' else int(next_frame[1]) if next_frame[1] != '-' else 0\n        elif frame[1] == '/':  # Spare\n            score += 10\n            if frame_index < len(frames) - 1:\n                next_frame = frames[frame_index + 1]\n                score += 10 if next_frame[0] == 'X' else int(next_frame[0]) if next_frame[0] != '-' else 0\n        else:\n            score += (int(frame[0]) if frame[0] != '-' else 0) + (int(frame[1]) if frame[1] != '-' else 0)\n\n    return score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"--------------------\",\"output1\":0},\"1\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"2\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"3\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"4\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"5\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"6\":{\"input1\":\"------X------------\",\"output1\":10},\"7\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"10\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"11\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"12\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"13\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120},\"14\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"15\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"16\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"17\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"18\":{\"input1\":\"--X34--------------\",\"output1\":24},\"19\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"20\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"21\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"22\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"23\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"24\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"25\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"26\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"27\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"28\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"29\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"30\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"31\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"32\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"33\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"34\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"35\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"36\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"37\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"38\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"39\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"40\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"41\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"42\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"43\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"44\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"45\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"46\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"47\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"48\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"49\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69}}", "response": "\ndef my_func(bowling_card: str) -> int:\n    frames = []\n    score = 0\n    roll_index = 0\n    rolls = list(bowling_card)\n\n    while roll_index < len(rolls):\n        if len(frames) == 10:\n            break\n\n        roll = rolls[roll_index]\n\n        if roll == 'X':  # Strike\n            frames.append(('X',))\n            roll_index += 1\n        elif roll == '/':  # Spare\n            frames.append((rolls[roll_index - 1], '/'))\n            roll_index += 1\n        else:\n            if roll_index + 1 < len(rolls) and rolls[roll_index + 1] == '/':\n                frames.append((roll, '/'))\n                roll_index += 2\n            else:\n                if roll == '-':\n                    roll = '0'\n                frames.append((roll, rolls[roll_index + 1] if roll_index + 1 < len(rolls) else '0'))\n                roll_index += 2\n\n    for frame_index in range(len(frames)):\n        frame = frames[frame_index]\n\n        if frame[0] == 'X':  # Strike\n            score += 10\n            if frame_index < 9:  # Not in the 10th frame\n                next_two_rolls = []\n                for i in range(1, 3):\n                    if frame_index + i < len(frames):\n                        next_frame = frames[frame_index + i]\n                        next_two_rolls.extend(next_frame)\n\n                if len(next_two_rolls) < 2:\n                    if roll_index < len(rolls):\n                        next_two_rolls.append(rolls[roll_index])\n\n                for i in range(2):\n                    if i < len(next_two_rolls):\n                        next_roll = next_two_rolls[i]\n                        if next_roll == 'X':\n                            score += 10\n                        elif next_roll == '/':\n                            score += 10 - int(frames[frame_index + i][0])\n                        elif next_roll != '-':\n                            score += int(next_roll)\n\n        elif frame[1] == '/':  # Spare\n            score += 10\n            if frame_index < 9:  # Not in the 10th frame\n                next_roll = rolls[roll_index] if roll_index < len(rolls) else '0'\n                if next_roll == 'X':\n                    score += 10\n                elif next_roll != '-':\n                    score += int(next_roll)\n            else:\n                score += 10 - int(frame[0])\n\n        else:  # Open frame\n            if frame[0] != '-':\n                score += int(frame[0])\n            if frame[1] != '-':\n                score += int(frame[1])\n\n    return score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"--------------------\",\"output1\":0},\"1\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"2\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"3\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"4\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"5\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"6\":{\"input1\":\"------X------------\",\"output1\":10},\"7\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"10\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"11\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"12\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"13\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120},\"14\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"15\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"16\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"17\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"18\":{\"input1\":\"--X34--------------\",\"output1\":24},\"19\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"20\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"21\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"22\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"23\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"24\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"25\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"26\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"27\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"28\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"29\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"30\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"31\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"32\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"33\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"34\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"35\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"36\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"37\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"38\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"39\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"40\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"41\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"42\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"43\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"44\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"45\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"46\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"47\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"48\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"49\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69}}", "response": "\ndef my_func(bowling_card: str) -> int:\n    frames = []\n    score = 0\n    roll_index = 0\n    rolls = list(bowling_card)\n\n    while roll_index < len(rolls):\n        if len(frames) == 10:\n            break\n\n        roll = rolls[roll_index]\n\n        if roll == 'X':  # Strike\n            frames.append(('X',))\n            roll_index += 1\n        elif roll == '/':  # Spare\n            frames.append((rolls[roll_index - 1], '/'))\n            roll_index += 1\n        else:\n            if roll_index + 1 < len(rolls) and rolls[roll_index + 1] == '/':\n                frames.append((roll, '/'))\n                roll_index += 2\n            else:\n                if roll == '-':\n                    roll = '0'\n                if roll_index + 1 < len(rolls):\n                    next_roll = rolls[roll_index + 1]\n                    if next_roll == '-':\n                        next_roll = '0'\n                    frames.append((roll, next_roll))\n                    roll_index += 2\n                else:\n                    frames.append((roll,))\n                    roll_index += 1\n\n    for i in range(min(10, len(frames))):\n        frame = frames[i]\n        if frame[0] == 'X':  # Strike\n            score += 10\n            if i + 1 < len(frames):\n                next_frame = frames[i + 1]\n                if next_frame[0] == 'X':\n                    score += 10\n                    if i + 2 < len(frames):\n                        next_next_frame = frames[i + 2]\n                        if next_next_frame[0] == 'X':\n                            score += 10\n                        else:\n                            score += int(next_next_frame[0].replace('-', '0'))\n                    elif i + 1 < len(frames):\n                        if len(next_frame) > 1 and next_frame[1] == '/':\n                            score += 10\n                        else:\n                            score += int(next_frame[1].replace('-', '0'))\n                else:\n                    score += int(next_frame[0].replace('-', '0'))\n                    if next_frame[1] == '/':\n                        score += 10 - int(next_frame[0].replace('-', '0'))\n                    else:\n                        score += int(next_frame[1].replace('-', '0'))\n        elif frame[1] == '/':  # Spare\n            score += 10\n            if i + 1 < len(frames):\n                next_frame = frames[i + 1]\n                score += int(next_frame[0].replace('-', '0'))\n        else:\n            score += int(frame[0].replace('-', '0'))\n            score += int(frame[1].replace('-', '0'))\n\n    return score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"--------------------\",\"output1\":0},\"1\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"2\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"3\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"4\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"5\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"6\":{\"input1\":\"------X------------\",\"output1\":10},\"7\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"10\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"11\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"12\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"13\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120},\"14\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"15\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"16\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"17\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"18\":{\"input1\":\"--X34--------------\",\"output1\":24},\"19\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"20\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"21\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"22\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"23\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"24\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"25\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"26\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"27\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"28\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"29\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"30\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"31\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"32\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"33\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"34\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"35\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"36\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"37\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"38\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"39\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"40\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"41\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"42\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"43\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"44\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"45\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"46\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"47\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"48\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"49\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69}}", "response": "\ndef my_func(bowling_scorecard):\n    total_score = 0\n    frames = []\n    index = 0\n\n    # Parse the input string into frames\n    while index < len(bowling_scorecard):\n        if len(frames) == 10:  # Only 10 frames in a game\n            break\n        if bowling_scorecard[index] == 'X':  # Strike\n            frames.append('X')\n            index += 1\n        elif index + 1 < len(bowling_scorecard) and bowling_scorecard[index + 1] == '/':  # Spare\n            frames.append(bowling_scorecard[index:index+2])\n            index += 2\n        else:  # Open frame\n            frames.append(bowling_scorecard[index:index+2])\n            index += 2\n\n    # Calculate the total score\n    for idx, frame in enumerate(frames):\n        if frame == 'X':  # Strike\n            total_score += 10\n            if idx + 1 < len(frames):\n                next_frame = frames[idx + 1]\n                if next_frame == 'X':\n                    total_score += 10\n                    if idx + 2 < len(frames):\n                        next_next_frame = frames[idx + 2]\n                        total_score += 10 if next_next_frame == 'X' else int(next_next_frame[0]) if next_next_frame[0] != '-' else 0\n                else:\n                    total_score += 10 if next_frame[1] == '/' else sum(int(x) if x != '-' else 0 for x in next_frame)\n        elif '/' in frame:  # Spare\n            total_score += 10\n            if idx + 1 < len(frames):\n                next_frame = frames[idx + 1]\n                total_score += 10 if next_frame == 'X' else int(next_frame[0]) if next_frame[0] != '-' else 0\n        else:  # Open frame\n            total_score += sum(int(x) if x != '-' else 0 for x in frame)\n\n    return total_score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_scorecard):\n    total_score = 0\n    frames = []\n    current_frame = []\n    \n    # Iterate over each roll in the bowling scorecard\n    for roll in bowling_scorecard:\n        if roll == 'X':  # Strike\n            if len(current_frame) == 0:\n                frames.append([10])\n            else:\n                current_frame.append(10)\n        elif roll == '/':  # Spare\n            current_frame.append(10 - current_frame[0])\n            frames.append(current_frame)\n            current_frame = []\n        elif roll == '-':  # Miss\n            current_frame.append(0)\n        else:  # Numeric pins\n            current_frame.append(int(roll))\n        \n        # If the frame is completed\n        if len(current_frame) == 2:\n            frames.append(current_frame)\n            current_frame = []\n    \n    idx = 0\n    # Calculate total score\n    for frame in frames:\n        if idx < 10:\n            if len(frame) == 1:  # Strike\n                # Add score for strike and next two rolls\n                total_score += 10 + sum(frames[idx + 1][:2])\n                if len(frames[idx + 1]) == 1:\n                    total_score += frames[idx + 2][0]\n            elif sum(frame) == 10:  # Spare\n                # Add score for spare and next one roll\n                total_score += 10 + frames[idx + 1][0]\n            else:\n                # Normal frame\n                total_score += sum(frame)\n        idx += 1\n\n    return total_score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_scorecard):\n    total_score = 0\n    frames = []\n    current_frame = []\n    \n    # Iterate over each roll in the bowling scorecard\n    for roll in bowling_scorecard:\n        if roll == 'X':  # Strike\n            if len(current_frame) == 0:\n                frames.append([10])\n            else:\n                current_frame.append(10)\n        elif roll == '/':  # Spare\n            current_frame.append(10 - current_frame[0])\n        elif roll == '-':  # Miss\n            current_frame.append(0)\n        else:  # Number of pins knocked down\n            current_frame.append(int(roll))\n        \n        # Add frame to frames if it's complete\n        if len(current_frame) == 2 or (len(current_frame) == 1 and current_frame[0] == 10):\n            frames.append(current_frame)\n            current_frame = []\n    \n    # Calculate score\n    for i, frame in enumerate(frames[:10]):  # Only first 10 frames count\n        # Sum of current frame\n        frame_score = sum(frame)\n        \n        # Check for strike\n        if frame[0] == 10:  # Strike\n            if i + 1 < len(frames):\n                frame_score += sum(frames[i + 1][:2])\n                if len(frames[i + 1]) < 2 and i + 2 < len(frames):\n                    frame_score += frames[i + 2][0]\n        \n        # Check for spare\n        elif sum(frame) == 10:  # Spare\n            if i + 1 < len(frames):\n                frame_score += frames[i + 1][0]\n        \n        total_score += frame_score\n    \n    return total_score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(scorecard):\n    total_score = 0\n    rolls = list(scorecard)\n    index = 0\n\n    def roll_value(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10 - roll_value(rolls[index - 1])\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n\n    for frame in range(10):\n        if rolls[index] == 'X':  # Strike\n            total_score += 10 + roll_value(rolls[index + 1]) + roll_value(rolls[index + 2])\n            index += 1\n        elif rolls[index + 1] == '/':  # Spare\n            total_score += 10 + roll_value(rolls[index + 2])\n            index += 2\n        else:  # Open frame\n            total_score += roll_value(rolls[index]) + roll_value(rolls[index + 1])\n            index += 2\n\n    return total_score\n\n\n# Test cases\nassert my_func(\"62363563X9/429/628-\") == 106\nassert my_func(\"219-8/45178/4/-56-62\") == 86\nassert my_func(\"XXXXXXXXXXX9\") == 299\nassert my_func(\"9-9-178-24344-1-9/XX6\") == 98\nassert my_func(\"36413/3581368-9/9-71\") == 97\nassert my_func(\"316-6/-38/728-622/X77\") == 109\nassert my_func(\"22247/9/3116435/1561\") == 84\nassert my_func(\"6/62-34/X9/X52-38/1\") == 125\nassert my_func(\"--------------1-----\") == 1\nassert my_func(\"-4-/-2-/-7-6-/-3-/-4\") == 66\nassert my_func(\"2345-361X139/7-9/X5X\") == 111\nassert my_func(\"63259-6/328/812-2/9-\") == 100\nassert my_func(\"7115XXX548/279-X53\") == 145\nassert my_func(\"5/5/5/5/5/5/5/5/5/5/5\") == 150\nassert my_func(\"5/1/619-7/5-3/9/3/5/6\") == 126\nassert my_func(\"XXXXX----------\") == 120\nassert my_func(\"-/-/-/-/-/-/-/-/-/-/-\") == 100\nassert my_func(\"4-5-819-35518-54113-\") == 63\nassert my_func(\"XXXXX81XXX-1\") == 208\nassert my_func(\"72269/7-8-1/4/8-X32\") == 109\nassert my_func(\"9/7217-14/4/X-7X62\") == 119\nassert my_func(\"----------3/--------\") == 10\nassert my_func(\"42X156/X451/545-36\") == 114\nassert my_func(\"11-9X329-X817-9/44\") == 97\nassert my_func(\"------3/61----------\") == 23\nassert my_func(\"6/128/17X32361/3563\") == 92\nassert my_func(\"4-22723/9/439/24363-\") == 87\nassert my_func(\"--------------------\") == 0\nassert my_func(\"814553X3-2551718/53\") == 86\nassert my_func(\"6-9-X6-719/-2X5-72\") == 86\nassert my_func(\"11111111111111111111\") == 20\nassert my_func(\"0/189/260/11327/2434\") == 83\nassert my_func(\"------X------------\") == 10\nassert my_func(\"532/4362X179-41447/5\") == 100\nassert my_func(\"818-3/53514223279/9-\") == 94\nassert my_func(\"----------XX7-----\") == 51\nassert my_func(\"24815361356212813581\") == 75\nassert my_func(\"XXXXXXXXXXXX\") == 300\nassert my_func(\"XXXX9/XXX2/XXX\") == 251\nassert my_func(\"264-619-X8/9-4561X11\") == 104\nassert my_func(\"617/5443369-32325/41\") == 85\nassert my_func(\"16X547/619-14X-1X35\") == 102\nassert my_func(\"111111X111111111111\") == 30\nassert my_func(\"169/9-6-4-42-7721581\") == 82\nassert my_func(\"345-454-25429-2-625-\") == 62\nassert my_func(\"9-XX61165-34--1-7-\") == 86\nassert my_func(\"--X34--------------\") == 24\nassert my_func(\"0/325/5-245-8-12351-\") == 69\nassert my_func(\"4541115-621/X34454/4\") == 96\nassert my_func(\"X52X52X52X52X52\") == 120\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    # Initialize variables\n    total_score = 0\n    frames = []\n    current_frame = []\n    \n    # Loop through each roll in the bowling card\n    for roll in bowling_card:\n        # Convert roll to its numeric value\n        if roll == 'X':  # Strike\n            current_frame.append(10)\n        elif roll == '/':  # Spare\n            current_frame.append(10 - current_frame[-1])\n        elif roll == '-':  # Miss\n            current_frame.append(0)\n        else:  # Normal roll\n            current_frame.append(int(roll))\n        \n        # Check if the frame is complete\n        if roll == 'X' or len(current_frame) == 2:\n            frames.append(current_frame)\n            current_frame = []\n    \n    # Calculate the score for each frame\n    for i in range(10):  # Only the first 10 frames matter\n        frame = frames[i]\n        # If it's a strike\n        if frame[0] == 10:\n            # Add the next two rolls to the score\n            if len(frames[i + 1]) == 1:  # Next frame is also a strike\n                total_score += 10 + frames[i + 1][0] + frames[i + 2][0]\n            else:\n                total_score += 10 + frames[i + 1][0] + frames[i + 1][1]\n        # If it's a spare\n        elif sum(frame) == 10:\n            # Add the next roll to the score\n            total_score += 10 + frames[i + 1][0]\n        else:\n            # Normal frame\n            total_score += sum(frame)\n    \n    return total_score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(score_card):\n    total_score = 0\n    rolls = list(score_card)\n    roll_index = 0\n    \n    for frame in range(10):\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10 + get_value(rolls, roll_index + 1) + get_value(rolls, roll_index + 2)\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            total_score += 10 + get_value(rolls, roll_index + 2)\n            roll_index += 2\n        else:  # Open frame\n            total_score += get_value(rolls, roll_index) + get_value(rolls, roll_index + 1)\n            roll_index += 2\n    \n    return total_score\n\ndef get_value(rolls, index):\n    if index >= len(rolls):\n        return 0\n    if rolls[index] == 'X':\n        return 10\n    if rolls[index] == '/':\n        return 10 - get_value(rolls, index - 1)\n    if rolls[index] == '-':\n        return 0\n    return int(rolls[index])\n\n# Testing the function with the provided assertions\nassert my_func(\"62363563X9/429/628-\") == 106\nassert my_func(\"219-8/45178/4/-56-62\") == 86\nassert my_func(\"XXXXXXXXXXX9\") == 299\nassert my_func(\"9-9-178-24344-1-9/XX6\") == 98\nassert my_func(\"36413/3581368-9/9-71\") == 97\nassert my_func(\"316-6/-38/728-622/X77\") == 109\nassert my_func(\"22247/9/3116435/1561\") == 84\nassert my_func(\"6/62-34/X9/X52-38/1\") == 125\nassert my_func(\"--------------1-----\") == 1\nassert my_func(\"-4-/-2-/-7-6-/-3-/-4\") == 66\nassert my_func(\"2345-361X139/7-9/X5X\") == 111\nassert my_func(\"63259-6/328/812-2/9-\") == 100\nassert my_func(\"7115XXX548/279-X53\") == 145\nassert my_func(\"5/5/5/5/5/5/5/5/5/5/5\") == 150\nassert my_func(\"5/1/619-7/5-3/9/3/5/6\") == 126\nassert my_func(\"XXXXX----------\") == 120\nassert my_func(\"-/-/-/-/-/-/-/-/-/-/-\") == 100\nassert my_func(\"4-5-819-35518-54113-\") == 63\nassert my_func(\"XXXXX81XXX-1\") == 208\nassert my_func(\"72269/7-8-1/4/8-X32\") == 109\nassert my_func(\"9/7217-14/4/X-7X62\") == 119\nassert my_func(\"----------3/--------\") == 10\nassert my_func(\"42X156/X451/545-36\") == 114\nassert my_func(\"11-9X329-X817-9/44\") == 97\nassert my_func(\"------3/61----------\") == 23\nassert my_func(\"6/128/17X32361/3563\") == 92\nassert my_func(\"4-22723/9/439/24363-\") == 87\nassert my_func(\"--------------------\") == 0\nassert my_func(\"814553X3-2551718/53\") == 86\nassert my_func(\"6-9-X6-719/-2X5-72\") == 86\nassert my_func(\"11111111111111111111\") == 20\nassert my_func(\"0/189/260/11327/2434\") == 83\nassert my_func(\"------X------------\") == 10\nassert my_func(\"532/4362X179-41447/5\") == 100\nassert my_func(\"818-3/53514223279/9-\") == 94\nassert my_func(\"----------XX7-----\") == 51\nassert my_func(\"24815361356212813581\") == 75\nassert my_func(\"XXXXXXXXXXXX\") == 300\nassert my_func(\"XXXX9/XXX2/XXX\") == 251\nassert my_func(\"264-619-X8/9-4561X11\") == 104\nassert my_func(\"617/5443369-32325/41\") == 85\nassert my_func(\"16X547/619-14X-1X35\") == 102\nassert my_func(\"111111X111111111111\") == 30\nassert my_func(\"169/9-6-4-42-7721581\") == 82\nassert my_func(\"345-454-25429-2-625-\") == 62\nassert my_func(\"9-XX61165-34--1-7-\") == 86\nassert my_func(\"--X34--------------\") == 24\nassert my_func(\"0/325/5-245-8-12351-\") == 69\nassert my_func(\"4541115-621/X34454/4\") == 96\nassert my_func(\"X52X52X52X52X52\") == 120\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    frames = []\n    frame = []\n    i = 0\n\n    while i < len(input1):\n        roll = input1[i]\n        if roll == 'X':\n            frames.append([roll])\n            if len(frames) < 10:\n                i += 1\n                continue\n        else:\n            frame.append(roll)\n            if roll == '/':\n                frames[-1][1] = roll\n            else:\n                frames.append(frame[:])\n                frame = []\n        if len(frames) >= 10 and len(frames[9]) == 3:\n            break\n        i += 1\n\n    score = 0\n    for i in range(10):\n        frame = frames[i]\n        if frame[0] == 'X':\n            score += 10\n            if i + 1 < len(frames):\n                next_frame = frames[i + 1]\n                if next_frame[0] == 'X':\n                    score += 10\n                    if i + 2 < len(frames):\n                        score += 10 if frames[i + 2][0] == 'X' else int(frames[i + 2][0])\n                else:\n                    score += int(next_frame[0]) + (10 if next_frame[1] == '/' else int(next_frame[1]))\n        elif frame[1] == '/':\n            score += 10\n            if i + 1 < len(frames):\n                score += 10 if frames[i + 1][0] == 'X' else int(frames[i + 1][0])\n        else:\n            score += sum(int(roll) for roll in frame if roll.isdigit())\n    return score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(score):\n    frames = []\n    current_frame = []\n    i = 0\n\n    while i < len(score):\n        c = score[i]\n        if c == 'X':\n            # Strike\n            frames.append((10,))\n            if len(current_frame) > 0:\n                frames.append(tuple(current_frame))\n                current_frame = []\n        elif c == '/':\n            # Spare\n            current_frame.append(10 - int(score[i-1]))\n            frames.append(tuple(current_frame))\n            current_frame = []\n        elif c == '-':\n            current_frame.append(0)\n            if len(current_frame) == 2:\n                frames.append(tuple(current_frame))\n                current_frame = []\n        else:\n            current_frame.append(int(c))\n            if len(current_frame) == 2:\n                frames.append(tuple(current_frame))\n                current_frame = []\n        i += 1\n\n    if len(current_frame) > 0:\n        frames.append(tuple(current_frame))\n\n    total_score = 0\n    for i, frame in enumerate(frames):\n        total_score += sum(frame)\n        if frame == (10,):  # Strike\n            if i + 1 < len(frames):\n                total_score += sum(frames[i + 1])\n                if len(frames[i + 1]) == 1 and i + 2 < len(frames):\n                    total_score += frames[i + 2][0]\n        elif len(frame) == 2 and sum(frame) == 10:  # Spare\n            if i + 1 < len(frames):\n                total_score += frames[i + 1][0]\n\n    return total_score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def roll_value(roll):\n        if roll == 'X':  # Strike\n            return 10\n        elif roll == '/':  # Spare\n            return 10\n        elif roll == '-':  # Miss\n            return 0\n        else:\n            return int(roll)\n\n    score = 0\n    roll_index = 0\n    rolls = list(bowling_card)\n    for frame in range(10):  # There are 10 frames in a game of bowling\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + roll_value(rolls[roll_index + 1]) + roll_value(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + roll_value(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += roll_value(rolls[roll_index]) + roll_value(rolls[roll_index + 1])\n            roll_index += 2\n    \n    return score\n\n# Example usage\nexample_input = \"62363563X9/429/628-\"\nprint(my_func(example_input))  # Output should be 106\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    def roll_score(char):\n        if char == 'X':\n            return 10\n        elif char == '/':\n            return 10\n        elif char == '-':\n            return 0\n        else:\n            return int(char)\n    \n    rolls = list(input1)\n    total_score = 0\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10 + roll_score(rolls[roll_index+1]) + roll_score(rolls[roll_index+2])\n            roll_index += 1\n        elif rolls[roll_index+1] == '/':  # Spare\n            total_score += 10 + roll_score(rolls[roll_index+2])\n            roll_index += 2\n        else:  # Open frame\n            total_score += roll_score(rolls[roll_index]) + roll_score(rolls[roll_index+1])\n            roll_index += 2\n        frame += 1\n    \n    return total_score\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def score_char(char):\n        if char == 'X':\n            return 10\n        elif char == '/':\n            return 10  # We'll handle spares differently, so this is just a placeholder\n        elif char == '-':\n            return 0\n        else:\n            return int(char)\n    \n    score = 0\n    rolls = list(bowling_card)\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + score_char(rolls[roll_index + 1]) + score_char(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + score_char(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += score_char(rolls[roll_index]) + score_char(rolls[roll_index + 1])\n            roll_index += 2\n        frame += 1\n\n    return score\n\n# Examples to test the function\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    \"\"\"\n    Calculate the bowling score from a string representing a completed bowling card.\n    \n    :param bowling_card: str, a string where each character represents a roll in a bowling game.\n    :return: int, the total score of the bowling game.\n    \"\"\"\n    # Initialize variables\n    total_score = 0\n    rolls = []\n    \n    # Parse the bowling card into a list of rolls\n    i = 0\n    while i < len(bowling_card):\n        if bowling_card[i] == 'X':  # Strike\n            rolls.append(10)\n            i += 1\n        elif bowling_card[i] == '/':  # Spare\n            rolls.append(10 - rolls[-1])\n            i += 1\n        elif bowling_card[i] == '-':  # Miss\n            rolls.append(0)\n            i += 1\n        else:  # Regular number\n            rolls.append(int(bowling_card[i]))\n            i += 1\n    \n    # Calculate the score\n    frame_index = 0\n    for frame in range(10):\n        if rolls[frame_index] == 10:  # Strike\n            total_score += 10 + rolls[frame_index + 1] + rolls[frame_index + 2]\n            frame_index += 1\n        elif rolls[frame_index] + rolls[frame_index + 1] == 10:  # Spare\n            total_score += 10 + rolls[frame_index + 2]\n            frame_index += 2\n        else:  # Open frame\n            total_score += rolls[frame_index] + rolls[frame_index + 1]\n            frame_index += 2\n    \n    return total_score\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def score_char(char):\n        if char == 'X':\n            return 10\n        elif char == '/':\n            return 10  # We'll handle spares differently, so this is just a placeholder\n        elif char == '-':\n            return 0\n        else:\n            return int(char)\n    \n    score = 0\n    rolls = list(bowling_card)\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + score_char(rolls[roll_index + 1]) + score_char(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + score_char(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += score_char(rolls[roll_index]) + score_char(rolls[roll_index + 1])\n            roll_index += 2\n        frame += 1\n\n    return score\n\n# Examples\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    rolls = list(input1)\n    total_score = 0\n    frame = 1\n    roll_index = 0\n    \n    def get_value(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n    \n    while frame <= 10:\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10 + get_value(rolls[roll_index+1]) + get_value(rolls[roll_index+2])\n            roll_index += 1\n        elif rolls[roll_index+1] == '/':  # Spare\n            total_score += 10 + get_value(rolls[roll_index+2])\n            roll_index += 2\n        else:  # Open frame\n            total_score += get_value(rolls[roll_index]) + get_value(rolls[roll_index+1])\n            roll_index += 2\n        frame += 1\n        \n    return total_score\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    def roll_value(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n    \n    rolls = list(input1)\n    total_score = 0\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10 + roll_value(rolls[roll_index+1]) + roll_value(rolls[roll_index+2])\n            roll_index += 1\n        elif rolls[roll_index+1] == '/':  # Spare\n            total_score += 10 + roll_value(rolls[roll_index+2])\n            roll_index += 2\n        else:  # Open frame\n            total_score += roll_value(rolls[roll_index]) + roll_value(rolls[roll_index+1])\n            roll_index += 2\n        frame += 1\n    \n    return total_score\n\n# Example usage:\n# print(my_func(\"XXXXXXXXXXXX\"))  # Should return 300\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def score_char(char):\n        if char == 'X':\n            return 10\n        elif char == '/':\n            return 10  # We'll handle spares differently, so this is just a placeholder\n        elif char == '-':\n            return 0\n        else:\n            return int(char)\n    \n    score = 0\n    rolls = list(bowling_card)\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + score_char(rolls[roll_index + 1]) + score_char(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + score_char(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += score_char(rolls[roll_index]) + score_char(rolls[roll_index + 1])\n            roll_index += 2\n        frame += 1\n\n    return score\n\n# Examples\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    rolls = list(input1)\n    total_score = 0\n    current_roll = 0\n    frames = 0\n\n    def roll_value(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10 - roll_value(rolls[current_roll - 1])\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n\n    while frames < 10:\n        if rolls[current_roll] == 'X':  # Strike\n            total_score += 10 + roll_value(rolls[current_roll + 1]) + roll_value(rolls[current_roll + 2])\n            current_roll += 1\n        elif rolls[current_roll + 1] == '/':  # Spare\n            total_score += 10 + roll_value(rolls[current_roll + 2])\n            current_roll += 2\n        else:  # Open frame\n            total_score += roll_value(rolls[current_roll]) + roll_value(rolls[current_roll + 1])\n            current_roll += 2\n        frames += 1\n\n    return total_score\n\n# Examples\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    def char_to_score(c):\n        if c == 'X':\n            return 10\n        elif c == '/':\n            return 10\n        elif c == '-':\n            return 0\n        else:\n            return int(c)\n\n    rolls = list(input1)\n    score = 0\n    frame_index = 0\n    frame = 1\n\n    while frame <= 10:\n        if rolls[frame_index] == 'X':  # Strike\n            score += 10 + char_to_score(rolls[frame_index + 1]) + char_to_score(rolls[frame_index + 2])\n            frame_index += 1\n        elif rolls[frame_index + 1] == '/':  # Spare\n            score += 10 + char_to_score(rolls[frame_index + 2])\n            frame_index += 2\n        else:  # Open frame\n            score += char_to_score(rolls[frame_index]) + char_to_score(rolls[frame_index + 1])\n            frame_index += 2\n\n        frame += 1\n\n    return score\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def score_char(char):\n        if char == 'X':\n            return 10\n        elif char == '/':\n            return 10  # We'll handle spares differently, so this is just a placeholder\n        elif char == '-':\n            return 0\n        else:\n            return int(char)\n    \n    score = 0\n    rolls = list(bowling_card)\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + score_char(rolls[roll_index + 1]) + score_char(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + score_char(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += score_char(rolls[roll_index]) + score_char(rolls[roll_index + 1])\n            roll_index += 2\n        frame += 1\n\n    return score\n\n# Examples\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    scores = []\n    roll_index = 0\n    rolls = list(input1)\n    frame = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            scores.append(10 + get_value(rolls[roll_index + 1]) + get_value(rolls[roll_index + 2]))\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            scores.append(10 + get_value(rolls[roll_index + 2]))\n            roll_index += 2\n        else:  # Open frame\n            scores.append(get_value(rolls[roll_index]) + get_value(rolls[roll_index + 1]))\n            roll_index += 2\n        frame += 1\n    \n    return sum(scores)\n\ndef get_value(roll):\n    if roll == 'X':\n        return 10\n    elif roll == '/':\n        return 10\n    elif roll == '-':\n        return 0\n    else:\n        return int(roll)\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def score_char(char):\n        if char == 'X':\n            return 10\n        elif char == '/':\n            return 10  # We'll handle spares differently, so this is just a placeholder\n        elif char == '-':\n            return 0\n        else:\n            return int(char)\n    \n    score = 0\n    rolls = list(bowling_card)\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + score_char(rolls[roll_index + 1]) + score_char(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + score_char(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += score_char(rolls[roll_index]) + score_char(rolls[roll_index + 1])\n            roll_index += 2\n        frame += 1\n\n    return score\n\n# Examples\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def score_char(char):\n        if char == 'X':\n            return 10\n        elif char == '/':\n            return 10  # We'll handle spares differently, so this is just a placeholder\n        elif char == '-':\n            return 0\n        else:\n            return int(char)\n    \n    score = 0\n    rolls = list(bowling_card)\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + score_char(rolls[roll_index + 1]) + score_char(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + score_char(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += score_char(rolls[roll_index]) + score_char(rolls[roll_index + 1])\n            roll_index += 2\n        frame += 1\n\n    return score\n\n# Examples\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    score = 0\n    rolls = list(input1)\n    frame = 0\n    i = 0\n\n    while frame < 10:\n        if rolls[i] == \"X\":  # Strike\n            score += 10 + get_value(rolls, i+1) + get_value(rolls, i+2)\n            i += 1\n        elif rolls[i+1] == \"/\":  # Spare\n            score += 10 + get_value(rolls, i+2)\n            i += 2\n        else:  # Open frame\n            score += get_value(rolls, i) + get_value(rolls, i+1)\n            i += 2\n        frame += 1\n\n    return score\n\ndef get_value(rolls, i):\n    if i >= len(rolls):\n        return 0\n    if rolls[i] == \"X\":\n        return 10\n    elif rolls[i] == \"/\":\n        return 10 - get_value(rolls, i-1)\n    elif rolls[i] == \"-\":\n        return 0\n    else:\n        return int(rolls[i])\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    rolls = list(input1)\n    total_score = 0\n    roll_index = 0\n    \n    for frame in range(10):\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10 + get_value(rolls, roll_index + 1) + get_value(rolls, roll_index + 2)\n            roll_index += 1\n        elif roll_index < len(rolls) - 1 and rolls[roll_index + 1] == '/':  # Spare\n            total_score += 10 + get_value(rolls, roll_index + 2)\n            roll_index += 2\n        else:  # Open frame\n            total_score += get_value(rolls, roll_index) + get_value(rolls, roll_index + 1)\n            roll_index += 2\n\n    return total_score\n\ndef get_value(rolls, index):\n    if index >= len(rolls):\n        return 0\n    if rolls[index] == 'X':\n        return 10\n    elif rolls[index] == '/':\n        return 10 - get_value(rolls, index - 1)\n    elif rolls[index] == '-':\n        return 0\n    else:\n        return int(rolls[index])\n\n# Example usage:\n# print(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    \"\"\"\n    This function calculates the total score for a given bowling scorecard input.\n    \"\"\"\n    rolls = list(input1)\n    score = 0\n    frame = 0\n    roll_index = 0\n    \n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10\n            if roll_index + 1 < len(rolls):\n                score += get_value(rolls[roll_index + 1])\n            if roll_index + 2 < len(rolls):\n                score += get_value(rolls[roll_index + 2])\n            roll_index += 1\n            frame += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10\n            if roll_index + 2 < len(rolls):\n                score += get_value(rolls[roll_index + 2])\n            roll_index += 2\n            frame += 1\n        else:  # Open frame\n            score += get_value(rolls[roll_index]) + get_value(rolls[roll_index + 1])\n            roll_index += 2\n            frame += 1\n    \n    return score\n\ndef get_value(roll):\n    if roll == 'X':\n        return 10\n    elif roll == '/':\n        return 10\n    elif roll == '-':\n        return 0\n    else:\n        return int(roll)\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer", "input1:str"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1: str) -> int:\n    score = 0\n    rolls = []\n    \n    # Convert the input string into a list of rolls\n    i = 0\n    while i < len(input1):\n        char = input1[i]\n        if char == 'X':\n            rolls.append(10)\n        elif char == '/':\n            rolls.append(10 - rolls[-1])  # Spare completion\n        elif char == '-':\n            rolls.append(0)\n        else:  # It's a number\n            rolls.append(int(char))\n        i += 1\n    \n    frame_index = 0\n    for frame in range(10):\n        if rolls[frame_index] == 10:  # Strike\n            score += 10 + rolls[frame_index + 1] + rolls[frame_index + 2]\n            frame_index += 1\n        elif rolls[frame_index] + rolls[frame_index + 1] == 10:  # Spare\n            score += 10 + rolls[frame_index + 2]\n            frame_index += 2\n        else:  # Open frame\n            score += rolls[frame_index] + rolls[frame_index + 1]\n            frame_index += 2\n    \n    return score\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer", "input1:str"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1: str) -> int:\n    rolls = list(input1)\n    total_score = 0\n    frame_index = 0\n    frame_scores = []\n\n    for frame in range(10):\n        if rolls[frame_index] == 'X':  # Strike\n            # Strike takes the next two rolls as bonus\n            total_score += 10 + get_value(rolls[frame_index + 1]) + get_value(rolls[frame_index + 2])\n            frame_scores.append(total_score)\n            frame_index += 1\n        elif rolls[frame_index + 1] == '/':  # Spare\n            # Spare takes the next one roll as bonus\n            total_score += 10 + get_value(rolls[frame_index + 2])\n            frame_scores.append(total_score)\n            frame_index += 2\n        else:  # Open frame\n            total_score += get_value(rolls[frame_index]) + get_value(rolls[frame_index + 1])\n            frame_scores.append(total_score)\n            frame_index += 2\n\n    return total_score\n\ndef get_value(roll: str) -> int:\n    if roll == 'X':  # Strike\n        return 10\n    if roll == '/':  # Spare\n        return 10\n    if roll == '-':  # Miss\n        return 0\n    return int(roll)  # Number\n\n# Example Usage\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
