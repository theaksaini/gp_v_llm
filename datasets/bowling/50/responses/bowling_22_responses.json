{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(rolls):\n    score = 0\n    roll_index = 0\n    for frame in range(10):\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + _strike_bonus(rolls, roll_index)\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + _spare_bonus(rolls, roll_index)\n            roll_index += 2\n        else:  # Open frame\n            score += _sum_of_balls_in_frame(rolls, roll_index)\n            roll_index += 2\n    return score\n\ndef _strike_bonus(rolls, roll_index):\n    return _get_value(rolls[roll_index + 1]) + _get_value(rolls[roll_index + 2])\n\ndef _spare_bonus(rolls, roll_index):\n    return _get_value(rolls[roll_index + 2])\n\ndef _sum_of_balls_in_frame(rolls, roll_index):\n    return _get_value(rolls[roll_index]) + _get_value(rolls[roll_index + 1])\n\ndef _get_value(char):\n    if char == 'X':\n        return 10\n    elif char == '/':\n        return 10\n    elif char == '-':\n        return 0\n    else:\n        return int(char)\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(scorecard):\n    score = 0\n    frame_index = 0\n    rolls = list(scorecard)\n\n    def roll_value(roll):\n        if roll == 'X':  # Strike\n            return 10\n        elif roll == '/':  # Spare\n            return 10 - roll_value(rolls[frame_index - 1])\n        elif roll == '-':  # Miss\n            return 0\n        else:\n            return int(roll)\n\n    for frame in range(10):  # 10 frames\n        if rolls[frame_index] == 'X':  # Strike\n            score += 10 + roll_value(rolls[frame_index + 1]) + roll_value(rolls[frame_index + 2])\n            frame_index += 1\n        elif rolls[frame_index + 1] == '/':  # Spare\n            score += 10 + roll_value(rolls[frame_index + 2])\n            frame_index += 2\n        else:  # Open frame\n            score += roll_value(rolls[frame_index]) + roll_value(rolls[frame_index + 1])\n            frame_index += 2\n\n    return score\n\n# Tests\nassert my_func(\"62363563X9/429/628-\") == 106\nassert my_func(\"219-8/45178/4/-56-62\") == 86\nassert my_func(\"XXXXXXXXXXX9\") == 299\nassert my_func(\"9-9-178-24344-1-9/XX6\") == 98\nassert my_func(\"36413/3581368-9/9-71\") == 97\nassert my_func(\"316-6/-38/728-622/X77\") == 109\nassert my_func(\"22247/9/3116435/1561\") == 84\nassert my_func(\"6/62-34/X9/X52-38/1\") == 125\nassert my_func(\"--------------1-----\") == 1\nassert my_func(\"-4-/-2-/-7-6-/-3-/-4\") == 66\nassert my_func(\"2345-361X139/7-9/X5X\") == 111\nassert my_func(\"63259-6/328/812-2/9-\") == 100\nassert my_func(\"7115XXX548/279-X53\") == 145\nassert my_func(\"5/5/5/5/5/5/5/5/5/5/5\") == 150\nassert my_func(\"5/1/619-7/5-3/9/3/5/6\") == 126\nassert my_func(\"XXXXX----------\") == 120\nassert my_func(\"-/-/-/-/-/-/-/-/-/-/-\") == 100\nassert my_func(\"4-5-819-35518-54113-\") == 63\nassert my_func(\"XXXXX81XXX-1\") == 208\nassert my_func(\"72269/7-8-1/4/8-X32\") == 109\nassert my_func(\"9/7217-14/4/X-7X62\") == 119\nassert my_func(\"----------3/--------\") == 10\nassert my_func(\"42X156/X451/545-36\") == 114\nassert my_func(\"11-9X329-X817-9/44\") == 97\nassert my_func(\"------3/61----------\") == 23\nassert my_func(\"6/128/17X32361/3563\") == 92\nassert my_func(\"4-22723/9/439/24363-\") == 87\nassert my_func(\"--------------------\") == 0\nassert my_func(\"814553X3-2551718/53\") == 86\nassert my_func(\"6-9-X6-719/-2X5-72\") == 86\nassert my_func(\"11111111111111111111\") == 20\nassert my_func(\"0/189/260/11327/2434\") == 83\nassert my_func(\"------X------------\") == 10\nassert my_func(\"532/4362X179-41447/5\") == 100\nassert my_func(\"818-3/53514223279/9-\") == 94\nassert my_func(\"----------XX7-----\") == 51\nassert my_func(\"24815361356212813581\") == 75\nassert my_func(\"XXXXXXXXXXXX\") == 300\nassert my_func(\"XXXX9/XXX2/XXX\") == 251\nassert my_func(\"264-619-X8/9-4561X11\") == 104\nassert my_func(\"617/5443369-32325/41\") == 85\nassert my_func(\"16X547/619-14X-1X35\") == 102\nassert my_func(\"111111X111111111111\") == 30\nassert my_func(\"169/9-6-4-42-7721581\") == 82\nassert my_func(\"345-454-25429-2-625-\") == 62\nassert my_func(\"9-XX61165-34--1-7-\") == 86\nassert my_func(\"--X34--------------\") == 24\nassert my_func(\"0/325/5-245-8-12351-\") == 69\nassert my_func(\"4541115-621/X34454/4\") == 96\nassert my_func(\"X52X52X52X52X52\") == 120\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    rolls = list(input1.replace(\"-\", \"0\"))  # Convert misses to 0 for simplicity\n    score = 0\n    roll_index = 0\n\n    for frame in range(10):\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + _get_value(rolls, roll_index + 1) + _get_value(rolls, roll_index + 2)\n            roll_index += 1  # Move to the next roll\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + _get_value(rolls, roll_index + 2)\n            roll_index += 2  # Move past the spare to the next frame\n        else:  # Open frame\n            score += _get_value(rolls, roll_index) + _get_value(rolls, roll_index + 1)\n            roll_index += 2  # Move to the next frame\n\n    return score\n\ndef _get_value(rolls, index):\n    if index >= len(rolls):\n        return 0\n    if rolls[index] == 'X':\n        return 10\n    if rolls[index] == '/':\n        return 10 - _get_value(rolls, index - 1)\n    return int(rolls[index])\n\n# Example usage:\n# output1 = my_func(\"62363563X9/429/628-\")\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    # Initialize total score\n    total_score = 0\n    \n    # Initialize frame index and roll index\n    frame_index = 0\n    roll_index = 0\n    \n    # Convert the input string to a list for easier manipulation\n    rolls = list(bowling_card)\n    \n    # Loop through each frame (10 frames in total)\n    for frame in range(10):\n        # Check for a strike\n        if rolls[roll_index] == 'X':\n            # Add 10 for the strike, plus the next two rolls\n            total_score += 10 + get_value(rolls, roll_index + 1) + get_value(rolls, roll_index + 2)\n            # Move to the next roll (strike consumes one roll)\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':\n            # If it's a spare\n            # Add 10 for the spare, plus the next roll\n            total_score += 10 + get_value(rolls, roll_index + 2)\n            # Move to the next frame (spare consumes two rolls)\n            roll_index += 2\n        else:\n            # Open frame\n            # Add the value of the two rolls in the frame\n            total_score += get_value(rolls, roll_index) + get_value(rolls, roll_index + 1)\n            # Move to the next frame (two rolls consumed)\n            roll_index += 2\n            \n    return total_score\n\ndef get_value(rolls, index):\n    # Check if index is within the bounds of the rolls list\n    if index >= len(rolls):\n        return 0\n    # Return 10 for a strike\n    if rolls[index] == 'X':\n        return 10\n    # Return 0 for a miss\n    elif rolls[index] == '-':\n        return 0\n    # Return the integer value of the roll\n    else:\n        return int(rolls[index])\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    total_score = 0\n    roll_index = 0\n    rolls = list(bowling_card)\n    frame = 0\n\n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10\n            if roll_index + 1 < len(rolls):\n                total_score += get_value(rolls[roll_index + 1])\n            if roll_index + 2 < len(rolls):\n                total_score += get_value(rolls[roll_index + 2])\n            roll_index += 1\n            frame += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            total_score += 10\n            if roll_index + 2 < len(rolls):\n                total_score += get_value(rolls[roll_index + 2])\n            roll_index += 2\n            frame += 1\n        else:  # Open frame\n            total_score += get_value(rolls[roll_index])\n            total_score += get_value(rolls[roll_index + 1])\n            roll_index += 2\n            frame += 1\n\n    return total_score\n\ndef get_value(roll):\n    if roll == 'X':\n        return 10\n    elif roll == '/':\n        return 10\n    elif roll == '-':\n        return 0\n    else:\n        return int(roll)\n\n# Test cases\nassert my_func(\"62363563X9/429/628-\") == 106\nassert my_func(\"219-8/45178/4/-56-62\") == 86\nassert my_func(\"XXXXXXXXXXX9\") == 299\nassert my_func(\"9-9-178-24344-1-9/XX6\") == 98\nassert my_func(\"36413/3581368-9/9-71\") == 97\nassert my_func(\"316-6/-38/728-622/X77\") == 109\nassert my_func(\"22247/9/3116435/1561\") == 84\nassert my_func(\"6/62-34/X9/X52-38/1\") == 125\nassert my_func(\"--------------1-----\") == 1\nassert my_func(\"-4-/-2-/-7-6-/-3-/-4\") == 66\nassert my_func(\"2345-361X139/7-9/X5X\") == 111\nassert my_func(\"63259-6/328/812-2/9-\") == 100\nassert my_func(\"7115XXX548/279-X53\") == 145\nassert my_func(\"5/5/5/5/5/5/5/5/5/5/5\") == 150\nassert my_func(\"5/1/619-7/5-3/9/3/5/6\") == 126\nassert my_func(\"XXXXX----------\") == 120\nassert my_func(\"-/-/-/-/-/-/-/-/-/-/-\") == 100\nassert my_func(\"4-5-819-35518-54113-\") == 63\nassert my_func(\"XXXXX81XXX-1\") == 208\nassert my_func(\"72269/7-8-1/4/8-X32\") == 109\nassert my_func(\"9/7217-14/4/X-7X62\") == 119\nassert my_func(\"----------3/--------\") == 10\nassert my_func(\"42X156/X451/545-36\") == 114\nassert my_func(\"11-9X329-X817-9/44\") == 97\nassert my_func(\"------3/61----------\") == 23\nassert my_func(\"6/128/17X32361/3563\") == 92\nassert my_func(\"4-22723/9/439/24363-\") == 87\nassert my_func(\"--------------------\") == 0\nassert my_func(\"814553X3-2551718/53\") == 86\nassert my_func(\"6-9-X6-719/-2X5-72\") == 86\nassert my_func(\"11111111111111111111\") == 20\nassert my_func(\"0/189/260/11327/2434\") == 83\nassert my_func(\"------X------------\") == 10\nassert my_func(\"532/4362X179-41447/5\") == 100\nassert my_func(\"818-3/53514223279/9-\") == 94\nassert my_func(\"----------XX7-----\") == 51\nassert my_func(\"24815361356212813581\") == 75\nassert my_func(\"XXXXXXXXXXXX\") == 300\nassert my_func(\"XXXX9/XXX2/XXX\") == 251\nassert my_func(\"264-619-X8/9-4561X11\") == 104\nassert my_func(\"617/5443369-32325/41\") == 85\nassert my_func(\"16X547/619-14X-1X35\") == 102\nassert my_func(\"111111X111111111111\") == 30\nassert my_func(\"169/9-6-4-42-7721581\") == 82\nassert my_func(\"345-454-25429-2-625-\") == 62\nassert my_func(\"9-XX61165-34--1-7-\") == 86\nassert my_func(\"--X34--------------\") == 24\nassert my_func(\"0/325/5-245-8-12351-\") == 69\nassert my_func(\"4541115-621/X34454/4\") == 96\nassert my_func(\"X52X52X52X52X52\") == 120\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    def score_for_roll(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n\n    score = 0\n    rolls = list(bowling_card)\n    roll_index = 0\n    \n    for frame in range(10):\n        if rolls[roll_index] == 'X':\n            score += 10 + score_for_roll(rolls[roll_index + 1]) + score_for_roll(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':\n            score += 10 + score_for_roll(rolls[roll_index + 2])\n            roll_index += 2\n        else:\n            score += score_for_roll(rolls[roll_index]) + score_for_roll(rolls[roll_index + 1])\n            roll_index += 2\n    \n    return score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(score_card):\n    total_score = 0\n    rolls = list(score_card)\n    frame = 0\n    i = 0\n\n    while frame < 10:\n        if rolls[i] == 'X':  # Strike\n            total_score += 10\n            if i + 1 < len(rolls):\n                total_score += score_value(rolls[i + 1])\n            if i + 2 < len(rolls):\n                total_score += score_value(rolls[i + 2])\n            i += 1\n            frame += 1\n        elif rolls[i] == '-':  # Gutter ball\n            if rolls[i + 1] == '/':  # Spare after gutter ball\n                total_score += 10\n                if i + 2 < len(rolls):\n                    total_score += score_value(rolls[i + 2])\n                i += 2\n            else:\n                i += 1\n            frame += 1\n        else:\n            first_roll = score_value(rolls[i])\n            second_roll = score_value(rolls[i + 1])\n\n            if second_roll == '/':  # Spare\n                total_score += 10\n                if i + 2 < len(rolls):\n                    total_score += score_value(rolls[i + 2])\n            else:\n                total_score += first_roll + second_roll\n\n            i += 2\n            frame += 1\n\n    return total_score\n\ndef score_value(roll):\n    if roll == 'X':\n        return 10\n    elif roll == '/':\n        return 10\n    elif roll == '-':\n        return 0\n    else:\n        return int(roll)\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(scorecard):\n    total_score = 0\n    frame = 0\n    i = 0\n    \n    while frame < 10:  # There are 10 frames in a game\n        if scorecard[i] == 'X':  # Strike\n            total_score += 10\n            if i + 1 < len(scorecard):\n                total_score += get_value(scorecard[i + 1])\n            if i + 2 < len(scorecard):\n                total_score += get_value(scorecard[i + 2])\n            i += 1\n        elif i + 1 < len(scorecard) and scorecard[i + 1] == '/':  # Spare\n            total_score += 10\n            if i + 2 < len(scorecard):\n                total_score += get_value(scorecard[i + 2])\n            i += 2\n        else:  # Open frame\n            total_score += get_value(scorecard[i])\n            if i + 1 < len(scorecard):\n                total_score += get_value(scorecard[i + 1])\n            i += 2\n        frame += 1\n    \n    return total_score\n\ndef get_value(char):\n    if char == 'X':\n        return 10\n    elif char == '/':\n        return 10\n    elif char == '-':\n        return 0\n    else:\n        return int(char)\n\n# Examples usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\nprint(my_func(\"219-8/45178/4/-56-62\"))  # Output: 86\nprint(my_func(\"XXXXXXXXXXX9\"))  # Output: 299\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    rolls = list(input1)\n    score = 0\n    roll_index = 0\n    \n    def roll_value(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10 - roll_value(rolls[roll_index - 1])\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n    \n    for frame in range(10):\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10 + roll_value(rolls[roll_index + 1]) + roll_value(rolls[roll_index + 2])\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10 + roll_value(rolls[roll_index + 2])\n            roll_index += 2\n        else:  # Open frame\n            score += roll_value(rolls[roll_index]) + roll_value(rolls[roll_index + 1])\n            roll_index += 2\n            \n    return score\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Should output 106\n"}
