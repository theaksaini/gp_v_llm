{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(scorecard):\n    total_score = 0\n    rolls = list(scorecard)\n    frame = 0\n    roll_index = 0\n\n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            total_score += 10\n            if roll_index + 1 < len(rolls):\n                total_score += get_value(rolls[roll_index + 1])\n            if roll_index + 2 < len(rolls):\n                total_score += get_value(rolls[roll_index + 2])\n            roll_index += 1\n            frame += 1\n        elif roll_index + 1 < len(rolls) and rolls[roll_index + 1] == '/':  # Spare\n            total_score += 10\n            if roll_index + 2 < len(rolls):\n                total_score += get_value(rolls[roll_index + 2])\n            roll_index += 2\n            frame += 1\n        else:  # Open frame\n            total_score += get_value(rolls[roll_index]) + get_value(rolls[roll_index + 1])\n            roll_index += 2\n            frame += 1\n\n    return total_score\n\ndef get_value(char):\n    if char == 'X':\n        return 10\n    elif char == '/':\n        return 10\n    elif char == '-':\n        return 0\n    else:\n        return int(char)\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(rolls: str) -> int:\n    score = 0\n    roll_index = 0\n    frames = 0\n\n    while frames < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10\n            # Add the next two rolls to the score\n            if rolls[roll_index + 1] == 'X':\n                score += 10\n            else:\n                score += int(rolls[roll_index + 1]) if rolls[roll_index + 1] != '-' else 0\n\n            if rolls[roll_index + 2] == 'X':\n                score += 10\n            elif rolls[roll_index + 2] == '/':\n                score += 10 - int(rolls[roll_index + 1])\n            else:\n                score += int(rolls[roll_index + 2]) if rolls[roll_index + 2] != '-' else 0\n\n            roll_index += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10\n            # Add the next roll to the score\n            if rolls[roll_index + 2] == 'X':\n                score += 10\n            else:\n                score += int(rolls[roll_index + 2]) if rolls[roll_index + 2] != '-' else 0\n\n            roll_index += 2\n        else:  # Open frame\n            score += (int(rolls[roll_index]) if rolls[roll_index] != '-' else 0) + \\\n                     (int(rolls[roll_index + 1]) if rolls[roll_index + 1] != '-' else 0)\n            roll_index += 2\n        \n        frames += 1\n\n    return score\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Should return 106\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(input1):\n    # Initialize variables\n    score = 0\n    frame = 0\n    i = 0\n    n = len(input1)\n\n    # Loop through each character in the input string\n    while i < n and frame < 10:\n        # If it's a strike\n        if input1[i] == 'X':\n            score += 10\n            if i + 1 < n:\n                score += 10 if input1[i + 1] == 'X' else int(input1[i + 1]) if input1[i + 1].isdigit() else 0\n            if i + 2 < n:\n                score += 10 if input1[i + 2] == 'X' else int(input1[i + 2]) if input1[i + 2].isdigit() else 0\n            frame += 1\n            i += 1\n        # If it's a spare\n        elif input1[i] == '/':\n            score += 10 - int(input1[i - 1])  # Spare means 10 minus the first roll of the frame\n            if i + 1 < n:\n                score += 10 if input1[i + 1] == 'X' else int(input1[i + 1]) if input1[i + 1].isdigit() else 0\n            frame += 1\n            i += 1\n        # If it's a number\n        elif input1[i].isdigit():\n            score += int(input1[i])\n            # If it's the second roll of the frame\n            if i > 0 and (input1[i - 1].isdigit() or input1[i - 1] == '-'):\n                frame += 1\n            i += 1\n        # If it's a miss\n        elif input1[i] == '-':\n            # If it's the second roll of the frame\n            if i > 0 and (input1[i - 1].isdigit() or input1[i - 1] == '-'):\n                frame += 1\n            i += 1\n\n    return score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(rolls):\n    score = 0\n    roll_index = 0\n    frame = 0\n\n    while frame < 10:\n        if rolls[roll_index] == 'X':  # Strike\n            score += 10\n            if roll_index + 1 < len(rolls):\n                score += _get_value(rolls[roll_index + 1])\n            if roll_index + 2 < len(rolls):\n                score += _get_value(rolls[roll_index + 2])\n            roll_index += 1\n            frame += 1\n        elif rolls[roll_index + 1] == '/':  # Spare\n            score += 10\n            if roll_index + 2 < len(rolls):\n                score += _get_value(rolls[roll_index + 2])\n            roll_index += 2\n            frame += 1\n        else:  # Open frame\n            score += _get_value(rolls[roll_index]) + _get_value(rolls[roll_index + 1])\n            roll_index += 2\n            frame += 1\n\n    return score\n\ndef _get_value(roll):\n    if roll == 'X':\n        return 10\n    elif roll == '/':\n        return 10\n    elif roll == '-':\n        return 0\n    else:\n        return int(roll)\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    total_score = 0\n    frames = 0\n    i = 0\n    while frames < 10:\n        if bowling_card[i] == 'X':  # Strike\n            total_score += 10\n            if i + 1 < len(bowling_card):\n                total_score += 10 if bowling_card[i + 1] == 'X' else int(bowling_card[i + 1]) if bowling_card[i + 1].isdigit() else 0\n            if i + 2 < len(bowling_card):\n                total_score += 10 if bowling_card[i + 2] == 'X' else int(bowling_card[i + 2]) if bowling_card[i + 2].isdigit() else 0\n            frames += 1\n            i += 1\n        elif bowling_card[i + 1] == '/':  # Spare\n            total_score += 10\n            if i + 2 < len(bowling_card):\n                total_score += 10 if bowling_card[i + 2] == 'X' else int(bowling_card[i + 2]) if bowling_card[i + 2].isdigit() else 0\n            frames += 1\n            i += 2\n        else:  # Open frame\n            total_score += int(bowling_card[i]) if bowling_card[i].isdigit() else 0\n            total_score += int(bowling_card[i + 1]) if bowling_card[i + 1].isdigit() else 0\n            frames += 1\n            i += 2\n    return total_score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(scorecard):\n    total_score = 0\n    frame = 0\n    i = 0\n    scores = []\n\n    # Decode the input scorecard into an integer list\n    while i < len(scorecard):\n        if scorecard[i] == 'X':  # Strike\n            scores.append(10)\n            i += 1\n        elif scorecard[i] == '/':  # Spare\n            scores.append(10 - scores[-1])\n            i += 1\n        elif scorecard[i] == '-':  # Miss\n            scores.append(0)\n            i += 1\n        else:  # Number of pins knocked down\n            scores.append(int(scorecard[i]))\n            i += 1\n\n    i = 0\n    # Calculate the score based on frames\n    while frame < 10:\n        if scores[i] == 10:  # Strike\n            total_score += 10 + scores[i+1] + scores[i+2]\n            i += 1\n        elif scores[i] + scores[i+1] == 10:  # Spare\n            total_score += 10 + scores[i+2]\n            i += 2\n        else:  # Open frame\n            total_score += scores[i] + scores[i+1]\n            i += 2\n        frame += 1\n\n    return total_score\n"}
{"question": [" ", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"27\":{\"input1\":\"--------------------\",\"output1\":0},\"28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"32\":{\"input1\":\"------X------------\",\"output1\":10},\"33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    score = 0\n    frame = 0\n    i = 0\n    rolls = list(bowling_card)\n    \n    while frame < 10:\n        # If strike\n        if rolls[i] == 'X':\n            score += 10\n            if i + 1 < len(rolls):\n                score += 10 if rolls[i + 1] == 'X' else (10 - int(rolls[i + 1][0])) if rolls[i + 1] == '/' else 0 if rolls[i + 1] == '-' else int(rolls[i + 1])\n            if i + 2 < len(rolls):\n                score += 10 if rolls[i + 2] == 'X' else (10 - int(rolls[i + 2][0])) if rolls[i + 2] == '/' else 0 if rolls[i + 2] == '-' else int(rolls[i + 2])\n            i += 1\n            frame += 1\n        # If spare\n        elif rolls[i + 1] == '/':\n            score += 10\n            if i + 2 < len(rolls):\n                score += 10 if rolls[i + 2] == 'X' else 0 if rolls[i + 2] == '-' else int(rolls[i + 2])\n            i += 2\n            frame += 1\n        # Open frame\n        else:\n            score += (0 if rolls[i] == '-' else int(rolls[i]))\n            score += (0 if rolls[i + 1] == '-' else int(rolls[i + 1]))\n            i += 2\n            frame += 1\n\n    return score\n"}
{"question": ["", "a string in form of completed bowling card, with one character per roll", "an integer"], "context": "{\"Example 0\":{\"input1\":\"62363563X9\\/429\\/628-\",\"output1\":106},\"Example 1\":{\"input1\":\"219-8\\/45178\\/4\\/-56-62\",\"output1\":86},\"Example 2\":{\"input1\":\"XXXXXXXXXXX9\",\"output1\":299},\"Example 3\":{\"input1\":\"9-9-178-24344-1-9\\/XX6\",\"output1\":98},\"Example 4\":{\"input1\":\"36413\\/3581368-9\\/9-71\",\"output1\":97},\"Example 5\":{\"input1\":\"316-6\\/-38\\/728-622\\/X77\",\"output1\":109},\"Example 6\":{\"input1\":\"22247\\/9\\/3116435\\/1561\",\"output1\":84},\"Example 7\":{\"input1\":\"6\\/62-34\\/X9\\/X52-38\\/1\",\"output1\":125},\"Example 8\":{\"input1\":\"--------------1-----\",\"output1\":1},\"Example 9\":{\"input1\":\"-4-\\/-2-\\/-7-6-\\/-3-\\/-4\",\"output1\":66},\"Example 10\":{\"input1\":\"2345-361X139\\/7-9\\/X5X\",\"output1\":111},\"Example 11\":{\"input1\":\"63259-6\\/328\\/812-2\\/9-\",\"output1\":100},\"Example 12\":{\"input1\":\"7115XXX548\\/279-X53\",\"output1\":145},\"Example 13\":{\"input1\":\"5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\\/5\",\"output1\":150},\"Example 14\":{\"input1\":\"5\\/1\\/619-7\\/5-3\\/9\\/3\\/5\\/6\",\"output1\":126},\"Example 15\":{\"input1\":\"XXXXX----------\",\"output1\":120},\"Example 16\":{\"input1\":\"-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\\/-\",\"output1\":100},\"Example 17\":{\"input1\":\"4-5-819-35518-54113-\",\"output1\":63},\"Example 18\":{\"input1\":\"XXXXX81XXX-1\",\"output1\":208},\"Example 19\":{\"input1\":\"72269\\/7-8-1\\/4\\/8-X32\",\"output1\":109},\"Example 20\":{\"input1\":\"9\\/7217-14\\/4\\/X-7X62\",\"output1\":119},\"Example 21\":{\"input1\":\"----------3\\/--------\",\"output1\":10},\"Example 22\":{\"input1\":\"42X156\\/X451\\/545-36\",\"output1\":114},\"Example 23\":{\"input1\":\"11-9X329-X817-9\\/44\",\"output1\":97},\"Example 24\":{\"input1\":\"------3\\/61----------\",\"output1\":23},\"Example 25\":{\"input1\":\"6\\/128\\/17X32361\\/3563\",\"output1\":92},\"Example 26\":{\"input1\":\"4-22723\\/9\\/439\\/24363-\",\"output1\":87},\"Example 27\":{\"input1\":\"--------------------\",\"output1\":0},\"Example 28\":{\"input1\":\"814553X3-2551718\\/53\",\"output1\":86},\"Example 29\":{\"input1\":\"6-9-X6-719\\/-2X5-72\",\"output1\":86},\"Example 30\":{\"input1\":\"11111111111111111111\",\"output1\":20},\"Example 31\":{\"input1\":\"0\\/189\\/260\\/11327\\/2434\",\"output1\":83},\"Example 32\":{\"input1\":\"------X------------\",\"output1\":10},\"Example 33\":{\"input1\":\"532\\/4362X179-41447\\/5\",\"output1\":100},\"Example 34\":{\"input1\":\"818-3\\/53514223279\\/9-\",\"output1\":94},\"Example 35\":{\"input1\":\"----------XX7-----\",\"output1\":51},\"Example 36\":{\"input1\":\"24815361356212813581\",\"output1\":75},\"Example 37\":{\"input1\":\"XXXXXXXXXXXX\",\"output1\":300},\"Example 38\":{\"input1\":\"XXXX9\\/XXX2\\/XXX\",\"output1\":251},\"Example 39\":{\"input1\":\"264-619-X8\\/9-4561X11\",\"output1\":104},\"Example 40\":{\"input1\":\"617\\/5443369-32325\\/41\",\"output1\":85},\"Example 41\":{\"input1\":\"16X547\\/619-14X-1X35\",\"output1\":102},\"Example 42\":{\"input1\":\"111111X111111111111\",\"output1\":30},\"Example 43\":{\"input1\":\"169\\/9-6-4-42-7721581\",\"output1\":82},\"Example 44\":{\"input1\":\"345-454-25429-2-625-\",\"output1\":62},\"Example 45\":{\"input1\":\"9-XX61165-34--1-7-\",\"output1\":86},\"Example 46\":{\"input1\":\"--X34--------------\",\"output1\":24},\"Example 47\":{\"input1\":\"0\\/325\\/5-245-8-12351-\",\"output1\":69},\"Example 48\":{\"input1\":\"4541115-621\\/X34454\\/4\",\"output1\":96},\"Example 49\":{\"input1\":\"X52X52X52X52X52\",\"output1\":120}}", "response": "\ndef my_func(bowling_card):\n    \"\"\"\n    Calculate the score from a bowling card string.\n    \n    :param bowling_card: A string representing the rolls in a bowling game.\n    :return: An integer representing the total score.\n    \"\"\"\n    def roll_value(roll):\n        if roll == 'X':   # Strike\n            return 10\n        elif roll == '/': # Spare\n            return 10\n        elif roll == '-': # Miss\n            return 0\n        else:\n            return int(roll)\n\n    def is_strike(roll):\n        return roll == 'X'\n\n    def is_spare(roll):\n        return roll == '/'\n\n    score = 0\n    roll_index = 0\n    rolls = list(bowling_card)\n\n    for frame in range(10):\n        if is_strike(rolls[roll_index]):\n            score += 10 + roll_value(rolls[roll_index + 1]) + roll_value(rolls[roll_index + 2])\n            roll_index += 1\n        elif is_spare(rolls[roll_index + 1]):\n            score += 10 + roll_value(rolls[roll_index + 2])\n            roll_index += 2\n        else:\n            score += roll_value(rolls[roll_index]) + roll_value(rolls[roll_index + 1])\n            roll_index += 2\n\n    return score\n\n# Example usage:\nprint(my_func(\"62363563X9/429/628-\"))  # Output: 106\n"}
