Command line args: clojush.problems.psb2.bouncing-balls
Working directory: /Users/sainia3/Documents/gp_v_llm/Clojush
(([[1.001 1.0 1] 2.001] [[100.0 99.999 20] 3999.599534511501] [[100.0 1.0 20] 102.02020201974588] [[15.319 5.635 1] 20.954] [[2.176 1.787 1] 3.963] [[17.165 5.627 1] 22.791999999999998] [[60.567 37.053 1] 97.62] [[62.145 62.058 1] 124.203] [[36.311 33.399 1] 69.71000000000001] [[46.821 8.151 1] 54.971999999999994] [[38.12357342902767 11.687888097597451 20] 71.8343739211917] [[52.85438564940816 26.380347300285226 1] 79.23473294969338] [[20.987319626269866 20.255073089359552 7] 260.17603879085345] [[82.32740006407141 7.4090095623334 10] 98.61083830096983] [[98.62471709093336 22.71383763458574 4] 157.20162617998] [[96.373164543073 48.76885582818735 20] 293.83431069377866] [[35.36493274679138 22.074982716944934 8] 149.32647215857114] [[16.225701922463646 12.639867255865262 13] 125.53348283047018] [[7.945738302275174 1.0921895726370052 4] 10.474482042224524] [[72.11554223571525 15.518255101742175 11] 111.66186299949855] [[38.583454837725725 28.45971584434366 3] 152.97171008680098] [[60.08848024319292 50.56997560201041 19] 672.1938030181557] [[97.7270318739375 18.419476177078746 16] 143.1219686927871] [[27.81735004385565 15.40842512133902 12] 96.81929377020623] [[85.32572570860533 82.11977652099485 2] 328.5995656620315] [[41.003181427605625 15.389726763349397 6] 90.02394863259319] [[55.616033845606445 28.392638390487992 5] 165.67423134355658] [[92.06501345610623 61.63371164389028 3] 325.4775442423003] [[12.361438777597014 4.903721079022764 5] 28.33649504302415] [[21.783213464972633 19.459955183895822 14] 306.9659312375019] [[9.493146307503334 7.914177819685164 12] 92.8616182522554] [[56.0445811501203 45.9981160162748 7] 426.44274863415205] [[70.61449858833024 25.83068970957482 17] 152.0734522755304] [[53.94714766538518 38.138176323092665 17] 313.37076895906586] [[29.08718146229451 7.024274932612513 8] 47.60788584313179] [[28.570224179654318 26.69550886779322 5] 242.36703458382829] [[26.233250302959796 20.590097084945896 14] 210.33744967247497] [[57.965096497095516 54.211909856097314 15] 1097.7532070978664] [[99.71065046540258 35.31979824463789 12] 209.0968026427693] [[26.342011936560684 14.799997006316053 2] 64.25723711634232] [[33.57699301865182 3.482550175796967 6] 41.34804824391528] [[43.44043604043235 22.43162819859086 6] 133.62308610020438] [[88.00056625494717 43.59038103292615 17] 260.75105022465925] [[47.2959691444281 6.655335972062531 4] 62.76178753877937] [[86.64073752724669 47.096587052087564 13] 292.9107737642818] [[24.63615315132887 23.853122220804636 14] 554.9693571605853] [[72.36195221472596 10.368913519998767 18] 96.56837402173791] [[66.2286461237576 7.095092206489656 9] 82.12142827267121] [[13.20468812668104 1.90675664781556 14] 17.66180963827879] [[7.402641335758339 3.728843440993862 16] 22.429370164414525] [[8.278966332373024 6.373267199999005 6] 50.40625163811003] [[2.604108893624164 1.0819999196933037 11] 6.3059986280688705] [[76.91589674270325 7.820322125047579 18] 94.32676833742231] [[55.11745790506097 22.654356879577087 14] 132.04431341601884] [[79.78265087240236 23.821829482424192 11] 147.70737707058763] [[70.58302376535121 5.502533522722991 10] 82.51856554305985] [[28.586640234492542 15.233882010520622 16] 93.81046534210907] [[69.7074663976593 64.38027679034066 12] 1078.714269844905] [[46.144523139846825 6.025453979565739 4] 59.98790331685515] [[50.851645854586465 36.77922819279577 20] 316.17425662669245] [[17.22754732281534 7.441476990289608 14] 43.42738472452772] [[34.19009068950263 13.295877333391198 5] 77.0122393023586] [[99.30178740160933 38.471954152549515 3] 211.83021382071564] [[40.772818809647 16.073652684060775 20] 93.84085422904327] [[36.7230329231048 6.464209780382862 16] 52.41335816760511] [[95.44278497775328 35.43649503353005 8] 208.09438669349302] [[75.61271508666937 40.848863280426016 12] 253.15185889810436] [[95.7317148245304 32.47900761740745 5] 193.17213914840474] [[97.60262440239187 81.90956690284592 3] 456.5885914084698] [[79.08857047750554 55.03330585660303 9] 424.0981622694219] [[95.28973950723181 57.22405434037775 4] 332.1337271280771] [[86.30584657871627 62.505091344835165 5] 432.1025910523731] [[87.0637981121943 33.549924952600264 9] 196.19438212829206] [[20.470463599075174 11.141644744154844 14] 69.35335924236546] [[74.26312956844971 20.232666922738137 13] 129.88142046177566] [[5.052001842584092 4.309497570649797 15] 57.82676966784491] [[75.26042509334323 69.78986361593846 12] 1188.7156524239292] [[37.678799445389856 8.775057150498753 3] 59.79212299091895] [[44.2895687139184 12.812139483997285 7] 80.32998054850461] [[11.272038110239219 10.156668380421115 6] 100.66356966871555] [[28.885540832938837 2.372153836079847 4] 34.05277301355707] [[56.492941950296085 44.47826411544318 7] 385.7321487289574] [[7.837815573406942 3.4914687855319495 18] 20.43021486634777] [[88.09514120172186 84.66307428196016 12] 1681.8208781558794] [[28.248039622737288 16.579813214048542 10] 107.99884591389161] [[97.90255722805274 55.68616578646208 20] 356.17776743060796] [[14.657564920060114 11.31925441748372 8] 99.63000723371432] [[16.595887043618948 14.655090324292823 9] 179.97709399627638] [[33.37006860007669 14.597525382649408 4] 82.14491412634295] [[56.583627739104145 43.230071788742016 17] 418.59093825859594] [[59.96797877778248 46.77605778043358 13] 466.0378491491314] [[60.45561564431469 40.63637417324369 9] 299.7287533479702] [[27.11528913663108 22.69237094757286 3] 126.37502224267135] [[73.32054532462878 41.909558233578906 14] 268.8669534718944] [[21.888802149708496 19.310704262146388 14] 289.27842663146424] [[14.868925258006765 10.529234724624603 6] 76.04777446459211] [[48.99779420334315 38.058805605672795 16] 383.09655542230297] [[23.888120998569963 3.2423152101133415 5] 31.389682444112154] [[99.07983451199696 83.38029168458107 18] 1099.9033402479515] [[93.99767630253591 91.21856597508318 2] 364.9564287691834] [[73.11742442209186 28.01744263740149 9] 163.93363758442817] [[3.3360558415253188 2.7551589742304943 12] 31.45940515794677] [[98.5534694359448 58.07409211329513 10] 379.409741607372] [[29.28174253266452 9.361986176851797 8] 56.799497586941875] [[95.61930471068895 56.14452437843677 20] 367.60705629248304] [[8.953327465571515 6.326752673175069 11] 50.94335470423564] [[71.28036353767071 33.97459680413256 15] 201.10832552700924] [[50.32884061968351 38.703309211281784 16] 379.6691970533173] [[92.18388442507388 13.235217928970629 11] 123.09191268107557] [[78.43126684292636 62.70689818380703 9] 610.0089898612132] [[52.51975589016573 26.900219802017247 15] 162.8029165537087] [[14.925080621042488 3.741523706254818 10] 24.911600468785416] [[60.318373617124394 20.167427128683297 19] 120.91303103013226] [[41.89143398147512 20.616434013811425 6] 121.33208943221746] [[62.77377790345912 22.677480779676745 13] 133.7801529760006] [[49.93348112562026 21.409134381806464 15] 124.88889902697] [[95.64138135589164 79.93925664392911 4] 547.518118650845] [[4.498197927176416 3.873316014033438 13] 51.63988193244894] [[94.88908708313399 41.64333747845573 9] 243.16708137824685] [[39.479545775690156 17.670848361819008 7] 103.08506580453863] [[58.929699342696324 13.902333722368152 10] 95.3190899627623] [[77.33586232992333 71.50257144001353 2] 286.4502800454893] [[87.1094617352244 72.60513451646236 16] 907.1662565011729] [[9.86103601091564 7.299614726953461 16] 65.52853718298414] [[49.429604621488686 19.690371096464006 15] 114.88425350396734] [[24.09637329319428 19.888402579812237 6] 172.24395566691308] [[78.819474827287 8.796307214214536 4] 98.60677444281552] [[3.063463476911344 1.2574198827206682 14] 7.329179343223712] [[75.82464185018952 45.386187211979575 14] 301.7171098906464] [[53.8961442200195 15.059927057150226 18] 95.69588944306429] [[73.31218611481262 29.34011344226651 19] 171.14645535616265] [[64.61338313958302 51.328106035533985 1] 115.941489175117] [[8.297821440354891 3.5693105387391206 10] 20.820505598313098] [[95.21919714863662 67.73481830941587 19] 563.6779310952616] [[65.16277674854474 42.60936478775797 2] 178.24339524297395] [[81.75839948687879 67.0295732707424 12] 749.7462705614633] [[94.32825017495684 52.24833667609429 2] 227.7652337920048] [[95.5688198152181 44.300561304964276 9] 260.47193720397195] [[60.69535478927493 52.48569978936775 17] 766.0274856303313] [[47.62590475695864 3.558901858536094 5] 55.31842160397873] [[7.22065236474924 6.88527393154812 3] 40.38267187146882] [[88.90111306500795 68.54688787919146 10] 636.6119135277213] [[5.591641751652034 4.096123089895759 13] 35.588296023493264] [[35.0818894223068 8.148905510535315 15] 56.31080355751651] [[73.8808637015819 16.784108047510195 15] 117.3167610260002] [[16.31133423333189 11.233395500794494 1] 27.544729734126385] [[36.90808502805471 29.067414122062505 1] 65.97549915011722] [[96.48675871635363 16.765394708655823 1] 113.25215342500945] [[19.021303254118347 6.127562280974723 6] 37.05903385774338] [[30.74752188953012 13.437515311384647 1] 44.18503720091476] [[21.641907525389577 17.984234839290494 9] 190.15828095263052] [[96.42690613064951 6.883656841416768 6] 111.25257036767007] [[45.80754531222719 35.469099850951466 5] 259.886672642688] [[85.73601745299308 13.34661124374638 17] 117.35073458658272] [[68.51689585973611 38.07922309467891 18] 239.94764841114116] [[14.788922574222552 9.59151251145502 14] 69.21146034551735] [[14.940541513265003 12.915317677032638 10] 157.61430775723989] [[30.219549734370293 19.23738129328287 12] 135.48752487226182] [[10.846275611390286 3.2085753635904664 20] 19.959252356427097] [[52.23759304838096 18.994892002631104 1] 71.23248505101206] [[30.308669809782444 26.84625999868127 20] 456.09726882942454] [[88.63113311609177 25.980299186355197 16] 162.13896101298528] [[12.17277481353958 4.097171800897076 6] 24.4888745106636] [[97.25949908600269 57.088580685058346 20] 373.6898067540883] [[90.63969740154958 38.07722551442091 13] 221.9590252423725] [[61.2556546675822 25.794721903543127 14] 150.37107228507878] [[8.884980763193989 3.3493193552600133 18] 19.636590709003027] [[70.44079208871727 69.12569111019755 17] 2049.2808514842127] [[96.03489844918982 42.85924298598836 14] 250.83882112092326] [[71.76604846919224 2.4149957306114826 18] 76.7642336065507] [[99.16442563906635 49.210705463669974 19] 294.5428293264359] [[11.560857566049734 9.876087861634993 1] 21.436945427684726] [[50.87594798477181 40.0242838967868 8] 363.6410444503669] [[79.56211863230348 18.94264370578438 3] 127.5411350579544] [[88.42929265860428 62.233702198029206 17] 507.3016842353463] [[32.40290677666438 19.753018157565887 19] 133.58729361023458] [[17.35986666809795 10.817502205573556 6] 70.3901710656032] [[58.18756625401141 53.06412078814371 3] 305.2302720642499] [[47.90846001579497 4.884572479694075 5] 58.78606437005826] [[76.90809300535716 15.029310926251204 12] 114.26744577640564] [[48.83821248050194 13.048552498377566 12] 84.45005023125879] [[95.65446263826529 16.349956880772208 18] 135.09601297212166] [[85.10359988431715 38.55768790838488 14] 226.09631737457457] [[87.43162401549898 29.26653405337667 4] 173.2140563522388] [[88.21383281519333 47.139348069833275 16] 290.67911110192244] [[92.96441546939884 51.36121273943007 6] 313.3311637369762] [[26.67732171129023 5.3246018603334555 12] 39.98205432366188] [[97.39739142502667 52.85381437697136 9] 327.1931744442032] [[39.881893702677054 22.88968604272031 16] 147.30883520313387] [[45.48179560939012 12.185021596769964 18] 78.77010490494824] [[59.74187663790359 29.203712145713894 8] 173.4371191190748] [[25.59202118802418 13.204716316341688 4] 74.47263877832138] [[23.091587675884522 10.494213425947 4] 58.938258541136435] [[29.086980908099292 5.148725247237991 1] 34.23570615533728] [[81.61572906545892 61.710845648965496 15] 578.8093741824142] [[40.68977524549485 23.786494538475633 7] 151.58701672526274] [[91.15076263910989 62.14842611233336 11] 474.6680394239163] [[18.216154846936323 7.73068485441198 13] 45.076167543595105] [[54.86428722936843 12.880919767623618 6] 88.51529196401155] [[39.356616644259034 25.249247409053904 5] 160.6485637797049]) ([[28.597904310809245 19.669368940578217 15] 154.03532286872598] [[70.97925585140996 32.79380680969958 1] 103.77306266110955] [[15.846401393981232 6.2700781334455655 16] 36.597186548092715] [[46.444817887091055 35.00436564699677 13] 322.288219394952] [[49.32429094043626 40.04987981654389 8] 385.5136310807301] [[39.53884332871255 23.158620395570466 2] 99.42050990850522] [[5.0497339906196945 4.50171630161263 11] 63.13807365060457] [[24.358843809632276 8.305851506188676 6] 49.487575242984256] [[35.6437933392882 6.506052706717888 7] 51.56097300561232] [[48.83007938482625 16.39712965953684 3] 94.4856087294339] [[47.215875103654184 46.79546838502314 3] 279.5302744150728] [[45.648791793034164 41.96833278430954 9] 576.7424737052663] [[63.47866713272797 26.413667927743326 3] 142.86092832612363] [[19.505819590998442 9.80242988342009 9] 58.79520569991549] [[91.63013096654761 43.55136947767749 19] 257.63328746223596] [[39.26954310810597 26.632337059765856 13] 203.47218834738553] [[37.15687342510237 7.237775447235172 15] 55.13422728588015] [[74.70067295969517 45.25667609589396 10] 302.3095111476373] [[22.98116257344851 4.869019598598851 7] 35.33636519355426] [[88.73185458020053 87.91768575142038 7] 1203.0243902423217] [[19.799819772484156 2.956893074340019 14] 26.751812257422262] [[3.824155002592007 2.7006206459301767 14] 22.03785271339426] [[74.8821566259165 7.963645503191082 7] 92.70486262143025] [[15.565946771046747 9.809053864076489 8] 66.90484970979585] [[45.919106606960725 20.960140478625725 16] 123.04293331772273] [[9.11552659985783 2.56793433953928 12] 16.265654439438745] [[43.48805738119313 36.677416554632195 2] 147.7762760716424] [[30.118744147237887 9.375281558967462 10] 57.34338162365406] [[28.63670622205973 22.7265860883275 16] 242.71152157661442] [[1.1215824604981393 1.0652604324073327 8] 14.710093571184958] [[22.642298207675267 12.435383001021169 20] 77.81336328542645] [[99.71273081086876 3.5754862707332067 8] 107.12965859297661] [[92.89521191907235 13.433210369534788 4] 124.24910100594965] [[42.593641264617716 17.950148531772673 12] 104.64018209904842] [[25.641864745950382 8.645012109416992 9] 51.723104003748674] [[13.60753950087148 7.853527944273247 11] 50.63270701782745] [[70.13314822061763 21.10493426586416 7] 130.4837246490424] [[69.54120073638018 69.12611504719492 14] 1867.791316528828] [[28.02095200500218 11.357525074985308 17] 66.21820334332718] [[65.0246217695931 43.641716301969716 11] 326.33717556882493] [[18.16500030572252 16.57990912964098 10] 238.38713626413065] [[68.32717407897924 66.39916140783713 2] 265.6510482468698] [[18.72131282150999 14.65274489797966 16] 150.52380134736336] [[59.72103410354763 44.540838889489756 4] 283.26979585819134] [[97.42651202185999 42.72342741180911 20] 249.60783674501945] [[83.74332678616713 58.82356125381393 20] 478.6889474553334] [[97.64136638642734 56.57643365608182 15] 366.58628885679667] [[17.230149486319554 5.646489061774186 18] 34.02792294880719] [[19.322959765023956 8.30209740807269 20] 48.4352148924853] [[1.9645231843994928 1.3232739396531983 1] 3.287797124052691] [[40.8364687051212 34.322096522232265 3] 191.41966418018202] [[50.9252158066251 11.246224440122527 13] 79.7927034707112] [[40.15149583343787 13.61860037329289 15] 81.36879067590634] [[14.146556563901049 5.347196500556987 5] 31.097910831791527] [[30.57920734610609 15.056297452363287 17] 89.898696211191] [[88.50600620227908 29.93787858764821 12] 178.9876512186488] [[75.95832118641567 52.60846131451702 10] 407.61212337401474] [[61.20485982780145 8.883593011323182 10] 81.98872417570998] [[11.081403732778671 2.6416307425310013 5] 18.00444390441245] [[49.35940828594176 31.887549314989073 5] 203.701013378995] [[66.7373127403974 13.77237408311781 3] 100.55291426647595] [[89.99003919154461 3.4717517643662776 18] 97.21216728630165] [[23.92852231847464 6.898863179742647 17] 43.315828019457136] [[7.501603985070245 3.1678208020304237 1] 10.669424787100668] [[56.57892717861321 34.66333252187103 14] 235.31054795932212] [[42.6611702583534 38.893700934308036 19] 764.0812515830495] [[80.18240758413513 18.800109730488884 16] 129.29878497234387] [[15.472618938883139 1.624834007407976 2] 18.89291647935581] [[3.736554713394014 1.5738389585738783 3] 8.48925102282752] [[44.54902871387036 9.70291946765029 14] 69.35843479363885] [[92.66989606390258 20.83361881834204 11] 146.4212584321162] [[51.623325458299256 33.480842710111176 17] 242.00479119102317] [[62.09216459448928 59.33191066730145 13] 1219.0600632595517] [[24.198812836940217 13.230274368589958 14] 82.55852303442337] [[4.192518634187925 3.1760624944132148 19] 30.237299370087424] [[99.7105780870697 69.80904605394366 14] 561.4425519935908] [[3.1740103942752973 3.0584827275779474 14] 69.33695739082134] [[31.58571902775934 20.692011902449615 4] 123.6587737407496] [[79.26658099904164 7.956029025924307 20] 96.95392745561138] [[61.59800892331116 16.802860552722592 8] 107.80608166928873] [[89.70623805553251 2.0027095715266414 12] 93.80312092430998] [[94.7066285867847 76.1597266515228 17] 851.0402607273684] [[91.53319294064421 89.02814032629382 5] 854.7251522090347] [[31.14805796263073 20.047054896035235 9] 140.92532087371453] [[19.65373037344666 11.186691676881681 20] 71.5860243178335] [[84.86738712183454 18.565841260297855 13] 132.39672909895822] [[73.16434193313907 47.90572781385317 19] 350.58033727043556] [[54.08521227893283 47.80601490086216 1] 101.89122717979498] [[6.865090176419591 6.103178822644887 9] 76.31533794108987] [[5.0076482081257865 2.2534540623674886 14] 13.201878940002704] [[41.433809231402 2.8877223375614363 7] 47.64192729799705] [[12.710952634144292 4.358426515638615 15] 25.976338841455245] [[39.71260601315293 28.978385136875893 11] 246.19389583666023] [[66.33391143717692 34.34334115047076 4] 193.75952872292928] [[95.12087355758518 11.921628963125874 18] 122.380634755821] [[52.85776363357848 21.60999881716441 8] 125.86907549037623] [[57.58021260001176 28.67821361612835 20] 171.84880758851116] [[54.36641387001006 25.486776742375987 12] 150.3080657569973] [[35.56989497768683 14.254702476094312 1] 49.82459745378114] [[13.382683009164301 4.442261234649417 18] 26.681691840078987] [[60.65875331826746 7.769502301707357 17] 78.48045850771258] [[93.24666319357326 40.404736677653005 7] 235.16938528835186] [[5.040497457627201 1.522643446422579 18] 9.40388508964703] [[50.82013932760139 24.353894767240696 16] 144.34708538579073] [[69.27267345871296 36.338384570185745 5] 213.31459437725073] [[96.79994921320608 15.871211148847996 6] 134.76486810853518] [[54.45077017967408 38.32583064629838 20] 313.0094143723014] [[15.539451588255478 7.72901902534634 1] 23.268470613601817] [[28.882976022404556 19.710348371200265 7] 142.4656665252277] [[73.40080725013684 29.843907811604122 7] 173.66537005941802] [[22.739960850752183 8.666618444824003 12] 50.74684173066456] [[49.884216353438546 47.30178185588862 3] 276.7249165536684] [[7.9885972588183165 2.7313016367147953 8] 16.286123192154072] [[11.14941136705511 8.92909434202704 18] 98.97333583555567] [[47.85743125350127 47.596600641583144 13] 1201.1238960560117] [[38.30885283646641 28.43603701138804 15] 256.02227211005936] [[71.38160750462866 6.038642740187805 6] 84.57497925065934] [[71.23306861574096 53.34613909027904 1] 124.57920770602] [[97.82110504209223 93.0335226949768 9] 1417.1371120482072] [[51.471912599955424 11.771789381583858 6] 81.98484593630316] [[99.60141764053807 28.7831288671433 5] 180.20078696578835] [[53.61945767666012 14.436772445381907 13] 93.13139171373356] [[49.38146679786464 42.44540743614831 6] 390.1178940537522] [[69.59642064293725 17.171202650896205 8] 115.18565503500577] [[91.97897841309951 32.863208149720556 2] 169.44710405486438] [[84.40695323362026 44.958674679935726 10] 276.29312702553733] [[52.57619260901794 26.0350908167576 18] 155.72332658578546] [[93.1642331418459 69.26231021832028 18] 630.054099263076] [[46.36415154965247 35.12624647421074 10] 315.25858029088334] [[31.242349879114563 11.796489574573823 19] 69.14759518212693] [[42.865726576880036 6.989998867483269 12] 59.56957612403549] [[64.17458996788066 58.27060000675732 14] 986.2999174027675] [[6.487826575898864 2.2566360817386526 13] 13.40816393580788] [[13.207497595766595 9.198713686647386 12] 72.85865113072923] [[70.6016664685257 1.3357192403189804 1] 71.93738570884469] [[55.76630017234502 25.125985222693245 9] 147.1137507763671] [[60.92499830851098 12.175171713141259 11] 91.3567892803542] [[21.473842439715 14.638863613119042 16] 113.21052503714] [[7.29761442140255 3.9956753304698602 1] 11.29328975187241] [[90.97864013309061 53.249924259676085 11] 346.83080241867367] [[34.795911565134894 29.810927194387215 14] 399.2038220670861] [[35.827549826016906 14.218972610927663 4] 80.9197709253632] [[39.546121725902694 14.42732401629277 12] 84.97335709637751] [[78.80784128126857 47.752612503742704 16] 321.0622564023231] [[29.669548265097646 11.16130156474294 8] 65.42742895142949] [[41.877871148391556 31.339461310331526 2] 128.0097962143897] [[96.45569614357852 18.392715461017353 5] 141.87250555698967] [[44.50414037405847 2.468736253824126 7] 49.731590202253884] [[96.61711582701844 86.66831303907647 15] 1431.2210104257845] [[43.37761916947818 2.9348102206830933 18] 49.673179920766955] [[43.16828189846194 41.07615871136706 17] 991.234563429159] [[71.24871883988943 34.27614140106973 8] 202.77031500012143] [[72.00284771210015 50.02769884788771 9] 384.7520832867882] [[58.607074672758294 24.77765161405817 15] 144.457764289519] [[43.36047767706684 26.079021784927836 10] 173.14976360234292] [[42.95042159101022 29.719768344827944 8] 223.50945076690684] [[55.39532056026885 15.159642780072891 12] 97.13802055092152] [[80.20134299645808 16.46726529954028 6] 121.63620415649822] [[65.63074492307436 44.11031107870641 20] 334.5582901485483] [[95.90898625877685 78.99985253197855 19] 967.1911621988226] [[44.93464974876068 6.645727635443595 14] 60.533074915486445] [[64.13619688513904 19.559674118818087 20] 120.4206738431643] [[72.33008658132991 60.79012996486183 20] 808.5690871931629] [[86.5046177827758 76.06235846475427 13] 1093.8051797306373] [[5.599328666646549 4.769474696787083 20] 67.13361663804004] [[96.82856769013507 18.371081267380568 2] 137.05623693880432] [[64.7053089814772 26.72576471354562 8] 155.63810894862658] [[64.89303839035142 63.817669768063276 13] 1516.5739038298143] [[22.081092614193583 10.272508503435128 2] 47.40505943682957] [[78.45538126935402 71.71512771572645 16] 1332.679873493796] [[82.19164647536537 47.112189200617486 6] 292.215306546664] [[48.910798887981954 45.64629596145204 7] 543.1636830389002] [[21.39713254486719 20.070171379355273 16] 428.59035132194794] [[20.64811391675354 13.523178155354993 13] 98.6246889246665] [[11.315605934104086 6.901626537653339 8] 45.8070294871199] [[79.02736913375904 21.337105320652302 9] 137.48385573963267] [[38.946106398256475 16.744414995670517 15] 97.69175120331974] [[51.680397110940255 3.7366638242413464 4] 59.73455231612022] [[26.94915793849407 6.551274839895098 16] 44.25990925385036] [[11.218737779872333 4.939631645171348 5] 28.392049666350893] [[96.44778208672247 67.88749960432828 8] 521.5205010073371] [[85.13222781083006 79.62809107225338 20] 1878.9124745877998] [[12.592895915257682 8.546862563352652 7] 61.43070262494836] [[96.08146737104967 67.27288343536999 4] 413.8809145734012] [[94.09583022707103 45.431171050729134 2] 206.89316387409696] [[66.78681984070352 14.077812514257754 5] 102.41976734500722] [[88.95861864779977 65.11900726795929 18] 572.8537943396487] [[80.35682207513378 11.16206322392801 19] 106.28213603112948] [[39.29915728512996 6.249640683515944 15] 54.16204421792032] [[96.19475980746459 13.964225385599788 3] 128.47174807613018] [[66.37073096496803 26.007665802266025 10] 151.88881958970526] [[13.291387158096201 7.670702403431253 12] 49.50195800445736] [[34.589309112158475 20.167872087909153 10] 130.7367476367678] [[77.92522957632168 15.068202763542569 13] 115.28599010023963] [[56.41120292830305 52.86615527377357 7] 634.9184345369981] [[47.92366456714486 17.172194267145343 8] 101.4190298176882] [[4.629917777908709 3.880120713147489 19] 50.71742846232572] [[2.0151102722242196 1.2008383674055148 6] 7.602220134862349] [[9.794328711030424 4.319358868939247 3] 23.082830437863976] [[86.4555299377068 84.3612271494064 7] 1112.2464773352065] [[67.77875624832342 28.29026601862118 12] 164.88998881401196] [[28.524405237840668 13.068463537332565 5] 75.21143360830341] [[14.67525930172704 13.25589998196177 15] 225.99388189831842] [[61.34293253292291 28.889190641267945 1] 90.23212317419086] [[88.32390792074168 42.85906474354229 7] 253.23283467305464] [[98.40996227007633 40.804190606083004 20] 237.82442196099836] [[51.47040011933263 8.990539058490626 5] 73.24512447094364] [[48.62215330774875 42.92721541851314 7] 454.8226150923059] [[92.34267871594294 39.98205555814482 14] 233.36469418548845] [[30.13959819718503 13.971069628126362 4] 78.42980593812318] [[30.797917443245364 29.218722276207856 8] 402.2584251731433] [[39.275926858353536 21.217398164750634 18] 131.56636478496551] [[13.115303727663411 2.035809699634647 9] 17.93506483933023] [[18.58482513408177 6.6125722026573595 20] 39.11454476917396] [[24.33323323276847 22.429685541821858 2] 89.86765380428918] [[68.13815222541973 51.27485460699598 18] 479.61332704417526] [[26.165117705242608 1.6713172951497492 16] 29.73583462200844] [[10.75287537685158 3.531367399641346 8] 21.266458476468646] [[99.2170845226871 31.743459960909615 2] 172.8599900204019] [[42.936442295091204 30.649384578639104 13] 253.92854787430417] [[55.29278396057164 39.60754544217884 5] 271.4430629153236] [[36.84745711981092 24.41323094999497 1] 61.26068806980589] [[75.15279093139003 39.7532767768862 2] 175.68747904050613] [[77.57863381895166 1.3734279084596723 12] 80.37499555087092] [[66.42430933189914 63.341671694393035 2] 253.50974538929722] [[47.98259289207612 12.51497645055965 5] 81.74573310204578] [[57.484609800261914 25.948574765532793 14] 152.08170734668352] [[77.70244495696738 64.37573257950204 3] 357.31053889301944] [[31.700988840269403 18.25681779412767 16] 117.78189375874797] [[23.615141386492493 22.436137301177187 7] 277.8997743169992] [[86.36063569820767 46.09869350598603 12] 283.96917549295597] [[68.82682799984582 22.580086475302107 13] 136.03649778681813] [[40.00403412652296 35.757765211958464 19] 629.1036682477018] [[53.4090189183333 20.529235806972792 2] 102.35847073164919] [[96.55139819088762 45.550156136492994 16] 269.01346901416144] [[2.1690976316868427 1.1844799789001712 14] 7.386331508372811] [[22.027587753732526 8.042318722334835 1] 30.06990647606736] [[26.797902031044448 24.747699549645475 6] 255.81867110950094] [[1.6194313096076156 1.1571054662936378 3] 6.177913642037894] [[14.323852834101885 10.475220693728755 3] 56.19797012524354] [[96.09094282717358 60.78921812614809 5] 383.757402705404] [[72.97312335961854 52.35434462443988 17] 441.9856299699026] [[39.91525683043575 18.443170697619596 5] 106.19982766749791] [[48.53764910024726 42.182012619992705 5] 349.37080097674846] [[91.11418476255788 5.575884105190139 6] 102.99288468415783] [[44.38965138096914 35.959135605392504 3] 198.16483096339752] [[83.31183517240405 14.97675012760438 19] 119.83013396696454] [[79.2578790783619 41.683586688895765 5] 244.8450783551194] [[67.5711390967884 25.409619515198475 13] 149.017324565094] [[18.155603894288042 18.08429194922688 15] 528.9037353105624] [[45.68226199644451 14.496285390874553 1] 60.178547387319064] [[7.984748281769091 6.652395429461352 14] 80.91013578002016] [[62.779389925754295 35.31162170146839 15] 224.153450013921] [[42.84932503035562 7.720475900596811 18] 61.68382646975052] [[55.87452163759792 9.004238935637941 6] 77.34124923043046] [[32.21220915139456 17.124310005995056 6] 102.954504851643] [[99.58929425535013 3.2544886196154508 14] 106.31816492946592] [[43.39313868242917 15.628577517114456 1] 59.021716199543626] [[64.34240164992335 36.072382120621256 3] 188.27162821943503] [[10.406682431198682 6.849851549660478 2] 28.61507190652608] [[25.39230810766345 4.627485360097657 19] 36.70976894959386] [[13.604018690802539 12.140473446125348 14] 190.67160292134096] [[73.6531551761122 24.410849879213284 1] 98.06400505532548] [[53.54182011009326 40.56710861769189 13] 377.82144682644355] [[20.38358718800131 12.96576792898034 7] 87.78028057050288] [[37.938915396135116 22.431757848642693 2] 96.06542858601009] [[62.810321519209594 21.781676320017294 14] 129.50095243444727] [[11.683097994749504 3.892614028350218 17] 23.358313758625524] [[96.18473714140626 6.6999154748414504 7] 110.58784056936896] [[82.75617522782294 37.33613099455215 1] 120.09230622237509] [[41.7040839884821 27.089227319358532 14] 195.83720078309221] [[17.497882212375732 16.386687435158883 19] 380.1843585138797] [[3.2597290291735406 1.1762823639597482 4] 6.822833546365433] [[91.1244689002826 62.86546189591863 6] 443.0240944259065] [[80.03189680016484 22.66280684476188 12] 143.26268356604555] [[76.35470851379658 39.39029282601283 7] 236.7610198713921] [[75.04036021097855 55.19184141298909 5] 386.39224657350826] [[20.826827840861547 12.218456173144967 4] 70.47798509716675] [[79.71851318756408 25.392408096621057 2] 138.59146777295402] [[90.86980484898106 34.295054566003465 11] 201.03410961336058] [[44.31738717455685 3.5173880172675864 1] 47.834775191824434] [[52.729863230644305 18.36336953654365 16] 109.0811391566508] [[95.20747140821382 15.978622778118039 10] 133.60975018777688] [[4.359553345341404 4.0907475576532075 4] 30.801505047838784] [[39.24920293177465 6.019267451439951 6] 53.46770132709985] [[98.11696767288818 84.78740522734803 7] 861.866953216548] [[92.99497312029891 67.97207084467117 18] 596.096020390464] [[70.66432511458963 60.19294403395898 10] 705.4659208210054] [[62.292257156864956 38.01811635433009 6] 244.1125150439312] [[96.91922733110314 56.192622101381204 3] 293.35349555871636] [[11.432490544550685 6.93699672531686 10] 46.39938781763675] [[43.22230347608019 20.997118138340397 15] 124.88788296611587] [[84.46564663112994 46.61958653673293 3] 243.36868344099537] [[9.019020417080824 2.4089177087261415 6] 15.586957176489083] [[3.1358427051995 2.3871887817988675 10] 21.62191352974425] [[56.091173835289624 52.3776379629151 17] 1127.0583066137265] [[75.62708439789436 58.00031684190246 3] 314.70582406921545] [[64.94870158741676 4.710861445449503 8] 75.10724419724977] [[82.30635744790327 68.84999882343027 13] 833.761495903977] [[95.84117451015526 76.36123755851183 5] 575.2104004580367] [[15.85827642234341 9.80419942436573 8] 65.78656682467182] [[38.36051569631893 23.401278985610436 19] 158.36478474238692] [[37.893707208832645 23.63448324285161 10] 162.0537951376077] [[25.874858663862213 14.318133078846248 6] 87.4061366194125] [[35.634905763450064 17.525759467751417 15] 104.60626730963843] [[39.60382010905626 17.620234061836264 10] 103.05881898956464] [[54.81025705915235 1.0554501231371454 13] 56.96260383187338] [[6.7669556469497 4.232288330958017 2] 17.878552025112796] [[16.18984155922917 6.806440142115282 19] 39.67709672775641] [[54.61192861974852 25.274501300205856 10] 148.64239385349703] [[9.34335975766636 8.654766854756833 7] 101.311902704218] [[74.66208947101208 61.77013734077263 18] 764.0736098745373] [[8.367797443878674 3.4643877224277384 17] 20.191928231089864] [[75.07333342643705 57.044820730344064 16] 543.3642511166481] [[78.50473985221493 54.83517796150152 7] 406.37153157568264] [[69.61870514010778 50.57380980007638 16] 436.7217576131241] [[75.31561035269505 7.248775734240275 14] 91.35707811733398] [[57.54076770324197 39.57677389159092 13] 308.6804515544811] [[98.30516773756118 65.29644905402388 4] 392.3921511791716] [[18.044361302968724 13.719939367178828 18] 131.58557892154957] [[36.55441162610907 2.6829395386740607 7] 42.34531837830981] [[99.71655777648623 10.058262810998073 15] 122.08984389312211] [[20.84786682947951 1.768915862879851 19] 24.713710644090444] [[32.03063654389827 15.879489797641726 9] 94.84253993765286] [[49.338406725294796 16.825802100363624 15] 100.40525373424818] [[92.64390699820136 42.38307085930196 16] 248.88922543343057] [[44.69567312348283 28.815497844407584 3] 151.4586074184799] [[70.46527250371587 52.338888971568615 11] 459.2715631020492] [[27.71958036625896 20.194147737984206 7] 157.26648036282955] [[43.93121212502304 26.012985161574832 15] 171.4203277128964] [[90.18466984200599 3.445182501311801 13] 97.34871141645327] [[47.27471009533678 9.787347452027728 3] 71.32148570260127] [[64.40859814592488 11.909868468605557 5] 93.6118423655842] [[42.44022555141597 38.577059000681366 5] 337.7524994216709] [[4.231117649808061 1.3193929812009573 12] 8.06561279455222] [[68.0320423773584 31.328168527801576 13] 184.1602604186337] [[39.34926396545509 10.64159257088826 18] 68.52187345110895] [[72.07884753908402 51.5877696997273 2] 212.17642559893758] [[49.70871126780597 1.2759799114368948 8] 52.32790350483065] [[17.453492631380605 11.75154808860424 5] 77.02549625953121] [[14.90733603515419 9.435389764469404 17] 66.2895439066975] [[27.455548352385225 10.726157801760491 16] 62.662138166492454] [[20.659743423614053 14.409832958002466 8] 109.4330918731749] [[79.00082885471642 41.247365193199556 4] 232.92607269677978] [[69.71414069811252 34.77167281850015 15] 208.45478023137105] [[30.174835220921715 17.29258005366764 20] 111.1839910507314] [[72.44654957854732 12.447872073143438 11] 102.50739107655555] [[34.907790800714935 16.20682350788693 5] 93.35391618931824] [[98.5013014183858 77.98064852242818 10] 765.2101918380037] [[95.48196443014523 42.48092450915688 2] 199.34402139644305] [[37.448596034089604 1.0377090501292852 15] 39.583163479461604] [[22.455320128552664 15.498112509835645 5] 103.31605745300294] [[71.71509232948878 67.05701920874576 5] 609.3915056253763] [[17.79998905011668 4.323279953064484 14] 29.220334282686117] [[75.06585573480238 13.786636768411906 6] 108.83840405194432] [[99.23360400447197 26.215206712993044 13] 170.48768001740115] [[98.30726208059167 49.63640902491635 7] 296.32244862217823] [[80.44350076625281 63.712879846482636 6] 522.0346242310579] [[21.600668221131468 15.577947603105084 9] 126.30574070920802] [[98.44816900440122 84.21705921275685 16] 1159.7230896538254] [[40.863897761515716 4.769220401684487 16] 51.66266083229953] [[57.44083246437311 35.29199827410778 7] 232.54489033680792] [[36.05800095472555 16.321846222962325 2] 76.08986385060196] [[84.05291583994388 30.887764403242304 12] 181.71754269736763] [[97.15471686565093 49.97814106729223 4] 281.78478477508565] [[41.950243175722264 25.24482692559991 18] 168.72058520975463] [[94.02811189387147 4.058865947312164 9] 102.51206653955693] [[95.62478597503049 90.05486071158084 15] 1891.9657370453415] [[53.26239588219156 46.775975263874805 6] 444.5789420601946] [[27.2155493826714 19.4864353500553 7] 148.58116171438004] [[66.5958497321677 33.479667792607245 20] 201.24926208623992] [[61.43286236794878 45.82870792250074 11] 405.4684870550793] [[86.68488985519146 73.34905018196378 2] 295.4478210157385] [[38.37287470888669 33.71929068020602 9] 408.76312029799783] [[90.65733369636597 9.10650848729462 7] 110.90412602255894] [[23.099019197096666 9.369422538361912 14] 54.62554528333006] [[55.19338938912505 29.54474736415371 1] 84.73813675327877] [[57.692648916749725 22.852028176372436 15] 133.37395738729748] [[17.117597089299935 10.519032788642011 17] 71.67505478142151] [[27.59782326938752 13.742344758046274 17] 82.3421966583078] [[17.774392113591883 3.5016371157755213 20] 26.49582967525976] [[90.0197146122966 25.81285937880688 11] 162.40016745973557] [[82.19173215309975 39.13959934739271 3] 206.62288644730612] [[83.10026614471248 70.08013761398573 8] 727.5558949098237] [[22.68661926000994 1.5986308809760947 15] 26.12625792287413] [[34.25935775832612 23.62453631832776 16] 185.98157022781524] [[11.437374350857123 6.168027903763856 2] 27.09976761186108] [[78.32892184151945 28.40632114611351 1] 106.73524298763296] [[81.52178939299681 50.742101354741365 16] 350.1307642376835] [[25.748248317029717 24.709011683610314 1] 50.457260000640034] [[39.20789232914373 35.23480714046512 8] 422.1249058042603] [[5.661531103945288 3.6913845570431585 5] 23.710015822128902] [[45.17301451834049 45.015703911184154 8] 712.776677263674] [[39.2468164573046 16.718834701887587 16] 97.49968267200323] [[57.93343808402678 1.5098685954878224 4] 61.03395388753573] [[28.19553079441082 24.82247107151423 8] 283.26138827845625] [[44.78538832174986 10.112577424861428 13] 70.90935659904596] [[20.09321600276769 13.229121102374089 9] 95.27679735402502] [[22.010971696571474 21.672194716316284 11] 445.1921231233986] [[68.36797549579182 15.488220238969395 15] 108.41726335674622] [[11.09057425862352 5.566549875659331 8] 33.307783075763794] [[28.76905881082521 27.528105379320337 9] 427.50627785771064] [[80.1147321381592 63.293720345638434 18] 673.2026910001774] [[66.51325283311229 9.935124301294023 9] 89.87271545571464] [[53.010517088079055 6.3845376139649685 2] 66.54854012011324] [[78.74325831969568 6.56769531403591 16] 93.07391840848919] [[22.425096830011302 8.772727038236951 12] 51.24423346179713] [[10.935481830110904 1.9478828979654796 9] 15.675574402878645] [[83.05511829651901 3.408022572943977 10] 90.1628154582489] [[33.98283213821437 33.947562269134394 9] 608.8415251705629] [[50.61655555389468 20.677317683106477 7] 120.30363916314516] [[8.672939793682225 2.4965654208905708 8] 15.68361520534658] [[90.83456814838277 58.16438155007241 12] 412.30071699271076] [[21.948171326823676 8.367569311547776 19] 48.99451920535029] [[94.44454519135057 66.50508696497106 7] 497.354245485113] [[98.13876868916418 43.50306898028908 18] 254.42246521604412] [[6.959194810669331 3.832302438937534 14] 24.011834492567516] [[23.225295932686354 9.749691052868306 1] 32.97498698555466] [[36.42618602208911 27.5796190625324 7] 225.95645765102628] [[72.23528939132318 66.33627698641419 13] 1136.2364082925383] [[67.70809741213775 10.255230606466718 3] 91.56038588877583] [[55.18879504504727 50.21763265443049 11] 755.8964537651708] [[49.421465979403045 20.644868092903206 17] 120.33318429769088] [[95.35857680563885 85.65801546691327 11] 1232.7027315176235] [[76.11243961263989 41.04813265839691 15] 254.29079504624664] [[71.23661019558129 35.6255009679127 6] 210.42324653676005] [[86.8891761723769 29.345197025560633 1] 116.23437319793754] [[92.93551917689736 42.69181988085663 15] 250.86705947570704] [[45.52025259602978 20.390208302254305 17] 119.389257242398] [[61.19156776814454 7.010850615814872 13] 77.02764239250011] [[95.21596814990193 3.497330066721408 1] 98.71329821662333] [[63.76747912355935 21.450974530965276 1] 85.21845365452462] [[62.286649595469505 33.942133202865186 18] 211.45751307364] [[21.42446200810241 12.963113639812162 5] 80.0096316454027] [[19.797143605060914 16.81446914473166 15] 222.02421726438766] [[60.49267667549025 48.21520858361496 12] 500.4107541055505] [[50.96682888736586 48.142530663477 9] 717.8221928953002] [[29.119781594139393 20.621945690365006 3] 109.9138207176232] [[61.4843081910128 39.696441208909626 19] 285.45712728371836] [[75.9238238428498 60.155101297790864 9] 574.5816615872182] [[73.27887311093572 24.107301732306457 8] 145.11169327857627] [[29.877548284805307 9.654482815741648 1] 39.53203110054696] [[76.60782579151413 16.72602206340256 14] 119.40360393725851] [[27.868100793045745 3.083373548784987 20] 34.80202940590401] [[29.149204693966716 17.674250123289475 8] 116.77011519260157] [[2.523548454395822 2.1298311474497513 12] 25.930227774292923] [[26.030993220401534 19.549515479283638 16] 181.18638187625513] [[36.29335669748697 6.508745744385352 14] 52.15552338107329] [[94.35578203885551 25.375653502827618 18] 163.77692331363534] [[38.58505810054985 4.59544829680341 14] 49.018578288383296] [[76.59816986186677 5.308394774469421 4] 88.00347917077268] [[46.36758977670394 28.122560375761022 4] 163.69081944765452] [[24.642459308635743 1.7673394221146403 3] 28.439733364288593] [[31.380552671284846 16.6261104373726 18] 102.10208614449583] [[33.900572557463114 14.915978760049354 7] 86.89287707179884] [[23.968033680827936 19.572571510122682 16] 228.1379856820872] [[44.692603957480095 26.502856983920378 17] 174.90454500516444] [[12.06917327277463 3.4702231152900955 6] 21.798207098738928] [[70.50126602314519 7.683359147680719 9] 87.74751217898074] [[11.73175909774384 8.266515315236536 13] 66.9905260728794] [[8.020961408169526 6.921012246984052 7] 70.15577526484348] [[44.30957055509707 28.472690860574776 18] 203.56443212564818] [[90.63488539226013 78.61167653168053 5] 649.5781131706428] [[15.601594809098925 5.305876100595774 16] 31.682089532729787] [[26.669916796285477 6.597927214341949 3] 43.53413361643465] [[24.387632803627113 18.754511197867682 16] 183.98202779823546] [[73.92786438472938 3.7147924369165994 3] 81.74015724180948] [[24.1091792103134 20.72459578547941 1] 44.83377499579281] [[77.57967489444552 55.26945030057066 15] 459.1028654350043] [[76.78882643257505 39.53384799837222 6] 235.29593492839172] [[51.87155762017869 22.299864175561893 17] 130.1036371438406] [[49.33137841950808 47.8945405120581 10] 854.237456006397] [[74.64156298960076 62.7812538454974 4] 432.00234372275304] [[1.2133820766320862 1.1281333515444294 10] 17.24227524100842] [[49.62329647362252 47.98529074327078 20] 1445.8932537427684] [[8.556781718101576 1.44332208843812 13] 12.029126455626962] [[8.739511565963074 6.9758357217963765 16] 75.75981493563721] [[28.961191434000515 19.007230177811365 6] 128.41183727182937] [[46.20954718097251 37.04806532682152 11] 382.9970350523418] [[34.20595470765076 32.3293565546959 1] 66.53531126234665] [[21.53698329955329 19.638787644492314 10] 281.49358151096635] [[35.448333972244214 19.312675249325522 15] 120.29083115484744] [[45.36056555744654 14.947864445977922 20] 89.95006683854983] [[40.462080383293504 29.43599737375332 11] 248.75416380961977] [[19.3749572119714 12.741740593518962 19] 93.77697839202798] [[32.35827156537836 18.715778929275498 7] 118.51789735491846] [[14.017460898491908 3.314643214699708 19] 22.699825267223716] [[18.38807496564226 16.360226134498614 11] 227.94973324527584] [[27.41123839088484 22.427790916335493 3] 123.9817211626651] [[41.5782900884442 30.94822646045284 18] 282.2839303890769] [[23.020377637955786 19.27987028184564 15] 242.11660894249707] [[73.03174345444967 71.33773738244098 3] 423.13995289641343] [[90.05231020645824 66.77456511595018 3] 359.3442630171034] [[54.62541425848465 18.600441374931965 6] 110.86081377867647] [[38.610503381189694 8.954156386162738 4] 61.74676029118935] [[71.1524864589547 35.7568321892137 8] 214.03535705106694] [[61.806007262005814 27.752367836742394 2] 129.77221613449527] [[13.726036691397333 5.92999946342504 11] 34.60387137659552] [[28.158913375749137 6.620337597284249 4] 45.330467020147836] [[65.74103350574357 28.69786336150174 9] 167.50556107717932] [[53.916768783029674 1.6338178388492035 1] 55.55058662187888] [[69.07965705948867 61.373317195884155 2] 246.35296679050185] [[2.9717625395133385 1.4734726421279867 3] 7.742116799441226] [[47.44814259572974 34.75533045135314 2] 142.416764610909] [[22.534834302878934 17.985707329705164 19] 197.95817453883427] [[98.10965399343645 15.416675423777631 17] 134.6913495091101] [[87.1141091209356 24.035719467315335 15] 153.50294098329312] [[52.388666753955626 7.272171485855453 12] 69.27736184946747] [[22.71665517303901 4.04324676644615 19] 32.55407112971287] [[61.682654287383265 49.26535374477921 19] 543.43242577071] [[99.94368859223819 24.50183822199442 8] 164.86052047872585] [[23.54433251028201 1.171272421023268 14] 26.00951404562808] [[20.255926623426706 9.239538817927501 6] 53.74507262759444] [[12.363074774005133 9.746592493504968 8] 88.88144216610615] [[35.45123772153613 30.53131997786043 14] 416.73908481708816] [[9.15159255590103 6.658509834125693 20] 57.93532486411468] [[47.203094662425265 36.91770867806287 15] 376.38436492496123] [[63.76061343661618 1.2809129865902964 3] 66.374421934386] [[85.56546447938389 22.606607724252253 13] 147.01336371800622] [[39.030264877817125 4.386886027241339 6] 48.91495982349012] [[85.94575793329692 79.86784065862967 17] 1670.8109346392248] [[41.92590364934643 4.622173959378004 5] 52.31483417154625] [[1.2985550715546448 1.2535625500912215 16] 31.760370812821513] [[1.7842738193807597 1.6681007889585504 5] 15.15570353736329] [[13.893376528198461 7.507713745695983 13] 46.547052554630234] [[27.553277892763866 20.639669733057325 13] 187.57575951958177] [[40.982126766591044 17.048022052901604 16] 99.36435909850718] [[82.18763967097665 24.07401914419905 8] 150.27323213268838] [[68.13676807735342 40.236443556568155 10] 263.2987783383249] [[27.45956029804959 3.418004630054992 12] 35.267449750781545] [[14.87381118418292 13.683227921147704 4] 101.23021388470504] [[26.856929937137224 17.496355695770244 10] 125.50418274101553] [[12.936318598069684 6.587502859562228 2] 29.465848673639446] [[79.42397372109849 56.77883768970823 16] 475.4853381506296] [[87.10116667572187 54.763210057281455 14] 381.53042635678105] [[92.50573751198147 16.77130111631035 7] 133.47544986925683] [[16.53246392742743 1.3249670883297475 7] 19.413275640168216] [[8.996752784987914 8.178074733259708 19] 157.93660109697504] [[12.252402816184562 11.743432711427628 5] 110.41674680857403] [[75.67734584273542 12.459894511008525 7] 105.5083746919986] [[50.56790148735937 46.422825842963135 14] 825.9126079558938] [[27.312759309711847 4.98626552080488 4] 39.4686050171968] [[84.922417956431 71.36481131214823 19] 943.0185491426562] [[75.8585522173034 6.574528937007894 11] 90.255356033121] [[86.36315246370586 46.08460036291354 15] 283.9645076768245] [[79.28130814799344 62.538724903100224 4] 411.5464850827253] [[41.177931761371596 15.491149084426917 6] 90.5874674379185] [[83.29072576282327 56.53353034190218 17] 434.6502574349211] [[83.39544778741076 9.557082212145037 3] 104.8256009970171] [[92.76471554244914 39.93304991750643 12] 232.98853048474223] [[82.21699590102175 13.841793745312023 12] 115.50481528549055] [[56.61351315360884 48.74478733643571 12] 632.1974772129078] [[12.595640512983646 3.4490436446293096 8] 22.094193898076295] [[92.50542466079268 59.3184312659258 10] 418.2191558605414] [[6.465976081124987 3.642228817272339 10] 23.07189820237507] [[43.702156171495645 15.93206993027723 11] 93.84576096343935] [[89.49864397676343 25.09596996205922 8] 159.2429307423884] [[11.61539979355918 3.1685286735858007 20] 20.32956792493471] [[14.981086103651345 4.859295757873641 3] 28.36326985230311] [[11.691304561717311 10.443206026134677 12] 153.84282505256732] [[9.860148942128397 3.617246740083212 20] 21.286434304139497] [[97.40133384335267 40.62441115047656 5] 233.7958625173903] [[99.30184502834028 97.80744821544343 7] 1319.0117372667262] [[3.21617201097253 3.002064073546118 14] 57.801390930460904] [[15.085673690846741 10.535709530497668 9] 81.59143551015521] [[8.165493305631333 4.3778169290531785 12] 27.025685384089975] [[67.8403568550982 18.261188932877744 13] 117.81479162497118] [[55.34634100664552 8.56599819776935 14] 75.61539527691367] [[28.707732255143274 5.904992841446075 18] 43.57602958596536] [[12.394446222058646 7.054238372648276 6] 43.6055002612297] [[10.48308288912326 10.116352555369383 12] 204.76467327031608] [[64.538013550148 3.6266150114892395 11] 72.22309497283719] [[54.19274463169076 47.39511898417483 8] 532.7071519546117] [[44.426674831623636 36.45126963056373 11] 399.42055318719315] [[53.33076795789264 15.927339882857947 3] 96.11951876537844] [[79.18740684808752 70.99262741925102 2] 284.8185544218239] [[65.56148458451285 4.835947456110503 12] 76.00361192275209] [[55.27496817326532 17.258052483291106 5] 105.14700941983207] [[2.4075315918132594 2.402264980678532 14] 66.38800766630533] [[64.03104065374363 31.230148460591 5] 180.82797557548736] [[60.6652888175269 43.97885997554182 9] 359.4059583586215] [[7.77076559230901 6.4424211733764185 10] 70.39111608222753] [[55.731562392351236 7.351702589268659 18] 72.66926649608166] [[56.70800487485959 23.792511541219014 13] 138.68747480058923] [[90.47481638675066 24.62507665214784 7] 158.124989252349] [[98.59505868939057 69.95515203120672 5] 475.9105868343577] [[9.357712144406591 5.532515577991243 9] 36.10497706763528] [[94.27489257123044 74.50629207762783 17] 790.1710959829271] [[84.40914574525264 71.05293322827472 10] 807.0044003736443] [[60.06414671282246 23.981695270316905 3] 131.00082876904128] [[55.876242385008105 17.59833651912498 1] 73.47457890413308] [[68.34593158655731 35.475294483730195 7] 213.67799630983257] [[62.56007914479564 35.266626699463636 2] 152.97398206276733] [[7.748543643000242 2.7901084229323168 16] 16.468743558929635] [[88.38231483455581 26.081810026688544 11] 162.38374754048132] [[98.81887550801004 47.890200963446084 9] 284.24553954808965] [[88.64994104335157 41.066658884753195 20] 241.66820624868825] [[99.11951558025324 63.246487136160596 18] 448.48991837909807] [[40.117268365497004 17.86368856147174 13] 104.52136949004107] [[18.84163828049582 3.183670320802693 8] 26.503606517648837] [[32.70081574870897 3.475203784390411 4] 40.47253004040995] [[73.44020549313684 54.22322153997644 5] 380.835938396677] [[23.825573742974473 10.203046958893074 3] 54.841484164935316] [[57.77515797433686 2.5581287524593885 6] 63.12844415846383] [[97.6890328848793 85.72577503720532 13] 1223.636500977912] [[80.04698744921699 18.45079973638134 12] 128.00225524563228] [[42.37030670442448 39.07414935398529 15] 736.2293472013936] [[33.41487403656388 1.0887874611356685 13] 35.66579270057358] [[60.91093082229069 44.13154126186021 5] 305.1855519485625] [[81.0016992016772 69.5241032813134 6] 637.5979913318758] [[71.30532214289019 59.8194495933666 16] 765.0371321019619] [[30.64625691207974 23.209646698632085 12] 214.03824670320859] [[69.39422472356416 3.2444128226171074 5] 76.2012871435938] [[97.83656964415579 49.605541416698614 10] 298.7502966380519] [[87.91377725761495 13.997545485280257 15] 121.21030971373861] [[69.0291586939502 22.242861191881033 19] 134.66401673314996] [[96.45405202859985 4.286878659705716 9] 105.42659184648879] [[38.76112189286935 18.936447396754232 11] 112.7673643632733] [[99.69047999532896 4.343185159342434 12] 108.7725250468036] [[40.531383530692345 29.956920259518395 2] 122.58651354317175] [[98.41358785594149 83.32798592154262 17] 1115.5657274863338] [[48.25408475801127 5.535816642080517 10] 60.760479615696745] [[32.36949636736145 30.745263113357836 11] 543.8442439964134] [[73.76363133207414 56.920049840316324 4] 369.3889332586036] [[92.58635375616606 2.7307010784604224 12] 98.21372718415512] [[68.42325530671201 45.62816900580556 12] 339.69700040829576] [[57.3787959291354 43.95117929414198 14] 422.6377714256247] [[6.606163569612306 2.3749660197239506 1] 8.981129589336257] [[95.85062999055205 32.21387009267154 16] 192.8926403861241] [[94.88249864809336 25.509759152074324 4] 163.80257224557027] [[7.040186261464656 5.3601673214167445 12] 49.99250487898298] [[72.06176850433306 34.701623949460206 10] 205.79148973656288] [[58.53615773771759 21.953300066827534 15] 128.7909701141629] [[54.16752259386884 39.13016263469287 3] 209.38251082415817] [[60.92557647532482 56.246857399635374 18] 1163.6643933138278] [[55.520261825262324 17.759408940317577 18] 107.74402990647003] [[95.88911570914175 66.509855990948 7] 489.1055956650074] [[26.890759870696655 15.269825013261883 9] 96.96039939962222] [[28.529645763086812 21.437414946997237 8] 180.57354405489568] [[73.37655387976505 53.02436070174377 9] 431.2297632919395] [[73.08354733566185 1.521134298167782 7] 76.19048254612707] [[67.92069399253829 12.126566587133839 17] 97.44512069548846] [[12.8242374839988 7.04264525400052 14] 44.05703579063212] [[82.10744410006006 30.282582316611652 10] 178.05407932454702] [[87.6058214701646 75.46013018257248 9] 869.182823925539] [[71.86212627068872 36.2916933351921 2] 162.7734841535674] [[28.32135841545515 11.387699688198163 6] 66.13230194750206] [[23.481572150622096 8.023488577226278 11] 47.85734700721832] [[11.853318159826156 1.8412095967605948 13] 16.212927961456874] [[39.011365969998884 5.779677942752218 12] 52.58113293207157] [[65.98940680538294 9.55209129770398 10] 88.32699761711326] [[28.55261600050718 7.100674038157557 11] 47.454653520248684] [[76.95948899589953 15.095879441497834 17] 114.51860249648266] [[10.76405217528575 4.080946043993166 10] 23.908423301272343] [[97.74129974210496 30.54556494267291 7] 186.54866325585445] [[42.46760959856026 11.877098622706828 12] 75.44461503368925] [[52.184515766236615 30.536017756564373 1] 82.72053352280099] [[32.163237305138594 21.497887858133566 7] 152.17968847877083] [[10.243400623891397 7.498833993488792 1] 17.742234617380188] [[98.91035772722232 73.70731946567349 12] 657.5796015840085] [[19.69427370802523 5.651714220818454 2] 32.61958850052263] [[99.89162297235225 87.25129918418075 14] 1256.4115764801081] [[75.4807617903234 70.65766470802104 3] 410.9979382966933] [[30.194268844993488 25.78173332142646 17] 356.92350889862047] [[74.18986318704081 29.114838371266217 17] 170.03120563633448] [[47.53423398616505 46.82605371239094 4] 369.08976509323213] [[36.85683129346835 10.947998700926004 1] 47.80482999439435] [[51.61949354638091 45.610395225189976 10] 592.9533752512559] [[82.645961641861 2.260493601860823 20] 87.29408206056561] [[3.366617160907275 2.0134114040888824 15] 13.378886173943854] [[5.604951515231579 4.018232575630669 9] 32.2926556620588] [[21.716121907326237 9.506383394490213 1] 31.222505301816447] [[61.36833420360491 26.37379836410508 8] 153.69035651439407] [[63.25850418698275 43.68293768781501 14] 343.64408365312704] [[15.9441299699147 2.6525771714134865 6] 22.307553791333603] [[4.408226149538809 1.3159832712239357 15] 8.16029337814267] [[32.68924191522031 26.049726879053996 3] 142.84867384284368] [[82.52419076785623 73.00883482058688 14] 1106.182196951305] [[48.723137633325024 29.277280858725568 8] 192.1144687114049] [[26.95295408066831 11.295774503119105 2] 54.278474839430466] [[64.8841935530775 5.515938768719196 1] 70.40013232179669] [[75.6982931528075 19.191298155895574 5] 126.983518173762] [[89.26478245686148 35.639851276828104 15] 207.91771583968017] [[62.7343635271904 15.922297197573911 4] 104.9729290780234] [[42.31430744447757 29.483586956052577 12] 233.68084628267457] [[8.269222175004568 4.857987295653365 12] 31.768072349688367] [[37.746154873040794 36.44970170653848 16] 925.2966131180273] [[93.62361760349464 46.86982772254033 4] 263.66477307474247] [[3.375743015478888 1.4686122707820144 18] 8.574815154464066] [[16.362779004710312 9.732785270724507 13] 64.3285397961788] [[59.73103426962167 17.908184870083755 16] 110.88366583953753] [[67.65517667672046 31.86534562365778 8] 187.67264388747236] [[77.57107614704748 46.26383507015476 6] 293.02163156413366] [[82.2343616700734 46.866313496994174 1] 129.10067516706758] [[82.40701886055463 24.47765750953283 5] 151.69650026602125] [[70.21301148408664 63.029757571016056 15] 1044.362592598527] [[89.90707318099143 30.79783026221993 14] 183.59601069513815] [[43.200843150894464 16.311387034059123 3] 90.4663817824212] [[33.67286849683417 7.232067880670996 7] 52.09212580982] [[90.77140618120325 59.733220937753 3] 314.72140187244173] [[8.86930458526967 7.195535324076164 7] 65.43581352793404] [[84.32180975123114 70.6253720383297 8] 722.891299546095] [[87.47044802904921 84.6909614666894 17] 2288.817876692353] [[55.49176324199402 55.37252058358257 4] 442.02982139237406] [[29.426110739425326 26.918510260136102 14] 471.1789436741894] [[45.724858527220256 21.300465403739988 7] 124.8806351255558] [[44.661019102598786 15.996379521783268 3] 90.16487085746152] [[51.63996851903517 28.075253856535113 18] 174.685777642957] [[35.872881127645655 28.673716148203972 7] 254.58335226185443] [[91.96085300910434 55.74354326460884 17] 374.9667400050254] [[34.30708045720845 2.513095988078219 6] 39.73055223219725] [[70.85808689772745 8.976524721683003 12] 91.41540128888086] [[5.842232324844098 3.8005601440396477 7] 26.232358276977582] [[99.17248041889341 46.38129380862899 4] 260.3528724524506] [[75.43881808576381 17.726039293723414 7] 121.77491574270864] [[25.799882353677 12.269214927307633 11] 72.56862425555329] [[52.47657722088839 2.887958715837871 14] 58.588874473061736] [[19.163185303819144 5.915550578895517 5] 36.17561483764851] [[29.258138506337627 4.9407854624887735 10] 41.14744032723145] [[90.5213937025281 89.96630631582131 1] 180.48770001834941] [[67.58672074278194 67.19201546646326 3] 401.9794832824227] [[63.66350759607473 27.845918340670796 13] 162.6487489517827] [[38.2636457775325 14.299124942791918 8] 83.89394850684587] [[64.30592952072541 25.47898834881485 1] 89.78491786954027] [[67.60353130940399 26.507859140623946 19] 154.81586860342836] [[93.20805855079354 35.81853781826188 4] 204.98598551208013] [[37.96635645334098 32.32495837733967 2] 130.13808629962222] [[5.297166084191189 1.8881898614879207 7] 11.157072221531283] [[89.26935157800908 58.59261102769017 16] 429.7679835119695] [[14.058830232448393 4.502279296456506 8] 27.302592858137636] [[90.70877162993739 40.17906861649422 1] 130.8878402464316] [[53.414624806936054 42.25350439329601 4] 278.56706264052224] [[60.311763911068034 43.86577303874549 5] 304.29019672530677] [[56.539278293504765 17.593803558148977 20] 107.62305372819833] [[41.598929152208854 6.740322039966757 7] 57.68604532943858] [[11.532630732378289 8.47012635433459 13] 73.962592496128] [[36.794405925679605 22.11812484076747 13] 147.49993813971423] [[42.978491771095186 8.481317908654496 7] 64.11073665721645] [[5.726352563526737 5.444213050961848 9] 82.83901673439493] [[68.81697309565098 18.18829690517324 14] 118.26181734980479] [[48.447999123523445 4.569785654114091 6] 58.53938841255216] [[54.206097965849175 24.519751997381675 19] 143.7502575141506] [[88.63827553062937 47.777712579053414 6] 288.66756609020626] [[60.4327553139373 9.62367050105445 19] 83.3257056706178] [[90.04935372497623 6.922051922507287 20] 105.04626297226388] [[83.18589817168011 30.78832805424239 19] 180.94442605762606] [[2.5224079439335205 1.9219242199072046 19] 18.56241548224966] [[20.562596086935386 4.328884628462253 10] 31.52904234869741] [[85.83704312537625 79.88172861151163 1] 165.7187717368879] [[53.93000858213211 49.385377034284865 11] 760.4923968312856] [[37.666388968918625 2.450357032892462 2] 42.726509070894195] [[96.80611138013244 67.19407128879601 4] 411.69167199193663] [[4.029535155208203 2.6894929544640664 4] 16.19462442751228] [[24.29521719305764 17.328627592126786 9] 138.22379699440455] [[24.54449621204483 11.464965216559717 3] 60.68676751588211] [[82.56971675577361 63.795626600957526 14] 626.3353842388609] [[26.745063544011654 21.260361647188045 2] 86.16621349223655] [[16.62948882141705 15.206178738954518 12] 244.8451950197014] [[98.3185617294169 21.800723576050927 17] 154.3425121106384] [[69.00013164434041 35.360825619070894 16] 214.0578344238668] [[84.01206908372 54.87118900790043 14] 399.3659709332309] [[27.508987130762197 7.147127540533252 10] 46.82054039684726] [[19.632930677629297 4.483884477259545 9] 31.254968341083142] [[59.36555646515224 18.317238552934054 18] 112.34765771337673] [[10.104988537285244 2.0488548989861632 9] 15.24482873052606] [[89.9847336348887 28.895795080434052 5] 174.5145099179247] [[35.332263597227644 28.128307044652697 15] 301.06782890103295] [[3.5452842767133212 1.228566564104455 10] 7.305264486312578] [[37.142331515323725 25.25723326276123 4] 153.3080652900414] [[75.84295922329986 43.514695619115344 19] 280.00891598855964] [[40.136266139607365 13.106414607262256 8] 79.04912439375195] [[25.45168231708193 6.008367691588418 5] 41.151633084272476] [[66.74234216933506 13.346746860237136 10] 100.10812341358462] [[23.374387249762776 7.212989123078754 19] 44.23881993202247] [[73.36695821240895 51.64470028228713 9] 404.3097458550947] [[66.7777078841213 8.913963340795839 4] 87.3243078671813] [[6.546223443715754 1.9281212278478657 13] 12.01249872058364] [[99.04523223990527 61.65954570264706 13] 424.8542180711757] [[94.54188130349534 5.595175655417013 11] 106.43615956169883] [[43.43881023868429 25.399885146403584 10] 164.99317118611376] [[49.58978729790031 26.014009243410786 7] 157.2881116126365] [[96.26630976250928 71.84560322590788 10] 627.1681915098635] [[31.020630616026875 15.878342196280673 5] 92.70172249999203] [[65.45982613383816 36.949763320861656 13] 234.99615008185972] [[99.8315481887588 53.472629896390714 20] 330.1314132046814] [[57.16668059784826 14.369619834061869 1] 71.53630043191013] [[3.922410049824637 1.1726722179646167 4] 7.20990224304973] [[58.845615400937724 11.609774418621859 15] 87.77213839958074] [[22.628662311485623 19.052932079271805 12] 230.29111994024913] [[35.89443933768864 7.320709667461169 16] 54.287051760241866] [[68.21881465343318 31.983261203391354 11] 188.59992379377724] [[41.16848495167582 4.859090930106635 3] 52.101389532337976] [[94.59178179194055 38.89090136942585 17] 226.6815410598066] [[84.48972198262663 57.059984155662896 13] 433.3540696998943] [[36.2488074308707 22.235272001201178 15] 151.1816687303951] [[5.206069481750631 4.814804990652686 20] 105.38928907391683] [[81.04578219614959 71.51329014218845 6] 684.8562912651653] [[47.80372388460652 2.156037526957727 17] 52.319467433153044] [[20.901903346073528 19.503630460959847 13] 358.4583034811389] [[73.97013199063768 19.775666064868375 12] 127.95380605838406] [[38.27547615467468 26.40705349719526 11] 205.0836635872031] [[28.272456061036316 26.10140796808418 20] 564.8340135211037] [[47.37083664182984 21.485412692465967 13] 126.00396573474023] [[78.87986300942309 31.90281845701836 14] 186.01628831247686] [[84.84379395829356 33.53314424711397 18] 195.74002618202326] [[88.59521889563814 49.975756858501164 11] 317.30467180652045] [[63.68650800935707 38.295077327509794 11] 254.83863380949248] [[9.652589414479579 6.9754094242086495 11] 58.26971216477743] [[9.534632337101572 2.6557723645694553 6] 16.888953540459447] [[18.5152032954836 7.955327617396705 10] 46.402266510607745] [[30.215766531815696 25.07295517793152 4] 170.82711418752302] [[78.71038877932438 16.971929367381172 20] 121.9854287902577] [[10.893369422556452 1.514631523044219 2] 14.133229262974918] [[68.95333195689524 17.909230894568093 10] 117.33882373899844] [[20.926672093725543 17.5963096146781 19] 233.07563715658844] [[47.53291535120138 23.58533470356986 6] 139.05403876590145] [[5.91529181573689 3.1459568739590025 6] 18.91682830375272] [[66.70647176149289 33.223079621281464 19] 199.0818578490696] [[48.5060341836919 11.14191655035123 15] 77.43486828472147] [[96.42488219782867 77.41915464429273 4] 515.4681812597823] [[69.1655069910051 28.956864558123122 19] 168.78667822680865] [[36.787267096245365 28.117313770421653 18] 273.21269028446176] [[17.350698887985114 6.247871308238322 2] 32.09625844657086] [[81.61092497625977 45.84756802984472 20] 290.85366941091826] [[56.50361452012936 51.36101374760749 14] 873.5634107056853] [[82.2553935161021 75.22450439078041 10] 1088.4540918354037] [[31.04668499394469 21.32107414796903 19] 167.0390252840032] [[17.421202660018558 3.4478988366749723 2] 24.99938759313456] [[50.6322393972674 43.41650976024615 20] 629.4502322637258] [[9.068697423842657 2.2521300238591966 7] 15.06024539179525] [[36.19939242357192 17.75836036793258 6] 104.44171687805766] [[68.58788354549748 28.66305048648755 7] 166.6979481672027] [[88.89077332130651 80.96342262787498 6] 817.1832802104902] [[37.067639978911984 35.433139989747865 6] 389.7785670307672] [[26.383346994434373 2.700939377058423 5] 32.40093674380447] [[68.33580977157266 55.05289316925555 20] 626.3711488612827] [[72.07399470075134 18.448026077598247 3] 119.62257112823679] [[36.69770669085256 2.9473764447084196 7] 43.107240436863634] [[36.54145965470251 18.447588206980132 2] 82.7497157014084] [[58.019892917878195 49.2362490288716 8] 517.9336692954032] [[94.56988879811347 85.69605240335402 11] 1271.229012202155] [[33.47188221452849 1.091261781358312 20] 35.727959173700356] [[57.381543733547055 24.74020666058879 8] 144.1927977790784] [[19.537459089757903 13.51578273840271 3] 71.73740020191431] [[56.78195254865333 47.69369774229486 15] 605.0485144142718] [[22.479005355698078 15.611302140231935 15] 124.14953523210653] [[29.19191677192124 29.05998299825978 20] 1116.347303811037] [[29.62552740686389 12.935972808260065 8] 75.45082166328474] [[72.62833321661572 55.03750181638552 7] 451.459722280651] [[55.45378861319233 53.6820327998639 3] 317.05816303014046] [[27.02809729533332 6.33683713932891 7] 43.581472214681796] [[21.441148328111332 20.13610447868956 20] 488.54324092624324] [[66.89360828334725 32.83571143533092 7] 194.53479762794407] [[25.040480223696758 3.630768828318752 16] 33.5334667163909] [[30.409207155584454 19.257911767006664 13] 135.0836164666768] [[4.5172264859815145 3.3957518937839963 18] 31.685646872508133] [[48.34865041450314 21.845162958825547 7] 127.55793358216762] [[98.90462217029733 46.62028001466701 8] 274.6139321960165] [[52.50542946219266 17.830350811497052 2] 94.2211507772597] [[39.28684681341408 28.26596370318105 14] 238.41150756266885] [[63.84987438353077 22.08747763739452 14] 131.38822504111545] [[24.27608693745335 5.28906169714355 13] 37.80087234503925] [[35.29687161397116 35.11482705407429 16] 1084.040616119351] [[30.87598912330373 18.323701725979607 9] 119.91582809549807] [[92.08140208547927 10.891251060441697 5] 116.78321404294556] [[15.341454202638818 13.875176161832881 15] 237.9470309857604] [[45.339536940736984 3.5688487412811343 11] 53.087072666505044] [[23.777536926719705 12.94527609248005 6] 78.50984522145512] [[74.21197681077628 37.6847988002513 6] 223.44191351301046] [[29.645145121485108 25.097529185692956 15] 327.5049950269465] [[78.5855160305415 74.05122378260606 6] 793.4492780326141] [[65.33890308665234 32.20504350725862 7] 190.99406583732613] [[90.5031923188251 47.51291069818105 7] 287.3582376518972] [[12.306022034541954 9.789213028911565 17] 105.82597207258306] [[53.172405137550925 15.163029367554278 4] 94.96421924077828] [[9.721106955507329 6.660733151347015 15] 51.85677655907598] [[79.82643960709669 30.304185629346918 4] 173.83589069505376] [[51.41002554304245 44.00851408883689 5] 358.1135284841055] [[79.2208750214062 72.93594869650086 18] 1484.7434085484613] [[93.11902817798735 68.18727562250719 2] 279.42434839854246] [[37.12317130022442 9.971099506811331 13] 64.38877423790665] [[6.399271832758079 6.114328761444598 20] 168.02071629887809] [[32.459663695958895 21.322286451620485 17] 156.62267635975252] [[52.57061449982424 43.916688023341585 1] 96.48730252316582] [[65.0764337553604 38.978501223497545 18] 259.4403778761384] [[73.64430163192917 17.731311826495485 2] 113.37608684322005] [[80.93374991986518 78.4622560562181 2] 313.9244967435429] [[62.62717042682766 42.75286649888985 12] 328.6682473331226] [[49.65130322137661 11.880240241596882 19] 80.88523568538324] [[9.658619286531275 5.683653585657658 14] 37.257355925219954] [[23.144249018124185 17.38025311302339 16] 161.05422227705998] [[36.50745322102104 2.560477282884654 19] 42.0146598095712] [[84.70776520797862 74.93119964781972 5] 634.0133249543037] [[93.59336726061217 72.9028177221786 5] 537.1826846996387] [[40.71759682324642 28.781069045918592 9] 226.62968622859395] [[27.1150875917833 17.88344906523355 8] 127.43722065529624] [[39.591655785642395 18.262359343408068 8] 107.16912547000413] [[91.73494349546158 75.29678872459704 4] 509.034889973441] [[38.106862969047874 4.198358923424531 14] 47.543214840693544] [[6.46197674349559 2.1208650141671637 2] 11.399789170209662] [[42.46780391196131 8.26888890154221 13] 63.0042187923406] [[19.719579112882677 11.233749077665488 7] 70.52954686801468] [[24.88954965737049 3.252514454638594 2] 31.819610353462956] [[19.609643084643224 5.3600968934900175 1] 24.96973997813324] [[73.17401922308055 71.82134434968992 5] 698.6642918402864] [[69.07636667696902 17.770177111815485 19] 116.9263163441495] [[93.94401142697971 67.37416971207647 19] 569.3484259022546] [[18.216070454422788 2.20782444620015 9] 23.240716447489763] [[83.54560586993281 65.79057402937164 11] 651.948805242841] [[37.5139174286767 8.346177570713571 19] 58.98269187595284] [[14.160666533199425 3.096580969354903 14] 22.087150919119477] [[4.157443502846203 3.7308957783937067 6] 36.72814292164714] [[12.487118840588172 7.244825452028737 5] 43.91153862728181] [[87.07582399187241 38.556859638103724 11] 225.4410410757526] [[42.37439933748194 31.769012949837215 20] 295.31151410262794] [[10.482239026428012 7.623885217770531 19] 66.24267954171795] [[53.5515411293158 31.503516015194005 5] 192.03087374909265] [[96.90624336871865 49.34655919379308 17] 297.9973901948791] [[28.89116148516293 20.310410267566617 1] 49.20157175272955] [[73.14950417625556 44.924288754498434 17] 305.92739594298] [[20.426709105100755 6.896171823300544 15] 41.24865728323712] [[18.88949306485941 15.78963082252968 7] 151.06560299851395] [[74.3244460202559 71.50637048636236 20] 2070.7963060982697] [[29.603718848368633 6.759218685589098 5] 47.09274450932072] [[65.52466867516249 24.455418899517984 15] 143.56028538441245] [[70.85613424726859 33.17352278157103 3] 175.5370610212706] [[23.456426830693047 16.761452061699657 9] 134.0617271025566] [[95.24545357301858 56.31999713636648 15] 370.7205167403108] [[72.8218302505366 52.27369670306813 7] 399.79453668588377] [[84.38307495903467 18.880487826078753 6] 133.01159543240948] [[21.49375565696348 11.809499586221822 19] 73.9141828215579] [[73.27016917463932 51.08381652510547 18] 410.05542423526396] [[83.20619398467333 77.18000395117856 19] 1683.7425172202234] [[80.45638003988961 67.73098545843374 7] 656.1854896680117] [[13.399608978067638 4.1194331026869815 14] 25.29567322425931] [[23.166814331963902 12.473400805755226 17] 77.21089879913133] [[11.852510243189505 6.134303663903242 3] 32.113915169551944] [[68.41297479070536 35.82149257763346 10] 218.460274686504] [[59.95125286380719 13.59609243257801 1] 73.5473452963852] [[32.393432737978245 20.916935399918323 3] 109.96135329679556] [[17.567236204340258 9.338895152107598 17] 57.44246092084152] [[11.631114300833397 1.8503924507778244 5] 16.03040841464922] [[32.79652595712157 25.11769146793803 8] 218.0758829931718] [[16.378903483439274 4.28238404960949 14] 27.975752567092105] [[16.622177606497036 15.903585659854658 16] 381.3956327899329] [[86.39943201458195 33.446458976044305 3] 184.19976144481063] [[99.0628175394934 82.48142110224924 18] 1044.4925677477677] [[37.037942502022226 37.02957389157635 11] 813.822808110289] [[76.32922079235273 44.2374752826615 20] 286.7589046355691] [[45.26067543628763 37.30719667670376 20] 460.01766893668014] [[39.00870941532823 1.8299645084025378 17] 42.84878276412445] [[53.43087856193107 5.669568821604689 20] 66.11604338041457] [[5.498105557870057 4.110091041207902 2] 16.790773013093443] [[28.89858586891792 15.244945854540335 14] 93.41982887089434] [[14.801185688118577 11.241596250173918 17] 107.28053834510295] [[52.05029111484923 49.546688806786364 12] 943.1586932306058] [[41.965169581259815 11.013465121273216 4] 71.48912838110395] [[87.3151707304758 49.128025254155965 17] 311.96058645405] [[5.7503527153427445 3.4221439461854635 15] 22.645369870388528] [[20.473438980031073 20.202768069683017 1] 40.676207049714094] [[73.58310796445436 56.68091856099115 6] 448.6289667556164] [[88.63055772788769 74.90713016639725 14] 955.9758133809927] [[40.23888476053718 25.198229137793188 15] 174.91025865839632] [[67.78246376618624 64.67350350864638 1] 132.45596727483263] [[39.42015763425539 26.36885175563924 14] 197.9955118069726] [[69.32880440330166 12.776383658892684 15] 100.6544804021664] [[74.14493386196753 50.920864169747944 8] 379.5233947904558] [[99.22374846028849 86.97561511958115 16] 1325.1797904309003] [[34.43184371327655 7.102472193706257 20] 52.32842889846151] [[46.170546914838674 42.72386240563518 12] 721.4401129979997] [[56.77500045565793 47.188841203162646 7] 447.0150905163557] [[78.05331960701638 40.81601683715504 12] 249.05850330530268] [[33.539243517631206 6.620056489323012 9] 50.03538664376316] [[45.29701364445424 15.221854465567448 7] 91.10500083778909] [[62.19731923567817 24.02521612351662 9] 140.46341005107104] [[15.397093057765046 4.512572668323599 4] 27.95614465742657] [[20.874928612028327 12.105558633057447 8] 77.50381887825903] [[64.25998558095029 8.703157386810268 3] 84.18339616304507] [[19.39654868847929 3.689022496548218 3] 28.311261000648454] [[52.24280251886121 51.90106981670902 20] 1958.3851505570324] [[72.94111802171811 16.849205784368934 5] 116.68525292225884] [[25.82839497866538 24.350403450873266 9] 360.92130823816825] [[33.85710432134332 18.40986931503355 18] 114.55627959361154] [[89.37479115012991 21.093692712692945 11] 144.59486760676324] [[65.56421067833358 49.69123427752302 5] 357.0175629784536] [[23.44477944484252 13.369521279820878 15] 85.64682904479615] [[12.025240077413713 7.913381285996288 2] 33.059516411766225] [[34.163450901715386 4.970511516180146 14] 45.79707390653959] [[54.825806719551935 8.646015376745222 19] 75.35533929947738] [[10.1335143267371 4.2901603317145085 14] 25.013313804427167] [[89.59899077080928 69.84715570009351 3] 380.63872359909107] [[26.627917872598623 21.312651565427366 9] 207.79251309223042] [[71.60243670044443 17.85262612728121 7] 119.15980219762267] [[99.4976674583397 80.95769630934073 11] 868.2181379643669] [[37.75040254402931 32.36474308631787 9] 368.48286742108303] [[30.10371160895593 7.779265716463306 3] 50.20229677838687] [[86.9546382032476 34.1756724342932 16] 199.5650856283424] [[8.182585329852632 6.528564195548538 20] 71.98200833199839] [[40.1959567255903 27.819527351805053 7] 204.09732450656202] [[23.166355211300303 12.831170221354446 17] 80.68508118312782] [[24.37062830922875 8.377885973334253 15] 49.903997598019046] [[60.83173383239925 56.63323626945451 18] 1232.1710906746061] [[69.49887076837523 64.48187350605743 1] 133.98074427443265] [[66.18759893151203 23.571921702512437 11] 139.4063909207666] [[72.7908185505704 60.47687752464875 10] 664.3173911659484] [[68.11406430773279 3.3731821659558676 10] 75.21193319899032] [[46.11104555459713 30.79002400285135 8] 222.29873211477758] [[74.03269261439583 65.75525555345408 11] 910.9594846730712] [[23.41640945893797 12.881630248977903 6] 78.44620686999322] [[35.86210032515902 4.97421647862681 19] 47.41263905647094] [[20.44259112804732 17.79628678541948 16] 263.2499601170018] [[27.945241377598908 14.952979170625088 19] 92.26975046292253] [[41.538868855744326 7.860772260135845 5] 60.915176722824405] [[51.72619583785229 6.802815910082169 7] 67.39210337139932] [[62.68350706731298 51.358386951962686 5] 398.15277429810317] [[30.610538754232504 25.34377186270255 5] 198.68663252687688] [[35.016614620729435 30.02747776741575 11] 372.3483935896426] [[80.02282706286027 16.851632610103128 7] 122.71456716491531] [[11.194757502628145 4.069856541837255 9] 23.98134312900384] [[8.738821007535018 2.5128904248367347 11] 15.793074116313305] [[96.57120072992052 59.907148416497854 3] 313.76501523303074] [[14.63353446044582 8.651723856015526 4] 50.00359494962452] [[15.035096441947505 5.2319280176102225 16] 31.083486432347726] [[7.266739057951207 3.042629578677993 7] 17.69520238700264] [[82.77741737360985 40.692606697631426 20] 242.85538233010186] [[54.89606381014237 49.92955012311653 19] 967.4707412737511] [[48.595216982760114 32.276791124375606 20] 240.76435382594767] [[37.438456183628716 18.189741870376 19] 108.19587867551705] [[68.48012274811258 23.052355770287758 11] 137.9798395959659] [[92.4204742836963 80.77020283999565 14] 1165.5908347242762] [[77.3723128734641 69.25203138689935 19] 1227.1312921669771] [[69.59705300136412 16.400424802343913 14] 112.51034504684812] [[34.385278454867425 13.089626320178366 15] 76.65588231832831] [[69.66046594592382 19.58732975401013 14] 124.15924644515418] [[37.63598225610289 6.780854129598177 17] 54.17806919143998] [[60.49257011263485 26.71018754449281 16] 156.14966948893303] [[72.74355496084377 23.721074040343865 8] 143.1237821207542] [[6.87382453316188 4.918349423407709 15] 41.17804092196379] [[60.11034408781471 52.517626411267294 4] 372.1145572276268] [[42.2948248767156 7.79388664492367 19] 61.40393239631312] [[48.37200237436041 34.62527925189065 3] 184.93452412246367] [[76.81593402633787 67.50884353886214 11] 903.4551056600012] [[82.82757274446213 31.664976371235973 5] 183.83934909955175] [[88.28722891848692 3.705542861588434 6] 96.02299546852106] [[28.74273485841593 23.382140689880657 9] 235.87812227823355] [[14.126444379647529 13.421709437632346 8] 185.51379751702595] [[1.994530444399055 1.443120734182729 8] 11.500542359637327] [[2.412159985517861 2.1374244567531226 1] 4.549584442270984] [[96.50715813588829 23.45450436994151 13] 158.4769120494566] [[10.891668325105659 8.692141712522474 19] 95.64120775331732] [[70.05701315065791 13.468620739404997 8] 103.4054025989915] [[44.439049893796025 8.714888810736564 7] 66.12007432089692] [[82.62020001972748 18.733637155386067 18] 131.0741086446674] [[92.29399943062435 86.10255667079731 20] 1996.1426897982976] [[30.14507567988613 9.014747833323762 18] 55.866423071139494] [[68.5331628329059 37.009104257721496 10] 228.96451996524996] [[71.18118193670496 56.52567348985368 16] 604.7547220643816] [[2.5946082969269115 1.298312594467145 2] 5.840894413685959] [[19.738237305682123 6.101996621359302 3] 36.29822147668173] [[69.41614227720548 67.16599308710029 9] 1081.3420492635084] [[40.216302066858255 11.884084446536797 11] 73.95403212819693] [[31.93683772964541 8.047558336158165 16] 53.453901119420294] [[50.7008497325364 43.186797367042345 3] 241.98163792393058] [[2.1287323097314306 1.2864507452301752 5] 7.9356041986228005] [[31.89240337385827 19.828289799555737 3] 103.86890703608678] [[27.605271220103287 10.401048636525665 1] 38.00631985662895] [[53.80570753452599 36.17997139364085 6] 249.30554073153607] [[74.63165833926035 18.605761862349265 12] 124.20083056946726] [[99.07258067619034 95.64298946176152 20] 2844.475052812369] [[48.429036584749184 15.102576319062054 15] 92.32227861157756] [[55.488009962555104 42.264960355953896 3] 228.9252599344196] [[53.11250068074662 4.926508059232974 10] 63.972883467340424] [[70.70131081559252 31.469909433481877 3] 167.8912442875873] [[56.97800906905837 12.7843073860983 12] 89.94308412267026] [[31.852001119264344 26.173232727960592 4] 177.07910231703426] [[40.904473919656695 36.82713723836412 11] 534.140837054351] [[45.24023530231011 11.551662930602797 17] 76.26558920059463] [[75.06664241134604 38.85713072164786 11] 236.00873320703596] [[72.88925449049351 10.499932103403065 11] 97.42333145606875] [[51.36737817276116 48.21665744231095 11] 814.3221587234362] [[93.26531000582574 16.665051646696853 10] 133.84666237791384] [[18.852745817455318 13.309861950722773 8] 102.64192562715182] [[25.460171864955512 7.261960416092611 5] 45.69341007385043] [[5.931519402753911 4.340966313375537 7] 34.000728847106515] [[45.38199754919917 35.63510730855527 16] 369.33998360101856] [[78.49714679689669 20.539138471178543 14] 134.13272798014893] [[3.83948338892965 3.2199965571969433 6] 28.530253596489366] [[7.762308421310319 4.353095184894742 20] 27.584842807387528] [[34.817277545395996 28.71333227450508 8] 284.8510925235216] [[93.9351898815295 76.0013510641533 8] 726.6559109333158] [[52.531642034980834 48.60383578517293 10] 730.7880335777478] [[96.16629281354221 28.24525745023441 6] 176.03554459816115] [[51.4056824133709 11.735548515877186 6] 81.80861138161009] [[99.80221285919573 82.99348976812365 18] 1046.1037982037005] [[4.623632029744154 3.9002812158696605 6] 34.85323328191836] [[67.92868698082016 55.99558511654197 14] 658.2421810398025] [[65.2011832334906 59.3031281811976 19] 1149.1864480136458] [[10.952592018019484 9.991466195474073 5] 87.88449375207631] [[92.16044077506488 52.19041075687085 8] 329.3148775875519] [[92.24811658935975 11.302725666076856 9] 118.01005597896646] [[7.617692566768158 4.332447979485402 14] 27.699238272028804] [[36.315700268821665 7.987556000402112 20] 56.79524097257144] [[23.902485514559437 16.484703360400058 11] 127.95565008393862] [[62.81606069613485 45.724621679741354 4] 286.92295196704976] [[64.82804972061588 40.91298220217219 16] 286.45722925562796] [[92.04203527263121 60.287069761061694 14] 440.3460877865073] [[39.354534703703095 33.65552530707484 5] 273.55708995957366] [[21.87662176506534 20.386538550125497 3] 118.34953994498204] [[6.134773819481132 3.6856147539938258 5] 22.673429764768063] [[95.00900374517377 68.74279597799081 3] 367.9584306137144] [[96.14222890176056 17.952473534986613 13] 140.29100023469206] [[13.79654760106504 10.605050486365938 15] 103.44726232786873] [[54.165556648858065 19.154248986000216 20] 113.43215640794045] [[90.77833540710118 64.26634222120359 19] 530.1304972907379] [[75.65503949676133 14.832881776546746 3] 111.70722047789162] [[31.776024814998994 9.284507830855873 9] 58.009437218750406] [[56.04227601469891 54.556347077630726 16] 1457.6999513883068] [[2.0257497086199603 1.4989251358511155 7] 11.907226346513697] [[48.37353404398366 26.96260292972787 1] 75.33613697371153] [[4.837603255504706 1.7161435155107374 20] 10.156923186595069] [[17.12455404275532 6.083762983834175 13] 35.99665194218739] [[8.29854208883072 1.8202059779440385 14] 12.961793809182502] [[75.4541252662546 17.54621894485009 7] 121.17519070461965] [[92.14371998263215 40.16244112565536 9] 234.39707583474015] [[47.537227084850876 7.811074057709682 14] 66.23104818928797] [[27.69787696228833 25.34677864044402 16] 473.74943748164645] [[73.95595028881762 57.417537035560706 1] 131.37348732437832] [[37.012570973952585 22.30810505533027 20] 149.30993623586878] [[58.45575598376507 40.40531884138194 15] 318.9008289195937] [[68.73011115747519 59.435670170885686 15] 840.5537031335544] [[58.56234629007847 37.5857794682945 10] 265.2429112585256] [[12.727716198473562 4.003231261449953 19] 24.407945356168536] [[22.044492961538566 5.961393296817554 16] 38.386602706296344] [[80.12513649712896 51.22264434890959 1] 131.34778084603855] [[87.7733902677074 85.28033652832356 13] 1903.5384721680525] [[10.36862784244386 7.575016109868394 16] 66.16012551072285] [[78.0199199000583 7.850979145841942 16] 95.4787201974626] [[29.879722762702713 6.3430207033606285 2] 43.912293151743] [[61.3262263328878 43.36156273674934 13] 353.4288146018003] [[76.42744658038525 13.606614509840124 11] 109.53489648684297] [[92.04428459894288 15.139177488878435 8] 128.28302554664143] [[75.15001932880698 70.67108225930969 18] 1637.192557724528] [[59.03649056513203 10.251214879687913 4] 83.77085441879193] [[2.9216030699245246 2.429824776386781 16] 30.126626502902994] [[50.544786192661896 25.164219381389167 7] 149.62958706852382] [[9.889854780702942 5.224733128970814 17] 32.04164420629331] [[1.346830852503233 1.2206407079933936 18] 22.738895195372493] [[47.06248625534147 5.14951847009607 11] 58.62688527741955] [[72.09933717343831 7.396140963830427 7] 88.58249564842309] [[63.310195404539336 14.413465979793983 15] 100.6345465345669] [[77.6176200528587 73.04382545099696 9] 1076.6236851863966] [[51.29722672572796 24.95718283657298 5] 144.4573422528555] [[44.232041486054705 3.4694592299250426 4] 51.75959851588058] [[85.32006491304362 82.77799987774348 7] 1076.580182234016] [[36.60016692093759 30.16270945162356 6] 260.6678680902503] [[74.70371461046747 18.974261041991735 20] 125.57260673085347] [[95.31999395240743 23.423004466856053 20] 157.4277585483646] [[5.100430444810308 1.767153567851513 5] 10.456002514931706] [[23.594328220672917 20.844288505814188 9] 256.28589679554943] [[48.288331878457555 25.10500841702083 3] 131.3881672423497] [[27.32759866442534 6.5915571418790275 3] 44.07404415445578] [[98.8600680096233 53.532778841370074 18] 332.36766778275506] [[63.51012223902091 21.642909005407915 7] 129.10324386854552] [[17.71144369784912 16.93312028686381 20] 467.453308772796] [[49.2555117813049 23.16393583504436 7] 136.01745051869023] [[1.6260600700403782 1.57726993638488 10] 28.03661272571109] [[21.42700850120881 13.155375757879385 9] 88.47246539062166] [[1.3475467973179251 1.2513819957551608 10] 19.049194856263874] [[31.51850050053853 4.697936220479866 20] 42.560170132623576] [[50.63161291423444 11.219848051319698 5] 79.41704348316888] [[92.27478923696823 39.94489358467256 1] 132.2196828216408] [[61.37504963855734 57.06394002993349 16] 1160.3607373141003] [[45.94984944865606 36.96424079732638 12] 392.8577408774269] [[30.48003307120001 26.124750695645346 9] 297.2463356878291] [[13.946553430522387 12.157542999169353 2] 48.859659383996004] [[29.784993592731144 24.836711469467392 7] 236.61331170358721] [[77.76966554006277 23.20388529325243 5] 143.5718688321885] [[85.78619595478365 27.223455258064217 14] 165.5432594964231] [[94.49691735699052 83.19183652355554 8] 949.3343695117111] [[92.79862948798605 64.46393194483682 9] 495.64769978017557] [[7.650230061777667 1.661998794900179 11] 11.896783292473314] [[43.425549329097024 14.264804017723323 6] 85.8032848878869] [[83.0778024582936 18.64678995811351 19] 131.1644076317876] [[97.1905483974676 38.58150409765218 4] 219.55786161855178] [[86.96382951757732 6.111413375415321 3] 100.07580169246033] [[6.855639717730652 3.0681199555178122 13] 17.962086050500368] [[21.91928271451726 7.534040888113977 8] 44.87028875521362] [[68.42723442248969 6.715801114202813 7] 83.32053530330539] [[38.40675565787759 6.701438413307082 18] 54.642550033192805] [[20.21635071060003 7.525630654359151 4] 43.344426998280845] [[99.97453490825328 87.43029411166718 13] 1232.1929286041945] [[94.35016545058589 82.57442259240113 5] 689.6883615797576] [[22.457914981653147 3.4512422319354505 7] 30.61369447583545] [[46.062582342474556 45.704720979272786 7] 627.5916552238142] [[26.81575142646733 25.659733974746676 12] 499.911127665427] [[71.35819359573667 4.351461780410325 5] 80.62622280732347] [[9.551354119208993 2.172016679119812 20] 15.173999957702442] [[92.63665725419037 67.50891419395448 7] 525.9518215135938] [[83.99180964032809 82.55899084499991 18] 2600.3479578579168] [[21.675831249523462 11.402767983065118 1] 33.07859923258858] [[41.41911970859036 13.964886842189895 15] 83.55566294121644] [[4.547891960707114 3.5762986514225332 2] 14.51276184393255] [[48.33885604504341 22.339362595135366 15] 131.4053405575412] [[67.33205223328821 6.825835047285927 3] 82.43781947849477] [[78.79434473061823 22.421946102508233 6] 141.3996367329829] [[85.59280476028223 49.91613297855315 3] 260.62190184232054] [[1.6714371074363337 1.3143634121369179 12] 13.194879257578565] [[44.918647444594896 1.7999327065592445 16] 48.66878439778104] [[60.55402222927245 31.33656039148817 17] 190.44324677251433] [[28.22203455148966 6.269548484013561 11] 44.34224814494676] [[32.87458983756125 21.08133857526914 17] 150.32740877199979] [[86.0476936343797 12.783070665347063 17] 116.07456640632769] [[26.426891384049608 24.885898327950265 18] 581.5745126689159] [[24.838628468834813 21.85576302916389 20] 358.73185536393544] [[38.666335938726725 1.6490890906131566 18] 42.11144535155089] [[24.684585775407864 15.620047236739014 20] 109.74610658049943] [[47.59396480681296 2.1514312662160484 4] 52.100324521303364] [[77.69745630634414 14.658884010491645 9] 113.83269484285019] [[2.205280394415143 1.4833021564606772 7] 10.565050896452936] [[94.19611775449805 69.09387000158941 10] 585.1175040872752] [[68.86764230767328 46.427397020904856 18] 353.54017348054543] [[17.66657739177033 13.767208828341273 2] 55.92950399781799] [[26.27958555845432 25.646649092634743 8] 382.0292026043523] [[26.022457242294948 17.346280056152768 3] 91.54834882595476] [[97.6500129270626 14.451902007374876 18] 131.57454337704715] [[25.508968206704182 18.242797484346866 9] 146.08135088948728] [[99.03127459716768 16.283418950733548 4] 137.90585435517926] [[39.35746742834919 26.502323670130274 17] 201.39452267512485] [[92.54182163616244 75.87331824387657 5] 588.6236874956165] [[16.64664307591844 10.658089093055914 14] 75.75251561937661] [[95.0439557389777 17.599166272977907 15] 138.24103527799025] [[72.10360857036449 64.3099031825852 3] 366.5993731592932] [[71.30075385247466 48.05276970677681 14] 364.5933172041712] [[61.5792064473433 51.6532647033393 1] 113.23247115068261] [[71.15223225701455 25.43739108496621 5] 149.4576081125237] [[73.65579777264074 45.85331758192926 5] 287.0063126410138] [[17.831065061318387 14.223219025185585 5] 107.26337761265441] [[1.2450910520381695 1.0095434289870806 16] 11.501975210458037] [[98.51766042522118 97.99304149003146 14] 2657.922181749663] [[4.762896272951178 2.4287970197807827 19] 14.675123746788723] [[81.02623698943442 31.734242875723325 5] 183.64768828815383] [[23.636157145733783 2.48962334176393 14] 29.201620406802036] [[56.35881577617341 8.924242369182707 16] 77.56527748830464] [[99.81611713163855 36.802619846192954 14] 216.40982640851212] [[67.5822729932519 5.154407932345207 19] 78.74224467224013] [[47.9050676815256 19.728412505702252 18] 114.98831551066172] [[28.22215729749683 4.534660749900038 15] 39.027681573131126] [[42.42044030795723 11.859119842161126 7] 75.33233269805325] [[68.35131640672789 4.058850557208169 10] 76.98149647333709] [[56.039832985495586 22.312002653786312 6] 129.66542590300898] [[99.8355281483912 29.771065754138743 5] 184.2422129868084] [[84.01825190069803 46.26684352157591 14] 289.8897114357011] [[36.413772733712435 20.1063439482864 1] 56.520116681998836] [[80.92107139396607 46.28491842593339 5] 278.99961705789923] [[2.3977514741427903 2.286562541228826 1] 4.6843140153716165] [[76.65372607405176 5.3764900679481 2] 87.78381304537953] [[5.811684240713071 1.822748926599083 13] 11.122993683852968] [[75.22506441762691 34.56798908967986 20] 203.1427022102239] [[18.625527219530397 12.122281484032191 12] 87.55406767080137] [[30.692067278766086 6.650618064394779 5] 47.65006741022515] [[47.80704760201593 38.80706561602861 15] 439.9430215083111] [[12.189339636522146 10.813595091153434 14] 165.69607004068766] [[20.00279605418096 4.792915033061221 1] 24.79571108724218] [[30.43956780433159 8.357190360335313 2] 49.44841705482786] [[5.605892942851159 4.953420364346758 7] 52.569097356133085] [[98.71749528049816 41.50542105303742 20] 241.94988288674662] [[64.45815598510143 56.295523169866776 13] 789.5403231875787] [[24.148533588419113 9.689794674636248 6] 56.27982691004287] [[63.72235623228478 26.43065749835912 15] 154.04907899041703] [[12.66620322495198 7.691881474342935 1] 20.358084699294913] [[92.13225158948745 90.0358567623966 15] 2337.4138924769495] [[61.835434982130394 14.498278443487905 1] 76.3337134256183] [[37.54661896239402 10.54115222451476 4] 66.44270548125536] [[54.42977865463761 19.014617718216645 10] 112.8740899810241] [[88.9899954550849 49.721891843316385 18] 314.34220087843283] [[73.69123733671344 56.16156495471362 17] 540.4864724478113] [[89.22647711661891 21.519332944681985 11] 145.9440810040707] [[89.11639672061331 19.77439239543717 4] 139.60412267329562] [[1.7814141516516289 1.369180762608439 7] 11.457719492268447] [[15.619745562299288 13.52768820440723 13] 184.0591027384333] [[72.6744680327077 40.87868318645491 11] 259.0814095866365] [[87.69503257138392 25.716454853943983 4] 159.28205416684568] [[88.26019682788264 31.604136650273936 2] 162.78525299766764] [[18.60279936393691 16.682490776842847 9] 213.6061588982476] [[69.37088169750902 41.63427754814486 15] 277.4993554109147] [[45.48338906257514 35.977423747853756 18] 384.03932541320074] [[46.630576295838964 13.71327328532319 19] 85.48295995399845] [[25.160579678159788 9.635864714548136 3] 53.22618210791234] [[8.647596044645507 4.778284398670802 4] 27.2086299231392] [[32.244543277751376 15.768407423566835 5] 91.33556686308594] [[77.91091056785385 8.731526714432654 9] 97.57807590150884] [[71.15078966464061 35.64203290605936 11] 213.8798131538362] [[84.30863378074747 50.166275017005006 6] 317.32377309169453] [[41.96374889545405 23.472933452217173 10] 148.05914064621263] [[85.2763929688523 58.3309372630956 5] 386.4286956073763] [[33.532394751620146 4.062625799929217 7] 42.77775604715332] [[44.77043461133809 38.926662688489834 9] 459.1214991105268] [[3.086801492844761 1.1835874432582825 12] 6.926025996908516] [[47.47355363851773 11.70070172936117 19] 78.52916474993648] [[26.507619668226692 4.675614171241462 10] 37.86153669044988] [[87.38825735072653 71.20609780681849 20] 842.1990294368467] [[9.617587431480136 7.943287356840067 15] 95.14873033828826] [[73.08576018254831 30.38036700601217 5] 174.8737199962145] [[86.65025838329197 47.45853642434236 16] 296.486074054334] [[21.274787194131704 10.934895548399968 20] 66.2727464004399] [[34.994865996637266 23.598450752089736 9] 174.73399222835235] [[73.77172289698207 35.25987313543758 7] 207.66635984613916] [[44.22898607371402 2.751882410449681 13] 50.09790930595918] [[39.71288457392168 23.105507693015014 19] 150.21124716756154] [[64.09710287630693 10.583614855711174 8] 89.45062589579823] [[51.59795858440116 18.732555644504117 18] 110.41735546446151] [[8.941111342602515 5.886124674410134 14] 43.27065395311056] [[24.21660185901418 13.463990232492982 13] 84.8215598254677] [[81.05908466588723 10.859077612554877 11] 106.13677144252637] [[5.241536470090502 1.0644825117949186 5] 7.910314364717912] [[89.68536841657462 71.19702436113005 9] 682.7042160595122] [[32.40296369043132 4.266124310912845 16] 42.22887696841888] [[27.82525671774313 25.304796154117952 5] 221.68961113351057] [[55.150867533548364 1.6333013258129006 10] 58.51716355565735] [[66.82163973137503 63.605975399748694 16] 1479.1478528546727] [[28.10167104350282 9.347828391750637 5] 55.887603789546404] [[27.512238845932576 23.54023802460771 3] 132.10986520005036] [[34.72015137164178 18.64381206792945 6] 112.48755039185444] [[98.59112422035591 40.57059352805989 14] 236.46897160950212] [[12.55078030837952 6.748745970238519 9] 41.5912409514897] [[55.706615495817644 41.592287428462484 18] 382.0241188358086] [[27.15701877908261 19.985814257463744 10] 170.20810973751628] [[92.00223987418123 88.81470350933468 1] 180.8169433835159] [[36.103560715296126 28.613732600726618 4] 188.87718339360111] [[98.78409912951255 44.15652496619335 15] 258.4808249592226] [[38.00329892737995 24.09395329723872 18] 169.61647173681482] [[81.52571562810337 74.88246508070911 18] 1503.7994720981328] [[40.60511827032441 11.773560756254414 1] 52.37867902657882] [[28.202389090963322 21.64708214584603 15] 210.40789554394993] [[61.205263631802666 56.47806461133271 19] 1192.8526210479033] [[6.386614440526778 4.8876115154543065 18] 47.64526248540394] [[24.48705692064529 14.195029180978981 10] 91.63900412125258] [[71.4924503176733 69.66667901193202 9] 1148.0995773725838] [[35.22254127305232 29.06102367987876 1] 64.28356495293107] [[4.091584074821884 2.04031917597658 5] 11.853950004796115] [[51.67429664150677 44.160335257219565 13] 573.6014727910373] [[53.351707262413036 26.581163532551454 4] 149.4846285561865] [[19.913858868954236 19.045515000298625 7] 239.5228679259761] [[62.08657407789363 58.43757371356397 2] 233.96475524873495] [[12.600375307971158 12.166915879558871 20] 362.48667879471196] [[96.82760682624335 90.55890193774367 6] 957.3104924356719] [[97.84311040763615 92.27194234725057 5] 848.314468743243] [[95.10321796010246 80.59170744275737 1] 175.69492540285984] [[97.98589202410967 38.44095514256989 18] 224.5011319157504] [[88.071136706902 51.84930824061913 13] 339.86073452407896] [[84.21072239734143 24.867297831831372 8] 154.77717880760304] [[25.82151151277484 18.045556420523884 5] 121.38538879969761] [[10.54946219309419 5.70293713260273 12] 35.35466712889953] [[15.537468199253457 3.449927033841171 16] 24.406622193056236] [[28.833052982432854 16.71889408003113 1] 45.55194706246398] [[81.9519483223399 36.71102696558681 9] 214.79665983786956] [[94.49141889012976 60.120846764162714 17] 424.864270286334] [[79.81450176038676 15.78696257068209 15] 119.17345749890133] [[48.46666465194751 3.2160917393574886 3] 55.339828268665755] [[26.722131987622877 15.547527025463067 19] 101.07713309954894] [[17.417629063565673 15.825920328689083 17] 292.4417321676424] [[14.470105750880096 7.431821846865181 11] 44.998942702396455] [[59.30447518585006 2.224479712701565 10] 63.92681619534314] [[35.04098280611621 15.966618952606469 8] 93.53052339387202] [[94.3542513207696 82.06316063345932 14] 1162.3695161191336] [[74.42502945306165 17.437884919292138 12] 119.97267020030449] [[52.65737404692232 13.048374231391886 4] 87.02181243760886] [[69.30794165839849 32.913862262939986 11] 194.61462370300913] [[69.6438232722058 35.20799369331434 16] 212.05089049665077] [[53.380955813548866 39.31858771610666 15] 348.30309169383594] [[67.67770163029016 63.42417049963346 19] 1478.2682162472634] [[82.93523431479235 45.51337487365983 13] 284.55436049368944] [[66.80906105777406 4.129920529156478 18] 75.6131420007333] [[57.7618326206822 7.365099013564205 13] 74.64473702037621] [[22.47990861072883 3.30696136344375 1] 25.786869974172582] [[89.15803282658506 16.927778229692137 11] 130.9479270203733] [[66.92281000967363 34.5047933949672 17] 209.381495161256] [[69.4616231531043 43.405396632809016 7] 289.69076678463074] [[99.16908137954513 42.066178077057856 18] 245.27944388256503] [[46.620455377490785 18.800063337178763 18] 109.62944409153012] [[55.631063368302215 37.24971594519361 7] 264.1401483566006] [[16.43279530131747 10.981111971213242 8] 79.34694481529459] [[63.099517116362755 34.38192143583966 2] 150.5975218126789] [[77.54470819876667 33.90542230546631 9] 197.92533349303122] [[18.740551341202455 12.027297788650701 19] 85.8719579047489] [[21.797342737205405 9.470305572459242 3] 50.75475343686475] [[38.15324985986378 12.70809546934007 17] 76.26307063049855] [[66.01621618232416 51.58866154328609 4] 337.44800745928836] [[37.20334341593566 2.332500230889999 15] 42.18038437562373] [[34.715858630783714 2.344409846006114 19] 39.744252698687845] [[17.95255290254963 6.599467409833296 9] 38.81917497597793] [[24.049454280943333 4.277294006243024 6] 34.45355817175813] [[92.40804633321335 2.6950040279761023 10] 97.95997168876086] [[50.71010563067614 17.269156494051767 3] 99.01306381402031] [[72.70062626236214 14.498554168427093 18] 108.92112244177645] [[49.637271972604196 49.284977644790665 16] 1501.2327046844161] [[9.920543575302268 9.831906868891323 17] 312.82960481028] [[71.50076482741414 27.32440865795735 3] 151.0244604515319] [[91.78124395062758 75.73808920458646 12] 862.8057377467463] [[44.93082159043856 1.3385260009276772 9] 47.69007397995246] [[66.20694092077225 33.09392814751427 15] 198.5384745112787] [[61.69451711937195 29.328489818532447 7] 172.5516053167713] [[51.34092051239217 46.64070403256957 4] 341.31536598219856] [[60.04782309033486 55.63649777729369 12] 944.409410923591] [[79.41720282310315 10.890781122176138 20] 104.66046958605072] [[75.83327296917413 72.52745772637793 16] 1735.3507988504982] [[6.826130357506379 2.5574169062159093 17] 15.005296947022158] [[99.76370482760063 64.02672034715886 16] 456.8601529122854] [[93.01017080399602 46.920016652363294 20] 282.37951342952] [[48.403387673039234 14.242054998177478 5] 88.56693062819942] [[14.853443428081302 1.1616511554137006 10] 17.373861403393185] [[10.503225903050522 9.66755011568446 14] 174.09909833989562] [[31.859024954984932 6.357352409937509 13] 47.74339854951576] [[35.3938798127299 12.3669248597152 7] 73.36468782470419] [[26.851933507018263 21.04407184803721 7] 181.23090580799152] [[10.619609456844572 9.500227390119019 18] 165.17276967832223] [[51.490914307251145 12.547341914285274 9] 84.6706703150164] [[18.89009755725205 2.5978329234419966 2] 24.443026563089628] [[52.63497717868577 14.253979651853031 6] 91.69407461045478] [[42.92366453677089 21.148227333148466 1] 64.07189186991936] [[90.28534832085766 11.273741451602888 13] 116.05001029832877] [[71.99309402503148 67.08956338145275 14] 1281.4025389300425] [[80.43263783814479 69.73280998708238 16] 1013.8206992623116] [[27.807369072544475 4.111012546724584 11] 37.4558096052387] [[33.78315315680198 2.0368111761492704 7] 38.1181346252526] [[97.06477479809949 21.131940061020096 3] 149.5315117316869] [[33.9460166299426 33.04747499053682 1] 66.99349162047942] [[12.094321735731514 5.827547212451518 11] 34.576382871000675] [[19.741106367427726 2.173420606667369 16] 24.625725562552557] [[29.91527273597127 19.207024690248105 13] 136.7989744071296] [[70.6715768039118 61.92668821338963 11] 820.9827979531177] [[32.943915489080204 18.177943518432574 19] 114.05503037953412] [[88.2071085218551 70.43250893665744 15] 760.3297656085973] [[10.071301493446182 5.945197825286445 10] 38.89339167740038] [[86.08613647424072 14.888255079927413 7] 122.0886751546684] [[89.73660819136235 86.67691358208201 1] 176.41352177344436] [[8.686564219873421 1.7353376569638885 13] 13.023675588908219] [[7.693063619426575 5.527838693878549 8] 43.63583575677106] [[28.282291380109402 22.079439930148624 17] 226.21496863970435] [[48.87456371772556 40.44711223938377 4] 275.0411530340794] [[33.422848061834124 4.681296690600452 12] 44.310379139920464] [[68.04220071376636 54.82533340884963 1] 122.867534122616] [[43.299295470403386 21.29687528775168 10] 127.0156225052536] [[71.84491711324816 51.499237669764184 11] 424.37302453543225] [[46.92310805210521 25.146771385913436 19] 155.29326977390505] [[41.64447985143432 32.388679835668796 2] 131.6118905836743] [[76.70595198002187 12.439994065999814 11] 106.40197207368071] [[97.71239975514015 64.6001692313998 4] 387.46966058440626] [[86.12531435985949 28.330080456279717 19] 170.55916349011576] [[25.43841087269203 17.575531116427644 12] 137.51459449279017] [[74.9598216267903 36.63263682242566 13] 218.23132402955048] [[46.43349805209451 45.31872777840689 8] 675.2143057699187] [[89.02335551256631 27.718576033076218 2] 153.0910452374459] [[45.25464008869442 13.143087459978377 12] 82.29957629846626] [[4.691120248006564 2.533401832887973 14] 15.7040973339788] [[47.0162724393482 45.412968777098556 9] 726.9758897368752] [[99.14411105367918 75.94724826308031 19] 743.616959817845] [[58.930994647022956 38.140854007700256 4] 226.87653909773698] [[73.3398918653341 61.116079875245774 20] 785.6644501765156] [[54.587961741489366 27.228152591093515 7] 161.9845987140168] [[50.00389862256726 27.058944347722356 6] 163.72591631340563] [[44.23420597940205 34.72219953725951 13] 351.4024568897205] [[48.51163494963943 22.793812001140342 16] 134.50299840737893] [[9.876919026975667 9.09518832726674 9] 125.5786764757076] [[82.56125352518333 71.39590519351079 4] 501.78641863586523] [[3.5318239938907148 1.4821559813682337 16] 8.639681348572344] [[59.0092713908363 19.890957081285137 17] 119.01957126732829] [[65.46592071797917 31.043339072092262 9] 183.32177450174217] [[90.72893339956799 28.002875906062965 4] 170.1789584066948] [[78.83655893850268 46.37934586603483 19] 304.1289171952579] [[55.748403594518386 19.783920879333127 4] 115.22536264530056] [[8.430785493834836 8.176717859299917 10] 145.27128679415395] [[52.21024185036564 43.771289176738414 20] 576.3486707852161] [[42.430231549048585 30.00259292467682 13] 244.5667476122984] [[25.66809458601607 23.789255130616894 4] 177.14902704588093] [[26.641338707670144 22.047914469449985 2] 88.98364323441491] [[91.28305738049427 29.034335571818485 6] 176.2536949903259] [[60.765711081388645 45.894717470421426 7] 374.7334848662115] [[68.31086704447037 52.61157899778706 7] 441.5806611836796] [[11.071020317711707 6.916325527294465 3] 36.24455181303434] [[46.66968868712646 7.594716903515735 2] 63.09503652900004] [[31.742714948035793 7.946296253093868 4] 52.7343784588752] [[46.963476997683486 8.38125401338348 11] 67.36732065675548] [[72.93709575169606 56.944251818732226 12] 561.9580586930784] [[7.3015505189229994 7.2502136018147185 5] 71.74285973663504] [[94.75702966611264 77.79010008607797 11] 853.6512176376978] [[41.12395193558989 14.78784366551247 10] 87.30336526077087] [[92.3752329873519 33.54073598150958 8] 197.63920507214831] [[89.61478382920996 4.184312114332203 16] 98.39329617759714] [[12.13267771572056 10.981760535283057 14] 183.2981029740545] [[7.5907350712782335 5.019311583315261 8] 35.86379803389951] [[11.6402911638473 3.986397926267741 7] 23.752449958449713] [[56.996368261092066 6.43765193107418 7] 71.51107043096405] [[17.66277510138916 6.716073145344612 17] 39.33587305184666] [[1.6562479249480424 1.6387090156300763 6] 19.253691818973444] [[93.51950411018265 55.51568317308712 20] 366.7337921243334] [[97.13990850288556 71.69485073594385 12] 627.7093293450922] [[29.00726892492351 22.200986635325535 18] 216.46903772291435] [[28.729981808528855 9.1533967876907 15] 55.5964558720234] [[97.74485103890808 87.93614194669829 20] 1627.1180048657664] [[8.366174813896452 8.138976373250546 18] 237.50778785802902] [[1.6244883516178148 1.5089443141782828 20] 33.982280331829756] [[99.2152341792971 82.35414160864252 8] 827.6391870162446] [[66.69819926957035 51.23718745305205 15] 499.0279424570852] [[51.415650892759395 8.812874927743742 2] 70.55196739474052] [[80.74833846196275 15.961221449175701 20] 120.53532636010587] [[9.61890819780976 2.668691596944719 18] 17.005699313352196] [[88.61593511352007 14.56172681741211 7] 123.46570986555074] [[28.828674176518017 27.641118176010966 4] 212.30137066522587] [[33.66426983982641 23.197068497991285 7] 169.38584518061373] [[17.685294329432338 13.292108855152895 17] 123.7314661123512] [[39.81910817170264 12.803933066848026 2] 69.54411080373133] [[93.79351753313885 19.339693662979922 2] 136.46064054079613] [[49.18453100662551 14.005302140891754 16] 88.34651549003456] [[97.812506052624 26.06013424479604 18] 168.86261962636289] [[27.220691257932398 13.218030955379948 16] 78.61073715338819] [[40.263513103504586 28.23980814459025 16] 228.6088771115765] [[68.77696576436533 31.669176564945015 10] 186.09087178247356] [[22.13434504514336 21.838984750051086 4] 172.40385716104652] [[38.493447218352316 20.721993835565023 4] 117.49070488890605] [[17.221617867597978 17.17241872715581 6] 204.89594461742914] [[85.26158350889396 61.54840316180475 18] 526.364805157601] [[64.43052219238723 37.54980057768511 20] 244.4320896346616] [[89.81988854322236 12.037437111656967 20] 117.62053595616987] [[91.20407184193662 18.621146336883736 8] 138.0004564951152] [[5.355310568718332 1.8063402909824111 7] 10.801390717086997] [[93.46481966723906 77.51830903486811 5] 608.8638530712487] [[40.09025810972452 33.34132100030678 7] 316.1695409137338] [[38.584601123409605 26.72561696894523 10] 207.0933609645459] [[66.61782050323826 17.555692369076986 8] 114.29030369428614] [[40.44342836763242 24.337798348627857 16] 162.62635951872969] [[26.764957246945354 1.1368538219699191 3] 29.137292736319605] [[25.666370341226106 1.1445573195836651 13] 28.062329567423006] [[42.53003926743934 33.04074036329162 10] 311.57618123546524] [[65.03481508660673 14.251094541302978 11] 101.53537619076678] [[54.3747251238871 22.437906753248875 11] 130.77129068794605] [[4.331139768463939 2.742737197822306 14] 19.256358930334493] [[35.52188770175778 19.085335332136307 18] 118.0128694292313] [[45.797688750128415 25.340176450380653 2] 110.49893556081403] [[36.79496895462049 34.51932309311612 5] 315.1104158247773] [[19.85343749530718 16.902056671289788 11] 205.148637771985] [[23.75701467954251 20.21170646683755 20] 283.0052832556455] [[36.92517502391075 18.939323451920977 12] 114.65247906759726] [[54.99994146416334 3.8637944284741113 8] 63.31141892247905] [[48.50221730672269 24.63211604472335 3] 129.13860537426015] [[85.37977647797439 83.75807644198012 12] 1830.490403515073] [[24.931098325919876 13.101374117231208 18] 80.15253985584961] [[88.97808438240301 80.91629822254558 5] 708.8669528511383] [[18.72335710122141 9.295965026937651 3] 48.83747979274616] [[58.733386960392735 15.723667161864586 15] 101.67736473862954] [[71.27827438105028 20.393389356612005 6] 128.34093813890115] [[5.871676087678661 5.453614241358718 11] 88.47796333900322] [[5.0235257439406045 3.8144600731210847 12] 35.37181287738068] [[69.7681420645773 20.07183026273686 2] 115.68633470922117] [[47.97898065024909 33.78145425428935 15] 274.86891347712725] [[77.19200281595755 43.9890550760019 19] 281.7218161876628] [[89.1593181784551 65.6909474988316 4] 414.93499539139344] [[87.47484007232113 34.41421809776981 2] 169.84246499130708] [[77.8843287128974 30.168817921012586 8] 176.28190935010213] [[53.155641164533705 7.626230385112837 17] 70.96290729747155] [[48.87523564295588 5.8361385150887335 4] 62.11765205781288] [[27.70096586410076 3.9251500184288495 20] 36.84727214731626] [[64.72201756475923 62.040866246239915 10] 1055.626063104579] [[48.787950379780405 32.017152735931475 12] 233.5704237320198] [[68.22994307923727 3.7444973526708023 9] 76.15380368738882] [[35.135922669610586 27.963542850592805 15] 299.0475444738782] [[31.94094849637875 26.851515047717456 3] 149.76629701133922] [[87.44682559533766 69.71001468533116 7] 616.3106631054709] [[16.502440412243843 9.553541406695954 6] 59.54911713327695] [[65.58657723516147 39.34595644785905 17] 262.2271624982885] [[9.076507449622389 5.334596094678773 4] 30.784934440780965] [[70.83272111658295 25.716181276701533 6] 151.2341286022996] [[77.77814506058569 51.07037163483537 18] 375.0383810016481] [[52.90553205261815 47.59300848139086 9] 614.6946667025259] [[96.66178511125428 37.22571606544646 2] 185.44932668446216] [[83.37039252375163 63.92110619957468 2] 260.22170378261507] [[28.579523732493424 3.5688833348768663 20] 36.735811186575305] [[45.08209474213428 25.67823199300928 7] 161.20381095920527] [[86.67782534859916 53.37420830139646 9] 359.8671296970058] [[15.073322105526657 11.383707818188125 14] 105.96356354036396] [[36.326848494514785 21.825672424637695 3] 114.08309474707141] [[68.05954202821195 54.8583556566718 3] 301.8527698866141] [[50.15999779855323 31.380583088153596 2] 132.55316288859134] [[74.63368930680421 4.249173932340746 10] 83.64508975174734] [[13.991770205087583 13.052825367634105 6] 137.36084626013758] [[44.802271988985986 17.688965900055223 8] 103.20010959090068] [[13.857849822551438 3.2254974736597455 17] 22.2658593386374] [[62.51874766303392 41.67184044377686 13] 310.8601006860533] [[86.03980052136181 7.269332228818037 1] 93.30913275017986] [[69.00265292018676 25.277190862758676 12] 148.78107675868443] [[14.782350893039286 2.6780735598877166 15] 21.323546557724125] [[33.298917299329744 30.924556739923588 4] 230.70023151786586] [[15.647471815284751 10.286338032325146 20] 75.67547591433402] [[14.589826465333235 3.853133167748036 11] 25.061669692375258] [[60.06717191304179 12.27325147469228 18] 90.91709989571355] [[80.28339476176858 73.48348186294717 1] 153.76687662471574] [[16.225790357672345 12.022636121194237 19] 108.6835974932307] [[1.8814435027234953 1.0655006010138266 7] 6.668264020871645] [[56.819715589721646 53.89691359343949 17] 1275.3172827843828] [[45.79594721865585 5.750658320690483 10] 58.9488973922884] [[15.483818576860862 7.755988331586039 4] 43.63279705168101] [[35.80425496563114 26.87583691288483 8] 226.02199226339147] [[38.542832631353726 8.588285476723415 3] 59.97317834162011] [[8.08668527992198 4.365342321309383 7] 26.697502088206885] [[46.624538255938226 45.75951760521393 12] 1002.1975319945486] [[61.10070826380936 37.01592927822637 20] 248.90119064488675] [[11.26974792280231 5.064211729873293 12] 29.661760479325498] [[14.944860638227592 6.152300883000479 6] 35.684665859259546] [[20.779867994635268 17.434596885256287 13] 213.14259758160216] [[51.8361690155023 46.058432035286074 15] 729.0786559213502] [[37.7724006665291 28.02173217141597 18] 253.69451503916912] [[50.55340795400579 4.855842367938932 1] 55.409250321944725] [[12.46255483787235 6.383077526965004 3] 33.44175118924552] [[2.825060509291349 2.320207091843218 15] 27.28961219536036] [[20.077548934197882 1.2289142942294096 9] 22.69562577013047] [[23.007723291696365 15.421217608290865 10] 114.41133834183411] [[89.63984851930351 25.324668295054057 16] 160.23280620712114] [[36.80420181059913 34.49270595835022 4] 259.4279777917544] [[78.05514189100933 17.31926848019573 5] 122.50518348711195] [[90.20929622758638 48.30811772172541 6] 291.181946038735] [[57.01722468483064 15.77528995445072 7] 100.62360199533639] [[95.29787217515246 20.175633085333605 17] 146.4863070310224] [[20.030058794624434 3.267891265504147 7] 27.839948052153716] [[40.53911541560005 22.571204794554017 15] 142.3673893075971] [[97.26010859597244 56.88878097895052 13] 371.0176329369734] [[11.141479533597721 2.5744495411233768 3] 17.617586284652763] [[60.211088669439036 15.2162921464329 17] 100.9353310935038] [[37.81639543757319 17.83458065127233 15] 105.32039283188315] [[22.177427446392972 6.742454209937371 5] 41.44501510819936] [[8.559569951879983 7.611457931234756 9] 95.23796944049009] [[5.2299827407013035 2.7043870198127573 14] 16.428822471213746] [[66.55496685578895 33.634545423592996 19] 202.5518989249725] [[59.34297016885788 48.192173854632564 6] 408.1307434520429] [[30.528734370978018 26.5709635659859 6] 248.9831245377554] [[12.238780464620918 5.923943968172664 12] 35.19534274576843] [[89.4427628219728 37.20322603946086 15] 216.83854933404746] [[98.23894518746111 20.50774283055822 12] 150.07550269918895] [[88.89729884230931 71.89177196869808 5] 549.7912204666421] [[42.8250337833989 14.80949856989801 1] 57.63453235329691] [[28.289233229836217 11.242597112269708 1] 39.53183034210593] [[71.77076505120381 27.095208184567863 9] 158.8023017163816] [[2.3810469319360448 1.5733755608131637 8] 11.234021684875527] [[70.47243432647934 15.041807528459747 12] 108.71962110080327] [[82.41098371801064 43.158726544085475 6] 258.19754217427817] [[71.9229655468479 59.70220033720437 15] 727.2358993554393] [[83.10801480043902 41.724401038048775 17] 250.6907602265363] [[35.41825390852008 15.700090241031697 3] 83.82238416431234] [[80.55790997567114 7.753574967881362 6] 97.71647523444705] [[39.40336981865928 18.976105210552685 4] 106.55436711787762] [[99.84529170304572 65.66292001664655 12] 480.2785100653105] [[52.539383880302054 4.35067475221974 7] 62.0263253393837] [[38.02007472600838 5.807021318686208 2] 50.52105662871786] [[80.35594344225791 42.528582931397075 7] 258.00492543887657] [[5.4070286367126155 2.5174253238583564 12] 14.826707688009922] [[40.33522601601685 28.30945065582344 4] 174.37029742971686] [[88.49995672144048 34.27144358598456 13] 200.35982965601036] [[84.61247411633052 44.97112373122641 18] 276.5865279540104] [[93.01527397862337 73.712359024718 10] 724.9259393700036] [[88.16848417869666 48.906350179715915 14] 307.7399049665791] [[43.685308102835585 5.575045911320959 2] 55.54687796173647] [[61.49910950401691 16.749306064132384 20] 107.5358431014271] [[43.5640045662721 39.93872159281205 3] 230.23981000439352] [[99.67391545299998 68.69506615237881 9] 522.7189987587461] [[72.21463692051861 10.97605103221145 9] 98.10130288327241] [[75.9158913992774 30.120044061134898 4] 171.42040411877068] [[99.82162378673017 73.68064641015633 7] 583.445906934356] [[36.6503630771576 24.83202204030179 3] 131.36303421453366] [[27.890461038042734 20.440855022657757 16] 179.6929888238241] [[66.26590493742228 37.715673578782564 7] 236.67483816442416] [[88.59849680709948 63.74367006273025 20] 542.2949610412702] [[44.812974777860255 2.3898800249674816 3] 49.85443691511045] [[50.56481346954986 34.652170556771715 1] 85.21698402632157] [[8.825196416372606 4.452107040366659 6] 26.35285094550178] [[36.80345811659769 12.60460710671589 11] 75.14298289860076] [[97.50019953270845 46.68333867771084 6] 273.3058402949193] [[6.097030714961351 2.7286659024861986 17] 15.975253391973451] [[58.31563468410941 7.397731008108523 5] 75.25821864488492] [[91.11700768914933 46.837937647666514 1] 137.95494533681585] [[60.80423954624685 26.461490078600534 6] 153.45539334413823] [[23.165732544920804 20.94536792218934 10] 292.1934684778859] [[25.769946087161767 24.534113009737595 9] 374.9415311388494] [[24.718852626364622 1.43735184982026 8] 27.7710346012505] [[95.62389547097285 29.91520843846335 18] 182.69331983031486] [[14.504965279150007 5.034508293742033 18] 29.92668492244511] [[30.261589815614148 29.558092729927335 2] 118.24872563321686] [[96.12362338991187 36.90410069984664 12] 215.92500499861987] [[48.82523916742416 18.423622984867762 18] 108.00220989088712] [[62.32881941057366 22.274546035459842 20] 131.65206708533066] [[74.71179832354964 18.128950510593224 11] 122.5865855148953] [[68.70114962666733 67.01437114389168 10] 1216.6166056199174] [[95.0383695656252 62.157236220289725 14] 453.16174050999086] [[62.30942137456483 44.913652891958584 5] 309.3247588629304] [[2.7819642218631233 2.2066033331233554 14] 23.179507802507196] [[20.886257226780756 2.4360183088137903 13] 26.401557601882207] [[7.6174764380144575 2.030530769465658 5] 13.136794552201001] [[16.480030971885654 8.230741636303113 6] 48.59983637230933] [[22.811775857053053 11.596471740115065 7] 69.37189168052917] [[30.41814130614948 18.433916385724 5] 113.86024835759598] [[69.9467650772191 52.547408179047004 17] 488.62832361374] [[61.848081404861496 7.089768360078087 3] 77.74620965906529] [[91.87180398844488 51.720303720994615 16] 328.5237816588833] [[57.19050867717922 20.99214975776774 12] 123.52160004389188] [[16.58626808452616 16.302503697768124 20] 561.0855201132961] [[34.32228071484351 22.2980150424869 11] 160.2116858244505] [[76.26398888583859 29.122196040013005 8] 170.41221110318114] [[43.4411321286018 39.68221804729447 9] 535.2253162621689] [[49.719376068914904 18.59558003858602 9] 109.11556630003206] [[17.783568471684113 17.61869035560174 13] 435.47808336167606] [[62.22430346128138 11.338067093124202 15] 89.95295392111719] [[30.063223377379195 11.468235314503993 13] 67.14524380568423] [[11.987936064441318 1.414430661175957 9] 15.195217546079967] [[74.76146679069556 58.419280628532974 15] 594.2034819091018] [[95.15906433989298 67.08983162153575 13] 544.1999463691379] [[62.780961411423455 31.08931762325013 14] 185.94655890256215] [[1.0810376768332204 1.029035079231522 2] 4.118641855237654] [[88.21549583538518 4.918634133323541 15] 98.63364941236884] [[86.47971368402938 55.0918873449001 18] 389.9414961692336] [[29.79770990083648 6.619983473151818 13] 46.81925390907185] [[67.38011171535568 2.8401161794681666 18] 73.31030567147197] [[57.365669780226774 33.501488838293895 1] 90.86715861852068] [[79.99059779136662 62.58918604568392 10] 599.0302402393351] [[36.297961248424315 22.46067197950158 2] 95.11765540926666] [[22.55578991580817 1.070235066570679 6] 24.802880525530416] [[56.36665565769553 15.426466067187816 6] 98.80359040725416] [[98.83013516320543 21.63798895718511 6] 154.21995932439427] [[5.862711106303556 2.4862433524235175 14] 14.496572826240655] [[33.26094028912256 18.543600317240102 13] 117.01852799422315] [[55.876994102063335 38.550339432629436 14] 302.83458364241204] [[72.16788097169066 22.523973837168622 7] 137.6148563025485] [[32.44293594991217 31.795757823581162 17] 934.0106176432774] [[64.96958651452876 8.409543618397983 6] 84.28899772517485] [[53.237921489770066 14.413419932541935 3] 90.9256974049421] [[7.21850711563464 4.275379272704058 16] 28.184190513104216] [[95.02712199930946 31.481510940621895 18] 189.1830295815267] [[88.57298557847497 10.190661380425903 14] 111.6041297430246] [[61.04562476240445 24.742848811169665 1] 85.78847357357412] [[12.64819953189113 10.870849534407908 16] 152.52923560762136] [[79.53613004940158 20.10513432522365 16] 133.34928186111028] [[99.56182064286095 50.0718867580361 15] 301.0169436839243] [[40.3763463992961 32.98255063554366 5] 254.8882449770068] [[83.12004228738533 14.73411780987765 4] 118.8199351453944] [[15.7825113288572 7.124024482697393 3] 37.913471256954146] [[19.497590455956026 17.3546335311608 2] 69.65406377040397] [[51.80562873114883 33.63696856927064 4] 200.32869962361434] [[28.551979823962238 9.87279506134988 14] 58.73398801314954] [[90.5412924405057 86.634312685116 18] 2249.867688241197] [[96.00646484160072 27.6203027808872 4] 172.369117665198] [[41.651031937697596 4.390625666415698 20] 51.46703277143] [[80.64440253381778 50.85290427425759 6] 333.578627010139] [[43.895449927040204 16.05422499461894 4] 92.82754711923938] [[15.715476067659822 6.894623596262708 16] 40.282706719233516] [[49.56201142039288 18.463233042631906 1] 68.02524446302479] [[58.374069750825164 55.75142073340541 3] 327.2244416612766] [[74.04180000531001 66.55147492082156 9] 857.5726614192054] [[88.39360070548749 9.026537800018986 5] 108.49867538273602] [[68.68126090523462 13.894835840677919 11] 103.51889747978731] [[17.446900392675516 14.171752764244538 19] 165.1922489172602] [[69.67169489974603 58.30507326868659 9] 626.5248239527303] [[57.059399673463524 40.4783449363464 12] 330.19788479846267] [[53.10857304002507 28.35378884157141 20] 174.76760799472177] [[28.154427299482172 19.066110968751087 3] 100.85335412954159] [[64.8759062541632 53.643687657137995 9] 560.8673145678312] [[37.97210833825227 8.559408307831205 5] 60.03772249778178] [[95.31146985263835 10.805995552813393 4] 119.66728257284173] [[30.686993073155836 16.257895548387573 18] 99.8386698492389] [[93.2642688189152 73.28272182559822 1] 166.54699064451341] [[37.23458380354248 31.090576277680498 8] 316.22773863307333] [[73.44610259787017 32.67422223020899 1] 106.12032482807916] [[33.7215010672847 30.907599938722292 9] 420.95783958667397] [[24.6381484108946 2.2087624821150484 9] 29.490694770902362] [[18.20431989722095 1.925604052743485 1] 20.129923949964436] [[65.27754026253905 1.9664421523662043 9] 69.3325799160234] [[13.022378433934517 10.208745559301287 1] 23.231123993235805] [[94.10745130740199 57.157012706024126 9] 380.9162029247066] [[24.0327669647555 13.704076190046834 9] 87.24629537431761] [[17.520421126771353 1.6352182745842012 19] 21.1275154911852] [[8.871593360897549 3.782199476741404 3] 20.34833197152965] [[86.0039290436922 40.98479784789858 10] 242.45098170044596] [[84.43339470692013 66.9846998039379 19] 723.6954491529376] [[40.95897918607514 25.94667389617701 12] 181.78039333819314] [[55.37693503203498 38.61923238301195 15] 309.2222818582346] [[7.308693400213159 5.2624851178415355 16] 44.66766169533287] [[80.2156114325242 56.70177497723621 16] 465.26829304451445] [[85.6498318214659 29.734915128104735 3] 169.34953411950838] [[67.097456985541 59.75928185392446 6] 580.9975351214164] [[54.58430346282849 48.4141852653254 4] 347.2528565664769] [[7.214209195094047 5.753999502215917 1] 12.968208697309965] [[31.861510321566886 1.973930539060365 4] 36.06957720299154] [[74.97081802833905 32.9105921119096 3] 176.02804707169463] [[69.58055542281673 39.90271921294354 8] 253.68397423753603] [[83.99327484295215 51.798923009112166 16] 354.1192117775025] [[95.16148055395985 25.227801316534105 16] 163.81838454916118] [[56.2294657237942 55.00369487213134 7] 729.5211652359316] [[76.76802512823431 59.82745647655481 13] 594.784127412953] [[63.108546422056214 6.674017127450546 6] 78.03502652930143] [[56.22459689094178 9.865514577153837 1] 66.09011146809561] [[1.8509876991811889 1.3237235663264197 20] 11.131342231423332] [[40.044613123231095 28.320315518049853 7] 212.84020429031406] [[12.773905461854556 5.753420019279314 7] 33.584056081334836] [[28.50616896050064 12.644733893806949 1] 41.15090285430759] [[58.10256167705559 15.844848341055183 15] 101.67454848510116] [[50.7578544718464 44.75629813117827 11] 605.4262677505022] [[42.49535116530794 30.242429255185197 11] 246.2852088018514] [[23.898441641841895 21.662259562821422 14] 363.8505156823076] [[40.91042996969216 22.408808291725332 13] 139.9543316366064] [[82.98941878404443 40.46109595763002 12] 240.8568688865313] [[89.60986268219193 20.13001167797736 10] 141.534152634288] [[69.87117151333923 54.05828871087248 19] 543.4175214595407] [[26.11233200827071 22.609404676705918 4] 159.06081162607967] [[35.75818559055108 7.275312351023773 9] 54.02540929130454] [[93.69685967139398 52.23186831708022 16] 329.72089573671735] [[43.3849757422032 18.419430913222605 10] 107.3828969582071] [[56.134389237175526 50.87708283016065 11] 755.2390674538339] [[85.4145483511498 13.120438416647307 8] 116.41776634038229] [[18.516432215475625 11.44884020070556 12] 78.26111781033838] [[3.060549350679284 2.973003412726765 8] 43.702769819941025] [[45.27344702571484 43.178976616684544 14] 926.8572241633957] [[78.02098957618269 17.703062979761544 3] 122.3722392651882] [[18.471347171095857 15.499318706978569 15] 195.93277008938162] [[97.68739443456423 23.686479664367308 18] 160.22366090392288] [[19.561851509566033 4.313552497775879 20] 30.62945628965934] [[47.942724678766204 37.633178820030125 14] 384.53700745978165] [[24.588817613236728 15.45166733091267 12] 107.34363848017318] [[46.16252629254736 43.50566166282261 8] 588.3331114985593] [[51.143776003674496 22.16590455587778 3] 118.8527752223245] [[75.20715475466092 59.77243206395664 20] 651.0501925690565] [[93.67330890840014 38.62651018413888 3] 209.34974901680812] [[38.36275638014632 9.082715354069222 13] 62.16313230773592] [[27.200588538355706 5.186753145747434 14] 40.01823128801684] [[54.43209587201692 18.87736674200206 3] 107.55085183206032] [[4.593196024313327 2.609778584324823 12] 16.661758209881462] [[75.27343530573869 19.665099116404946 16] 128.51219987378474] [[46.72742964478715 33.99241679042845 16] 294.3561854780428] [[28.27019678446353 14.16162093325918 11] 84.98078902301533] [[83.63183179388449 71.21478790652932 18] 985.1428689982605] [[79.92216399155156 28.42498571208879 5] 167.1948110295683] [[91.88403711380353 58.54084704311326 9] 407.35672311062723] [[33.37066841553295 18.131301689656883 13] 112.73677882086933] [[48.45761613601004 25.510833889219743 7] 154.45131309942263] [[55.29778535581532 43.396595339867496 1] 98.69438069568281] [[99.22004189184577 26.166882373734627 4] 169.47541608089736] [[64.81942995063136 36.4669938967686 18] 231.55397115104333] [[62.547959893631536 44.15042506582226 17] 361.78080548358867] [[21.473083727746964 1.165680067871507 7] 23.938267929291058] [[46.8082954351228 31.222874702352986 20] 234.2827487664121] [[43.88494825309069 43.40420085818514 4] 343.4610063774532] [[72.83850923991302 27.500099859092767 14] 161.19899254161274] [[65.59395174605885 10.508820552015166 5] 90.61165113908534] [[17.20954368186494 15.427555576013967 9] 197.34364777672914] [[38.66957334210926 7.3257731944172715 2] 54.70895380947828] [[57.96181455235092 51.952850107661945 20] 941.4441853377517] [[1.248319962143612 1.0687530109560817 3] 5.999252471264954] [[17.237502609779654 9.208255015882607 16] 56.772287273965624] [[61.944790244359574 3.8552434974886562 14] 70.16700106026748] [[94.68862013710579 87.22804493744745 13] 1514.4304174149645] [[15.985071598476235 15.00881529562741 13] 283.8022746916483] [[19.69573323653302 8.690080229295237 3] 46.43601953863239] [[20.03387218450758 19.423382679585465 9] 314.77102658595624] [[6.090256872062399 3.468215688999185 14] 22.193241405961302] [[70.41617410596258 18.03010663928795 8] 118.88530573376475] [[61.615909010858665 41.45839963956972 10] 309.0771237223003] [[49.09653202960047 48.429342610162905 7] 655.4714518495923] [[24.502103007307454 19.231563285891767 10] 185.27088557099427] [[64.40461143399443 24.874561041210463 20] 145.45871546288666] [[70.04190949638905 4.389732677632655 6] 79.40839558884356] [[45.567729406705006 22.0924179786094 16] 131.3333207306191] [[49.58588506214181 4.840243757748231 5] 60.312999665376225] [[55.31633136438798 29.190981518782777 5] 171.6084382025174] [[83.07490133380658 59.65133746150952 3] 318.7973757774282] [[21.806394288203297 15.712395858626035 16] 133.54625655798512] [[61.66260297122086 42.25879979635762 10] 322.7005240397426] [[99.19618776933468 28.78290879946107 10] 180.29248019072674] [[27.721856327876964 11.13784737118698 3] 60.74516035386901] [[96.21989894668563 81.2051221944885 14] 1031.2656107413563] [[45.01813151625136 28.505690736442936 8] 195.26883906607142] [[14.015994268371855 5.421495085631517 15] 31.698829251210952] [[48.07325836438852 43.7003634002667 6] 439.60974457625684] [[62.24622268429788 5.364332110190457 9] 73.98666970665614] [[27.07007510907935 10.705947545519237 6] 62.251206906830916] [[39.83714973132877 11.812081750153041 8] 73.41410326172037] [[23.475452224297992 5.74470816323254 9] 38.687283532398155] [[8.598276443442185 7.935042997349822 18] 163.8065271056319] [[43.12724696870317 20.406088934307494 5] 117.7332517681416] [[33.83080019633896 1.3973762095827642 6] 36.74596280295512] [[78.6589492436539 63.817705292837914 18] 737.6112344952602] [[38.10356897508289 16.396533510491878 12] 95.6632101077336] [[51.97212699712824 19.753081217147866 4] 113.28473214094159] [[61.605468463401444 40.5123548874543 14] 297.4061631481608] [[92.23620419392594 27.613049118190574 14] 171.06004224353336] [[40.307284974992484 25.658840747527066 13] 181.0035103956869] [[64.65196387725462 50.43734082163755 16] 513.6034374624696] [[22.205045716693533 13.059388210859971 5] 79.59507532622324] [[9.590708198119815 4.081699549663697 11] 23.800506198363507] [[11.748163709275223 11.536067050526112 19] 377.3684981692551] [[17.675688895160867 8.506837273885074 13] 50.470857299310005] [[72.45944306258866 28.289228957283814 15] 165.27398201604908] [[3.943957690474729 3.7148846292401543 12] 67.55253305290957] [[62.463927632107676 14.451452957594485 7] 100.06287584761799] [[93.28159909340773 83.28785659183438 14] 1310.8252427445361] [[69.09577340556285 59.303896435790215 5] 484.04846394503375] [[6.307705634651762 1.6067816665650552 20] 10.619668943608302] [[66.83679790672696 18.021626195925467 12] 116.18651232526786] [[16.56475855364865 14.932691452240372 18] 270.2681769143302] [[72.14976855942369 11.136260045714492 5] 98.47886816114608] [[59.106092343294556 48.743891990793855 11] 541.3584301592327] [[30.349528928845906 23.71611053895435 12] 234.53935021307078] [[44.033394605677955 43.880607316275814 11] 950.4499289336699] [[3.7552137287734833 2.3151483641768884 4] 13.542613113133568] [[3.485594562305585 2.577154170296513 15] 23.011199409236262] [[87.18866835943415 43.501217259723404 14] 260.8072067254224] [[70.60002256076262 50.35309767957794 6] 366.2449889681629] [[78.3335177226868 28.196642655835923 5] 165.43620866658827] [[76.72047083224346 63.91159367117731 16] 797.0261260613098] [[51.904165291564475 3.4725945549909207 20] 59.347331739264966] [[84.10586895623241 23.156606984263824 2] 136.79471922692966] [[60.556154607466574 17.168575452749394 6] 108.42426408861533] [[5.667174791824979 2.0000439026039016 15] 11.848898467564547] [[47.51317075264833 39.932557161051314 13] 490.86926654244235] [[41.22613734059275 17.298521026013198 6] 100.28484520142028] [[12.209509178210173 7.370015335546203 8] 48.52629311128089] [[63.92342632356389 19.541088419529665 6] 120.1149820684159] [[81.52085309677551 53.70115736916785 11] 392.2286212441848] [[25.00896705225039 12.946524235503 17] 78.6917345529413] [[39.25473641960072 11.247488476947561 1] 50.50222489654828] [[49.20601657169443 22.082670280614845 9] 129.23339296267105] [[14.322232864296497 13.1485830930346 13] 224.9166646333984] [[95.36244000574025 10.13670354407255 7] 118.04713725088459] [[59.94466451864965 47.96788143788008 2] 194.26445408555028] [[42.47605212367333 9.867791056685842 20] 68.1839431113484] [[83.3465217909949 82.49328181837683 16] 2459.124083863484] [[93.52177728436868 62.38044097448245 13] 465.7740116405687] [[12.835219240486987 4.488054379503071 14] 26.637538211518788] [[35.51126472082492 10.025605320508722 13] 63.45026088487881] [[70.1091698285977 53.81516810075564 2] 219.0475447063861] [[37.902875863627116 35.514595498306065 18] 804.0756742300325] [[70.91083353188274 36.615775556690544 2] 163.0494390885809] [[95.9521239612551 48.93574487082952 10] 295.33852590725786] [[48.04676311416398 26.020245572089813 11] 161.37356688877475] [[67.7786191633219 4.480673569375687 4] 77.37283566914346] [[17.83125769258589 12.413204484546817 16] 99.23416719447333] [[66.33195827830498 40.27915649870869 6] 257.829444495167] [[2.626122004960777 1.7559098135416185 7] 12.433983546672724] [[3.9009267942400205 1.4885409470106634 19] 8.714990192431431] [[43.50163637959812 19.818152077205337 10] 116.26049786507332] [[43.24086028356754 41.507223699310316 2] 166.0984018586785] [[63.74145403250455 24.089771801500785 15] 141.1916777696246] [[26.534256372598005 23.46812919439794 5] 198.53218587339157] [[47.768202916234344 34.395714710961784 9] 278.22778764726996] [[55.56909779440662 34.95739611341407 4] 205.83678852225637] [[11.842077353452925 10.194764132270263 3] 57.3405316733432] [[78.36531475932557 27.948149425042075 15] 165.24702120913835] [[12.048863075156731 6.287296778711899 14] 38.34119961321039] [[49.727882694479035 37.01379510833672 6] 281.5745694034258] [[72.56821416047991 6.709568023282916 8] 87.3544686851747] [[44.409028859322135 24.29235511289369 1] 68.70138397221582] [[12.120970719569689 10.426574285613794 20] 153.357368759063] [[89.85377389266176 20.001982652310332 9] 141.31264055067146] [[48.9135587733259 7.523659668837402 7] 66.69597256527368] [[99.34226539836169 46.738191258067054 17] 275.8707232907454] [[49.107944424738726 9.025716731397004 13] 71.22419989566048] [[47.267588558614655 24.375021880235938 4] 137.46374195638367] [[58.08079749054485 21.32102183921618 13] 125.45535768395361] [[51.66470238003016 44.78860458150012 20] 683.0655541723236] [[40.932003533001144 30.63573037371745 5] 217.68869002629995] [[64.87964012211475 23.498301729141215 20] 138.56315979824026] [[79.24994953919776 35.875802682119634 2] 167.2422363607689] [[33.71011703543416 2.10736085684678 6] 38.20588598044126] [[33.13203699367821 23.494734387956186 12] 191.52926781373537] [[16.810272082860077 9.029740376617461 5] 53.33211774605783] [[47.43937994796494 45.31146921122578 4] 346.77925033302336] [[12.811779703843841 2.445287595874807 5] 18.851186539060265] [[54.983857112813396 37.31741461033247 19] 287.0902869878237] [[20.227986933790955 7.1758046996681735 7] 42.439771578404574] [[22.505521801619572 10.065000043808263 3] 53.651222311109855] [[52.862046037801164 22.404685768993776 18] 130.63353785921745] [[44.30424880132752 18.181967091422237 6] 105.47239687378071] [[44.29723614151498 11.36828601717533 4] 74.55847850643808] [[30.09983447570564 26.641301013665373 11] 364.855829745034] [[9.099085904251439 5.375095380631744 8] 34.84134447198514] [[21.170958059439947 19.70646976813222 7] 233.1526071314736] [[46.17370791416892 1.201776562027829 1] 47.37548447619675] [[28.080205458476364 14.392394483869278 6] 85.55179524902655] [[54.202699013527045 47.75500423505957 16] 744.129118140302] [[98.04754019267061 1.3252438050666209 7] 100.73434354905896] [[75.1871964887904 36.85759985236714 20] 219.7865237227964] [[18.458994259868174 16.967021240975143 1] 35.42601550084332] [[32.68639628305203 20.350550064715176 11] 139.76672153498203] [[60.465026952223994 9.874220300573032 17] 84.0679318330999] [[46.71046600461227 33.63719792847836 17] 285.99903429654967] [[86.46110261774518 44.54783110236061 3] 233.2880254446854] [[82.13452122915523 20.447173469047264 2] 128.1191384711223] [[29.48183322849464 11.617180234133897 15] 67.82517539846981] [[10.72724496598876 9.273718089203872 4] 65.16233691568999] [[5.662934579251596 4.897819171477028 12] 64.47005926555396] [[18.05089059097601 9.978840044825263 2] 43.525043563122786] [[95.61874340811148 77.03956630687871 11] 806.0708716647043] [[63.78328666769824 17.946578965379526 11] 113.72969701704426] [[80.48679897260205 58.152683234752885 16] 496.8681896618189] [[57.959520839885364 1.438981464825728 5] 60.91075452618292] [[69.84784117650742 23.618432102041474 9] 141.20968243664134]))
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
atom-generators = (float_sqrt integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_do*while exec_dup_items boolean_dup_items exec_empty float_pow exec_rot exec_dup boolean_fromfloat float_sin boolean_flush float_lte exec_k float_frominteger boolean_xor integer_gte boolean_dup_times boolean_shove float_lt float_mod float_log10 boolean_rot integer_div integer_fromfloat integer_lte integer_mod exec_do*count integer_rot float_yankdup float_floor integer_add float_arctan integer_shove integer_max integer_abs integer_pow integer_stackdepth float_max float_arcsin float_dup_items float_stackdepth integer_dup_times float_gt boolean_dup float_fromboolean exec_dup_times float_log2 float_arccos exec_eq integer_yank exec_while float_empty integer_negate float_abs integer_min exec_swap float_ceiling float_eq integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean float_negate boolean_frominteger boolean_eq float_gte integer_flush float_shove float_pop integer_gt float_sub float_min boolean_not float_mult exec_do*times float_dec exec_pop float_add exec_s float_dup integer_lt float_swap exec_noop integer_swap float_deepdup integer_dup float_tan boolean_deepdup exec_yank integer_pop integer_empty float_dup_times float_inc integer_dec float_rot exec_stackdepth float_flush boolean_and exec_deepdup float_cos exec_flush exec_when float_div boolean_invert_second_then_and integer_deepdup float_square float_yank boolean_yankdup #object[clojush.instructions.tag$tag_instruction_erc$fn__2429 0x5b0575d0 clojush.instructions.tag$tag_instruction_erc$fn__2429@5b0575d0] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2435 0x62f6185a clojush.instructions.tag$tagged_instruction_erc$fn__2435@62f6185a] in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 0.0 1.0 2.0 0.0 1.0 2.0 0.0 1.0 2.0)
epigenetic-markers = [:close]
error-function = #object[clojush.problems.psb2.bouncing_balls$make_error_function_from_cases$the_actual_error_function__8188 0x446f3a53 clojush.problems.psb2.bouncing_balls$make_error_function_from_cases$the_actual_error_function__8188@446f3a53]
evalpush-limit = 2000
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1000000.0
max-generations = 300
max-genome-size-in-initial-program = 250
max-points = 2000
parent-selection = :lexicase
population-size = 1000
problem-specific-initial-report = #object[clojush.problems.psb2.bouncing_balls$initial_report 0x34ede267 clojush.problems.psb2.bouncing_balls$initial_report@34ede267]
problem-specific-report = #object[clojush.problems.psb2.bouncing_balls$custom_report 0x51c6e775 clojush.problems.psb2.bouncing_balls$custom_report@51c6e775]
report-simplifications = 0
training-cases = ([[97.17954653692244 3.5724672692848234 7] 104.59716391779378] [[4.272385107662528 2.080170608313236 10] 12.37116402239604] [[45.137059939684825 28.020824084646016 1] 73.15788402433084] [[70.27927487987013 37.13505470689709 1] 107.41432958676722] [[58.2357253850557 7.76827746906407 1] 66.00400285411978] [[15.114692336054386 1.4623586494135714 4] 18.35108023194392] [[97.98920448775034 34.23643372346059 19] 203.23328542297293] [[29.49881862225299 20.72580800426837 16] 168.28235457686455] [[17.165 5.627 1] 22.792] [[96.01839545206622 5.057773921007658 1] 101.07616937307388] [[83.84233480558129 2.7076176919996997 8] 89.43828674496746] [[82.26819869857962 27.97484830958698 8] 167.01631994137142] [[93.469033361748 47.54704606116183 3] 249.24051117687725] [[1.4350320526495906 1.302553775163484 9] 17.252110118558825] [[24.421076909204977 12.836202006817253 9] 78.29835066338377] [[96.98439869328266 31.965054336447977 11] 192.34311029229508] [[57.31075552505411 40.19482406810027 18] 325.9359944489603] [[99.47895798156216 15.92643588942552 16] 137.40349224240012] [[8.60724743042029 8.146094441547918 13] 159.85810862357778] [[39.478833325226496 2.055855895302239 16] 43.81642471273236] [[26.523257876641782 7.180103533060013 20] 46.2139181301317] [[26.375592828934707 5.981422884032303 16] 41.84703161584708] [[19.9830856291557 13.937648208464095 15] 111.62017894895612] [[91.3024905656236 17.982310156872497 16] 136.0876968997569] [[75.510551625402 31.009124550573247 18] 180.74383613439704] [[43.76432895771969 33.74671752973772 1] 77.5110464874574] [[55.70496636610868 9.849608751124547 14] 79.63552353193332] [[1.001 1.0 1] 2.001] [[49.44742858657386 19.82429804295244 5] 114.43185758553028] [[11.28876686708065 3.379404580779171 2] 19.059234406329708] [[79.40573208049254 45.60593039468263 8] 290.2120546592723] [[85.32722766181153 44.4880696391581 2] 197.4986392144499] [[5.391569668341206 4.6360501434196095 15] 64.12656543114693] [[1.0990171958856036 1.0664111523483024 4] 8.283812435575541] [[35.529935544199 25.62604904985262 8] 203.32883996242504] [[51.98151685525191 18.50774873925615 3] 104.52237811882632] [[68.43842129732522 20.77952000389561 3] 124.53137519590966] [[23.99162478993707 16.61623265722927 8] 125.10138970053951] [[94.36913519626314 16.26506584127315 15] 133.67362271705363] [[75.64185623874953 14.733123967094045 4] 112.0741182882242] [[82.44554558937753 47.70280940206079 11] 308.09449229268216] [[55.46086200903 17.55762725312008 15] 106.8422859921063] [[83.49133700011795 60.88598916389755 1] 144.3773261640155] [[79.08954988447844 45.77474080206674 14] 296.28827276730993] [[86.68041182932258 35.73407389792904 5] 205.7967727380096] [[74.55304981976104 67.30936407763166 11] 985.7346629761485] [[81.74780527721082 66.80734404153036 9] 680.6601611703177] [[4.58373426799257 3.582057759483066 8] 32.16966087094561] [[64.177987474928 44.24435691933294 11] 343.23886396196536] [[73.97078679542646 59.450721290638505 9] 584.598381286135] [[60.567 37.053 1] 97.62] [[44.65836934089016 42.605099387852384 10] 712.5380722150092] [[55.743315382083054 21.08910699259336 19] 123.58943193910564] [[36.311 33.399 1] 69.71000000000001] [[47.34296069359289 32.3277001361559 17] 250.8175513783797] [[97.87095698893194 10.142667119801857 19] 120.50157103567136] [[53.44084985737808 23.595475771580173 17] 137.9404007196066] [[10.490838108513184 7.892075622530969 7] 64.09052171934651] [[30.215004642310543 11.062464965120832 12] 65.11886716984533] [[99.99150344486482 54.12317455483757 16] 335.94685974638446] [[82.84731293361686 58.72096945853961 11] 475.1045425281764] [[100.0 99.999 20] 3999.599534511501] [[25.574222499530133 24.79122851566953 6] 279.9852862270458] [[87.95336749641464 35.47118846249467 4] 201.37178351879976] [[50.5089316439644 29.25349285939968 13] 189.3816716368828] [[48.81724723084933 47.634002855389895 20] 1543.2708665264058] [[100.0 1.0 20] 102.02020201974588] [[79.7180173207521 33.262769853710154 16] 193.87684627248404] [[47.74264590092079 21.85788470381161 11] 128.34957185065113] [[44.08614093172047 4.106438265848173 17] 53.14258729371132] [[48.752966129636704 28.184461337666907 10] 181.60231209211028] [[20.052331907560728 19.12777973653861 15] 431.1702472933248] [[47.1143953399904 43.74770690194053 9] 619.0981642483139] [[31.06376646832685 30.81124607656102 17] 986.1716283110708] [[26.795400400182544 13.10386408253076 8] 77.8305227284335] [[35.792987209075555 20.10710984108343 1] 55.90009705015899] [[23.07766343080669 9.362201958080956 15] 54.58331182747669] [[82.28055194299884 64.60235745759566 10] 622.7834495108267] [[59.663165803418686 9.821398051064431 11] 83.17660533792835] [[35.80062608626359 3.0635529429230925 11] 42.501109840514886] [[63.53728210198055 31.039181831222 10] 184.7640178433449] [[56.51602437367966 5.094531781125222 3] 67.66495915565484] [[12.153148330684465 2.8748433719154494 5] 19.669771420474643] [[95.19690416455371 63.52345800811727 9] 464.5328624252392] [[87.15699653670427 8.68886459989622 14] 106.45898124701286] [[53.223876049588384 49.4088532638628 20] 1108.352776171861] [[19.696108553354357 13.72265670482058 2] 56.70225994731313] [[27.93029202135339 8.880740231354192 9] 53.970232244500494] [[12.86263410391404 12.484524147819693 12] 259.50342836054733] [[74.76321659122677 11.333281794534107 8] 101.4796780090045] [[48.46923230251033 3.840733092351054 8] 56.81176614777452] [[40.33413598236154 12.196869870647934 5] 75.11160297423211] [[32.01077123345011 17.01922092596908 17] 104.68923072629516] [[15.922579005443067 11.605945218954384 1] 27.52852422439745] [[2.176 1.787 1] 3.963] [[64.1487201233283 8.390368225208546 3] 83.26784059526848] [[8.414496956482072 1.4726673133817356 4] 11.97342229771248] [[57.18066383556299 8.152632998993878 17] 76.19725312499077] [[63.56673645589389 14.201797999074964 3] 99.02501335957726] [[87.25259985194475 78.93911616080327 12] 1219.7026109780545] [[88.99953221737351 56.37003616273572 18] 396.4002973400875] [[12.962060612056954 10.631688142261302 16] 125.7270133596633] [[94.3596704034375 56.11476969450266 14] 371.0009470551048] [[88.94605183042374 82.34455815022714 5] 738.4133192406756] [[54.34539927708706 36.90935016176109 11] 280.39310679995515] [[27.815101106096364 3.994939405396648 16] 37.1449826862781] [[65.10438322475113 50.39009301024721 7] 425.9823391989605] [[59.75470002456002 43.05256838388782 11] 357.8214349768302] [[98.6396794023612 9.832404820137544 10] 120.4817021660092] [[54.92653723171749 51.98679851630883 10] 845.1572295824686] [[14.62827734460253 10.777294545214849 4] 68.07255236417234] [[17.71296474878555 3.800164339203052 12] 27.38925898819096] [[70.60771325156578 11.557961777888965 2] 95.61558989165567] [[52.62102244916001 51.04331015517113 8] 747.314878844336] [[8.751442898916931 5.221936004029243 2] 22.31121430665652] [[55.859294831536594 19.79055795602232 6] 116.9264647918108] [[8.415812537728023 7.527795786120094 12] 111.45997112013468] [[64.69250452699325 58.303092190694414 1] 122.99559671768766] [[80.03465611674505 31.7138895697713 19] 185.0913587493753] [[5.152177111099441 2.1330553643108408 8] 12.421628829910505] [[81.64227156706289 24.40535675193546 15] 151.26547662264718] [[45.77020142067386 14.376645471719128 20] 87.69103093667414] [[86.06655109282323 79.22112026391166 5] 705.0213147484104] [[36.22066837230424 10.830266018422352 3] 65.3261581757281] [[76.39943325007572 55.56617259781668 12] 473.339139245704] [[91.85618833729652 55.18880154105334 1] 147.04498987834984] [[16.351830811519314 15.015507735118424 10] 220.1921308050422] [[15.10749280588142 3.865977292695957 17] 25.498480293326725] [[48.382464800254205 39.59533651096317 16] 464.7996449482709] [[74.25145645597769 37.32029273017883 8] 223.40541922118643] [[81.3632130159364 53.70381589371882 10] 391.0787969158339] [[21.021264790780087 19.01703289121732 12] 293.7584261080377] [[15.400234570147022 14.972265655117903 13] 335.27178176783684] [[89.63305242812889 38.695098935430565 12] 225.80337506784517] [[32.43605935110068 22.759245286655915 5] 153.5447436981634] [[67.79923025639773 14.985198055108924 7] 106.27054315215898] [[49.74806239070432 26.640532291281 12] 164.3650781598107] [[51.46811203743607 29.10265675506857 9] 184.31638069645527] [[88.71511927032182 30.571127300714338 17] 182.0049328244968] [[62.145 62.058 1] 124.203] [[28.647394644701173 11.565377870734183 5] 66.71558535687177] [[88.24679355957359 50.68982401465606 5] 306.0420412565428] [[44.56747473425981 9.400299204540678 12] 68.39353286062364] [[31.8553788037608 20.101823983888195 11] 139.9286736417627] [[59.25154798507464 34.67474186891582 13] 226.23049745010064] [[86.6932749618255 17.146715237012405 11] 129.44175367041663] [[81.02466125076013 66.90671935226014 10] 723.8467997802453] [[60.91809525597825 30.469309230550326 12] 182.79158610007156] [[25.220604052456437 14.582877112016313 1] 39.80348116447274] [[96.55634834069626 31.63538214050934 1] 128.1917304812056] [[90.34933152577864 67.62278514631875 18] 624.6058568209141] [[62.25009080082057 45.42197619850806 19] 397.2983860865757] [[8.690952282138554 1.6254767975200282 10] 12.68981664249565] [[72.70448910671657 11.627291513685336 10] 100.38605560152976] [[4.508338421682028 1.1746901371334486 3] 7.54962305216424] [[8.009724631805277 4.655868529883783 9] 30.018975932869907] [[25.986234261637176 7.902574871989679 9] 48.69716519014719] [[67.73866262678467 13.618593272779895 10] 101.82971290396809] [[46.821 8.151 1] 54.972] [[22.955704903473716 9.522452298913956 14] 55.50075513520339] [[22.985597416848385 7.699977426735591 13] 46.14309375518405] [[69.91942435832935 64.13759211847852 8] 808.4262319930441] [[18.558490830694023 15.261719662903635 14] 178.0675194418523] [[35.205473340585854 25.001661060600316 19] 207.4168989642416] [[80.48365382283802 6.028829075183441 7] 93.5176552451946] [[51.59481093485435 42.707264291422746 12] 490.8149794559178] [[77.88244675997892 71.76948235563891 13] 1247.8166200885514] [[69.06634272177155 27.551925382210023 13] 160.73999250591734] [[38.59261241325306 37.152743504110006 18] 1006.1969152799865] [[97.25429149789028 58.07717353035083 16] 385.4979776164741] [[58.29584345881111 56.70543539644176 2] 226.8651322624566] [[39.54260511487551 2.553792475754177 2] 44.81512245398126] [[33.59151458801102 25.712665664341024 3] 139.4458772208189] [[12.588726669552363 9.7848408749937 15] 98.15786269624088] [[36.53030133442315 21.42111803376184 6] 134.4158021128048] [[51.292944660480096 3.1086036919359734 5] 57.91120664795742] [[89.10458668923924 76.88075880465931 8] 838.312849469253] [[44.40278712205473 27.72638501946825 18] 192.01198675894636] [[78.44712451532912 39.923330500067046 18] 241.0399428848581] [[48.02015736932131 2.1116843262558387 17] 52.43779127231055] [[41.67381018374023 8.733231983898879 5] 63.74522296791245] [[79.57263541640944 43.995191293041664 17] 276.36057074233645] [[4.964064476210711 1.4363255281825371 7] 9.0047916976264] [[5.9528633620664495 5.083452120668414 3] 28.50881826063582] [[9.842612611563924 4.4725872621206655 16] 26.237958506860984] [[41.28351470515699 9.039950714294305 4] 64.28424240238668] [[70.42636138154938 52.348530071904776 6] 397.6275471996298] [[34.63668116651457 25.513382431458705 4] 161.1326407214202] [[13.854328616673412 8.438065440997752 6] 54.11136857912688] [[15.319 5.635 1] 20.954] [[81.07727489432324 53.07678524157052 3] 279.47024047065736] [[23.825570680485523 23.71298841706389 5] 235.45705682581823] [[58.87395533403744 41.44500274443874 15] 337.12051052040937] [[48.47182514745632 23.737809862869764 15] 141.50773700770162] [[15.106127196139573 1.6553819288102114 12] 18.824346437902467] [[27.5900116604602 21.521998536728677 14] 216.4042603744563] [[45.168297157390384 20.51966001023997 18] 120.37222110509327] [[84.16096658198269 51.89082150393272 15] 354.5738411697211] [[48.82616881190021 13.648209070537163 13] 86.71294100850118] [[15.927360543912584 8.414641880299097 2] 37.20221435849108])
uniform-addition-and-deletion-rate = 0.09
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[97.17954653692244 3.5724672692848234 7] 104.59716391779378]
Train Case:   1 | Input/Output: [[4.272385107662528 2.080170608313236 10] 12.37116402239604]
Train Case:   2 | Input/Output: [[45.137059939684825 28.020824084646016 1] 73.15788402433084]
Train Case:   3 | Input/Output: [[70.27927487987013 37.13505470689709 1] 107.41432958676722]
Train Case:   4 | Input/Output: [[58.2357253850557 7.76827746906407 1] 66.00400285411978]
Train Case:   5 | Input/Output: [[15.114692336054386 1.4623586494135714 4] 18.35108023194392]
Train Case:   6 | Input/Output: [[97.98920448775034 34.23643372346059 19] 203.23328542297293]
Train Case:   7 | Input/Output: [[29.49881862225299 20.72580800426837 16] 168.28235457686455]
Train Case:   8 | Input/Output: [[17.165 5.627 1] 22.792]
Train Case:   9 | Input/Output: [[96.01839545206622 5.057773921007658 1] 101.07616937307388]
Train Case:  10 | Input/Output: [[83.84233480558129 2.7076176919996997 8] 89.43828674496746]
Train Case:  11 | Input/Output: [[82.26819869857962 27.97484830958698 8] 167.01631994137142]
Train Case:  12 | Input/Output: [[93.469033361748 47.54704606116183 3] 249.24051117687725]
Train Case:  13 | Input/Output: [[1.4350320526495906 1.302553775163484 9] 17.252110118558825]
Train Case:  14 | Input/Output: [[24.421076909204977 12.836202006817253 9] 78.29835066338377]
Train Case:  15 | Input/Output: [[96.98439869328266 31.965054336447977 11] 192.34311029229508]
Train Case:  16 | Input/Output: [[57.31075552505411 40.19482406810027 18] 325.9359944489603]
Train Case:  17 | Input/Output: [[99.47895798156216 15.92643588942552 16] 137.40349224240012]
Train Case:  18 | Input/Output: [[8.60724743042029 8.146094441547918 13] 159.85810862357778]
Train Case:  19 | Input/Output: [[39.478833325226496 2.055855895302239 16] 43.81642471273236]
Train Case:  20 | Input/Output: [[26.523257876641782 7.180103533060013 20] 46.2139181301317]
Train Case:  21 | Input/Output: [[26.375592828934707 5.981422884032303 16] 41.84703161584708]
Train Case:  22 | Input/Output: [[19.9830856291557 13.937648208464095 15] 111.62017894895612]
Train Case:  23 | Input/Output: [[91.3024905656236 17.982310156872497 16] 136.0876968997569]
Train Case:  24 | Input/Output: [[75.510551625402 31.009124550573247 18] 180.74383613439704]
Train Case:  25 | Input/Output: [[43.76432895771969 33.74671752973772 1] 77.5110464874574]
Train Case:  26 | Input/Output: [[55.70496636610868 9.849608751124547 14] 79.63552353193332]
Train Case:  27 | Input/Output: [[1.001 1.0 1] 2.001]
Train Case:  28 | Input/Output: [[49.44742858657386 19.82429804295244 5] 114.43185758553028]
Train Case:  29 | Input/Output: [[11.28876686708065 3.379404580779171 2] 19.059234406329708]
Train Case:  30 | Input/Output: [[79.40573208049254 45.60593039468263 8] 290.2120546592723]
Train Case:  31 | Input/Output: [[85.32722766181153 44.4880696391581 2] 197.4986392144499]
Train Case:  32 | Input/Output: [[5.391569668341206 4.6360501434196095 15] 64.12656543114693]
Train Case:  33 | Input/Output: [[1.0990171958856036 1.0664111523483024 4] 8.283812435575541]
Train Case:  34 | Input/Output: [[35.529935544199 25.62604904985262 8] 203.32883996242504]
Train Case:  35 | Input/Output: [[51.98151685525191 18.50774873925615 3] 104.52237811882632]
Train Case:  36 | Input/Output: [[68.43842129732522 20.77952000389561 3] 124.53137519590966]
Train Case:  37 | Input/Output: [[23.99162478993707 16.61623265722927 8] 125.10138970053951]
Train Case:  38 | Input/Output: [[94.36913519626314 16.26506584127315 15] 133.67362271705363]
Train Case:  39 | Input/Output: [[75.64185623874953 14.733123967094045 4] 112.0741182882242]
Train Case:  40 | Input/Output: [[82.44554558937753 47.70280940206079 11] 308.09449229268216]
Train Case:  41 | Input/Output: [[55.46086200903 17.55762725312008 15] 106.8422859921063]
Train Case:  42 | Input/Output: [[83.49133700011795 60.88598916389755 1] 144.3773261640155]
Train Case:  43 | Input/Output: [[79.08954988447844 45.77474080206674 14] 296.28827276730993]
Train Case:  44 | Input/Output: [[86.68041182932258 35.73407389792904 5] 205.7967727380096]
Train Case:  45 | Input/Output: [[74.55304981976104 67.30936407763166 11] 985.7346629761485]
Train Case:  46 | Input/Output: [[81.74780527721082 66.80734404153036 9] 680.6601611703177]
Train Case:  47 | Input/Output: [[4.58373426799257 3.582057759483066 8] 32.16966087094561]
Train Case:  48 | Input/Output: [[64.177987474928 44.24435691933294 11] 343.23886396196536]
Train Case:  49 | Input/Output: [[73.97078679542646 59.450721290638505 9] 584.598381286135]
Train Case:  50 | Input/Output: [[60.567 37.053 1] 97.62]
Train Case:  51 | Input/Output: [[44.65836934089016 42.605099387852384 10] 712.5380722150092]
Train Case:  52 | Input/Output: [[55.743315382083054 21.08910699259336 19] 123.58943193910564]
Train Case:  53 | Input/Output: [[36.311 33.399 1] 69.71000000000001]
Train Case:  54 | Input/Output: [[47.34296069359289 32.3277001361559 17] 250.8175513783797]
Train Case:  55 | Input/Output: [[97.87095698893194 10.142667119801857 19] 120.50157103567136]
Train Case:  56 | Input/Output: [[53.44084985737808 23.595475771580173 17] 137.9404007196066]
Train Case:  57 | Input/Output: [[10.490838108513184 7.892075622530969 7] 64.09052171934651]
Train Case:  58 | Input/Output: [[30.215004642310543 11.062464965120832 12] 65.11886716984533]
Train Case:  59 | Input/Output: [[99.99150344486482 54.12317455483757 16] 335.94685974638446]
Train Case:  60 | Input/Output: [[82.84731293361686 58.72096945853961 11] 475.1045425281764]
Train Case:  61 | Input/Output: [[100.0 99.999 20] 3999.599534511501]
Train Case:  62 | Input/Output: [[25.574222499530133 24.79122851566953 6] 279.9852862270458]
Train Case:  63 | Input/Output: [[87.95336749641464 35.47118846249467 4] 201.37178351879976]
Train Case:  64 | Input/Output: [[50.5089316439644 29.25349285939968 13] 189.3816716368828]
Train Case:  65 | Input/Output: [[48.81724723084933 47.634002855389895 20] 1543.2708665264058]
Train Case:  66 | Input/Output: [[100.0 1.0 20] 102.02020201974588]
Train Case:  67 | Input/Output: [[79.7180173207521 33.262769853710154 16] 193.87684627248404]
Train Case:  68 | Input/Output: [[47.74264590092079 21.85788470381161 11] 128.34957185065113]
Train Case:  69 | Input/Output: [[44.08614093172047 4.106438265848173 17] 53.14258729371132]
Train Case:  70 | Input/Output: [[48.752966129636704 28.184461337666907 10] 181.60231209211028]
Train Case:  71 | Input/Output: [[20.052331907560728 19.12777973653861 15] 431.1702472933248]
Train Case:  72 | Input/Output: [[47.1143953399904 43.74770690194053 9] 619.0981642483139]
Train Case:  73 | Input/Output: [[31.06376646832685 30.81124607656102 17] 986.1716283110708]
Train Case:  74 | Input/Output: [[26.795400400182544 13.10386408253076 8] 77.8305227284335]
Train Case:  75 | Input/Output: [[35.792987209075555 20.10710984108343 1] 55.90009705015899]
Train Case:  76 | Input/Output: [[23.07766343080669 9.362201958080956 15] 54.58331182747669]
Train Case:  77 | Input/Output: [[82.28055194299884 64.60235745759566 10] 622.7834495108267]
Train Case:  78 | Input/Output: [[59.663165803418686 9.821398051064431 11] 83.17660533792835]
Train Case:  79 | Input/Output: [[35.80062608626359 3.0635529429230925 11] 42.501109840514886]
Train Case:  80 | Input/Output: [[63.53728210198055 31.039181831222 10] 184.7640178433449]
Train Case:  81 | Input/Output: [[56.51602437367966 5.094531781125222 3] 67.66495915565484]
Train Case:  82 | Input/Output: [[12.153148330684465 2.8748433719154494 5] 19.669771420474643]
Train Case:  83 | Input/Output: [[95.19690416455371 63.52345800811727 9] 464.5328624252392]
Train Case:  84 | Input/Output: [[87.15699653670427 8.68886459989622 14] 106.45898124701286]
Train Case:  85 | Input/Output: [[53.223876049588384 49.4088532638628 20] 1108.352776171861]
Train Case:  86 | Input/Output: [[19.696108553354357 13.72265670482058 2] 56.70225994731313]
Train Case:  87 | Input/Output: [[27.93029202135339 8.880740231354192 9] 53.970232244500494]
Train Case:  88 | Input/Output: [[12.86263410391404 12.484524147819693 12] 259.50342836054733]
Train Case:  89 | Input/Output: [[74.76321659122677 11.333281794534107 8] 101.4796780090045]
Train Case:  90 | Input/Output: [[48.46923230251033 3.840733092351054 8] 56.81176614777452]
Train Case:  91 | Input/Output: [[40.33413598236154 12.196869870647934 5] 75.11160297423211]
Train Case:  92 | Input/Output: [[32.01077123345011 17.01922092596908 17] 104.68923072629516]
Train Case:  93 | Input/Output: [[15.922579005443067 11.605945218954384 1] 27.52852422439745]
Train Case:  94 | Input/Output: [[2.176 1.787 1] 3.963]
Train Case:  95 | Input/Output: [[64.1487201233283 8.390368225208546 3] 83.26784059526848]
Train Case:  96 | Input/Output: [[8.414496956482072 1.4726673133817356 4] 11.97342229771248]
Train Case:  97 | Input/Output: [[57.18066383556299 8.152632998993878 17] 76.19725312499077]
Train Case:  98 | Input/Output: [[63.56673645589389 14.201797999074964 3] 99.02501335957726]
Train Case:  99 | Input/Output: [[87.25259985194475 78.93911616080327 12] 1219.7026109780545]
Train Case: 100 | Input/Output: [[88.99953221737351 56.37003616273572 18] 396.4002973400875]
Train Case: 101 | Input/Output: [[12.962060612056954 10.631688142261302 16] 125.7270133596633]
Train Case: 102 | Input/Output: [[94.3596704034375 56.11476969450266 14] 371.0009470551048]
Train Case: 103 | Input/Output: [[88.94605183042374 82.34455815022714 5] 738.4133192406756]
Train Case: 104 | Input/Output: [[54.34539927708706 36.90935016176109 11] 280.39310679995515]
Train Case: 105 | Input/Output: [[27.815101106096364 3.994939405396648 16] 37.1449826862781]
Train Case: 106 | Input/Output: [[65.10438322475113 50.39009301024721 7] 425.9823391989605]
Train Case: 107 | Input/Output: [[59.75470002456002 43.05256838388782 11] 357.8214349768302]
Train Case: 108 | Input/Output: [[98.6396794023612 9.832404820137544 10] 120.4817021660092]
Train Case: 109 | Input/Output: [[54.92653723171749 51.98679851630883 10] 845.1572295824686]
Train Case: 110 | Input/Output: [[14.62827734460253 10.777294545214849 4] 68.07255236417234]
Train Case: 111 | Input/Output: [[17.71296474878555 3.800164339203052 12] 27.38925898819096]
Train Case: 112 | Input/Output: [[70.60771325156578 11.557961777888965 2] 95.61558989165567]
Train Case: 113 | Input/Output: [[52.62102244916001 51.04331015517113 8] 747.314878844336]
Train Case: 114 | Input/Output: [[8.751442898916931 5.221936004029243 2] 22.31121430665652]
Train Case: 115 | Input/Output: [[55.859294831536594 19.79055795602232 6] 116.9264647918108]
Train Case: 116 | Input/Output: [[8.415812537728023 7.527795786120094 12] 111.45997112013468]
Train Case: 117 | Input/Output: [[64.69250452699325 58.303092190694414 1] 122.99559671768766]
Train Case: 118 | Input/Output: [[80.03465611674505 31.7138895697713 19] 185.0913587493753]
Train Case: 119 | Input/Output: [[5.152177111099441 2.1330553643108408 8] 12.421628829910505]
Train Case: 120 | Input/Output: [[81.64227156706289 24.40535675193546 15] 151.26547662264718]
Train Case: 121 | Input/Output: [[45.77020142067386 14.376645471719128 20] 87.69103093667414]
Train Case: 122 | Input/Output: [[86.06655109282323 79.22112026391166 5] 705.0213147484104]
Train Case: 123 | Input/Output: [[36.22066837230424 10.830266018422352 3] 65.3261581757281]
Train Case: 124 | Input/Output: [[76.39943325007572 55.56617259781668 12] 473.339139245704]
Train Case: 125 | Input/Output: [[91.85618833729652 55.18880154105334 1] 147.04498987834984]
Train Case: 126 | Input/Output: [[16.351830811519314 15.015507735118424 10] 220.1921308050422]
Train Case: 127 | Input/Output: [[15.10749280588142 3.865977292695957 17] 25.498480293326725]
Train Case: 128 | Input/Output: [[48.382464800254205 39.59533651096317 16] 464.7996449482709]
Train Case: 129 | Input/Output: [[74.25145645597769 37.32029273017883 8] 223.40541922118643]
Train Case: 130 | Input/Output: [[81.3632130159364 53.70381589371882 10] 391.0787969158339]
Train Case: 131 | Input/Output: [[21.021264790780087 19.01703289121732 12] 293.7584261080377]
Train Case: 132 | Input/Output: [[15.400234570147022 14.972265655117903 13] 335.27178176783684]
Train Case: 133 | Input/Output: [[89.63305242812889 38.695098935430565 12] 225.80337506784517]
Train Case: 134 | Input/Output: [[32.43605935110068 22.759245286655915 5] 153.5447436981634]
Train Case: 135 | Input/Output: [[67.79923025639773 14.985198055108924 7] 106.27054315215898]
Train Case: 136 | Input/Output: [[49.74806239070432 26.640532291281 12] 164.3650781598107]
Train Case: 137 | Input/Output: [[51.46811203743607 29.10265675506857 9] 184.31638069645527]
Train Case: 138 | Input/Output: [[88.71511927032182 30.571127300714338 17] 182.0049328244968]
Train Case: 139 | Input/Output: [[62.145 62.058 1] 124.203]
Train Case: 140 | Input/Output: [[28.647394644701173 11.565377870734183 5] 66.71558535687177]
Train Case: 141 | Input/Output: [[88.24679355957359 50.68982401465606 5] 306.0420412565428]
Train Case: 142 | Input/Output: [[44.56747473425981 9.400299204540678 12] 68.39353286062364]
Train Case: 143 | Input/Output: [[31.8553788037608 20.101823983888195 11] 139.9286736417627]
Train Case: 144 | Input/Output: [[59.25154798507464 34.67474186891582 13] 226.23049745010064]
Train Case: 145 | Input/Output: [[86.6932749618255 17.146715237012405 11] 129.44175367041663]
Train Case: 146 | Input/Output: [[81.02466125076013 66.90671935226014 10] 723.8467997802453]
Train Case: 147 | Input/Output: [[60.91809525597825 30.469309230550326 12] 182.79158610007156]
Train Case: 148 | Input/Output: [[25.220604052456437 14.582877112016313 1] 39.80348116447274]
Train Case: 149 | Input/Output: [[96.55634834069626 31.63538214050934 1] 128.1917304812056]
Train Case: 150 | Input/Output: [[90.34933152577864 67.62278514631875 18] 624.6058568209141]
Train Case: 151 | Input/Output: [[62.25009080082057 45.42197619850806 19] 397.2983860865757]
Train Case: 152 | Input/Output: [[8.690952282138554 1.6254767975200282 10] 12.68981664249565]
Train Case: 153 | Input/Output: [[72.70448910671657 11.627291513685336 10] 100.38605560152976]
Train Case: 154 | Input/Output: [[4.508338421682028 1.1746901371334486 3] 7.54962305216424]
Train Case: 155 | Input/Output: [[8.009724631805277 4.655868529883783 9] 30.018975932869907]
Train Case: 156 | Input/Output: [[25.986234261637176 7.902574871989679 9] 48.69716519014719]
Train Case: 157 | Input/Output: [[67.73866262678467 13.618593272779895 10] 101.82971290396809]
Train Case: 158 | Input/Output: [[46.821 8.151 1] 54.972]
Train Case: 159 | Input/Output: [[22.955704903473716 9.522452298913956 14] 55.50075513520339]
Train Case: 160 | Input/Output: [[22.985597416848385 7.699977426735591 13] 46.14309375518405]
Train Case: 161 | Input/Output: [[69.91942435832935 64.13759211847852 8] 808.4262319930441]
Train Case: 162 | Input/Output: [[18.558490830694023 15.261719662903635 14] 178.0675194418523]
Train Case: 163 | Input/Output: [[35.205473340585854 25.001661060600316 19] 207.4168989642416]
Train Case: 164 | Input/Output: [[80.48365382283802 6.028829075183441 7] 93.5176552451946]
Train Case: 165 | Input/Output: [[51.59481093485435 42.707264291422746 12] 490.8149794559178]
Train Case: 166 | Input/Output: [[77.88244675997892 71.76948235563891 13] 1247.8166200885514]
Train Case: 167 | Input/Output: [[69.06634272177155 27.551925382210023 13] 160.73999250591734]
Train Case: 168 | Input/Output: [[38.59261241325306 37.152743504110006 18] 1006.1969152799865]
Train Case: 169 | Input/Output: [[97.25429149789028 58.07717353035083 16] 385.4979776164741]
Train Case: 170 | Input/Output: [[58.29584345881111 56.70543539644176 2] 226.8651322624566]
Train Case: 171 | Input/Output: [[39.54260511487551 2.553792475754177 2] 44.81512245398126]
Train Case: 172 | Input/Output: [[33.59151458801102 25.712665664341024 3] 139.4458772208189]
Train Case: 173 | Input/Output: [[12.588726669552363 9.7848408749937 15] 98.15786269624088]
Train Case: 174 | Input/Output: [[36.53030133442315 21.42111803376184 6] 134.4158021128048]
Train Case: 175 | Input/Output: [[51.292944660480096 3.1086036919359734 5] 57.91120664795742]
Train Case: 176 | Input/Output: [[89.10458668923924 76.88075880465931 8] 838.312849469253]
Train Case: 177 | Input/Output: [[44.40278712205473 27.72638501946825 18] 192.01198675894636]
Train Case: 178 | Input/Output: [[78.44712451532912 39.923330500067046 18] 241.0399428848581]
Train Case: 179 | Input/Output: [[48.02015736932131 2.1116843262558387 17] 52.43779127231055]
Train Case: 180 | Input/Output: [[41.67381018374023 8.733231983898879 5] 63.74522296791245]
Train Case: 181 | Input/Output: [[79.57263541640944 43.995191293041664 17] 276.36057074233645]
Train Case: 182 | Input/Output: [[4.964064476210711 1.4363255281825371 7] 9.0047916976264]
Train Case: 183 | Input/Output: [[5.9528633620664495 5.083452120668414 3] 28.50881826063582]
Train Case: 184 | Input/Output: [[9.842612611563924 4.4725872621206655 16] 26.237958506860984]
Train Case: 185 | Input/Output: [[41.28351470515699 9.039950714294305 4] 64.28424240238668]
Train Case: 186 | Input/Output: [[70.42636138154938 52.348530071904776 6] 397.6275471996298]
Train Case: 187 | Input/Output: [[34.63668116651457 25.513382431458705 4] 161.1326407214202]
Train Case: 188 | Input/Output: [[13.854328616673412 8.438065440997752 6] 54.11136857912688]
Train Case: 189 | Input/Output: [[15.319 5.635 1] 20.954]
Train Case: 190 | Input/Output: [[81.07727489432324 53.07678524157052 3] 279.47024047065736]
Train Case: 191 | Input/Output: [[23.825570680485523 23.71298841706389 5] 235.45705682581823]
Train Case: 192 | Input/Output: [[58.87395533403744 41.44500274443874 15] 337.12051052040937]
Train Case: 193 | Input/Output: [[48.47182514745632 23.737809862869764 15] 141.50773700770162]
Train Case: 194 | Input/Output: [[15.106127196139573 1.6553819288102114 12] 18.824346437902467]
Train Case: 195 | Input/Output: [[27.5900116604602 21.521998536728677 14] 216.4042603744563]
Train Case: 196 | Input/Output: [[45.168297157390384 20.51966001023997 18] 120.37222110509327]
Train Case: 197 | Input/Output: [[84.16096658198269 51.89082150393272 15] 354.5738411697211]
Train Case: 198 | Input/Output: [[48.82616881190021 13.648209070537163 13] 86.71294100850118]
Train Case: 199 | Input/Output: [[15.927360543912584 8.414641880299097 2] 37.20221435849108]
Test Case:   0 | Input/Output: [[18.17992740576288 15.397071409227344 7] 150.79374223246666]
Test Case:   1 | Input/Output: [[67.10193437915689 32.47540572244958 16] 192.9668359236472]
Test Case:   2 | Input/Output: [[75.14095952517053 22.48923583203932 15] 139.33117349747928]
Test Case:   3 | Input/Output: [[81.70950824322772 49.77656943912319 17] 336.3708029541384]
Test Case:   4 | Input/Output: [[95.68566724410027 81.16832999688773 11] 974.8970939209868]
Test Case:   5 | Input/Output: [[35.212498845904754 23.13606564213765 5] 149.2999251900563]
Test Case:   6 | Input/Output: [[66.32345799000858 40.96892263716119 1] 107.29238062716976]
Test Case:   7 | Input/Output: [[56.56733860806926 19.336875451667 16] 115.32758137704444]
Test Case:   8 | Input/Output: [[5.4769691619605245 2.9079488121279904 2] 12.836816757473564]
Test Case:   9 | Input/Output: [[15.493285170559805 5.997411710207782 10] 35.06116012967977]
Test Case:  10 | Input/Output: [[3.4660074152134133 1.6242151366631623 7] 9.531583637852314]
Test Case:  11 | Input/Output: [[54.67787787414103 8.725787176015475 11] 75.44331046644004]
Test Case:  12 | Input/Output: [[71.81089036866763 28.073942951638763 7] 163.7701790866016]
Test Case:  13 | Input/Output: [[86.16496124754629 78.81030009689552 9] 1066.9203474344351]
Test Case:  14 | Input/Output: [[23.821190028432312 12.895902664913546 13] 80.0294544303797]
Test Case:  15 | Input/Output: [[91.1470250556092 44.242375324674605 2] 201.1068344338145]
Test Case:  16 | Input/Output: [[49.04463952771264 3.5021164656675867 19] 56.58748206340399]
Test Case:  17 | Input/Output: [[86.06246680616908 7.503094841118957 7] 102.50187257227572]
Test Case:  18 | Input/Output: [[14.14799685928194 12.447175222368212 20] 204.1526214152555]
Test Case:  19 | Input/Output: [[15.69861324094362 1.693844696421683 18] 19.49603591518108]
Test Case:  20 | Input/Output: [[38.0840739863233 37.41317601404579 14] 944.0629495828204]
Test Case:  21 | Input/Output: [[74.46313371491857 34.682844830000846 4] 194.69043473564903]
Test Case:  22 | Input/Output: [[43.68237661990627 21.32008912557511 13] 126.96415677422478]
Test Case:  23 | Input/Output: [[83.63691027091372 10.412443864101569 7] 107.4230258124498]
Test Case:  24 | Input/Output: [[93.55407521723548 64.2711925832235 13] 500.3977318675025]
Test Case:  25 | Input/Output: [[42.54147679282767 21.56281353269861 18] 129.99293323574605]
Test Case:  26 | Input/Output: [[95.1380324462002 66.11359404192142 2] 273.3090686798869]
Test Case:  27 | Input/Output: [[66.03493717528688 34.8302241908341 12] 213.35034658205169]
Test Case:  28 | Input/Output: [[60.28979666740184 34.61059279003938 16] 222.77674237316097]
Test Case:  29 | Input/Output: [[95.7644622550284 10.99651855852627 9] 120.61054492491836]
Test Case:  30 | Input/Output: [[78.02561557887083 6.528331248154003 1] 84.55394682702483]
Test Case:  31 | Input/Output: [[81.93278757962419 1.2528169548685095 1] 83.1856045344927]
Test Case:  32 | Input/Output: [[80.48287704245148 30.687947227915146 16] 179.683873770652]
Test Case:  33 | Input/Output: [[59.13963897534831 6.306320057950475 15] 73.25775604520537]
Test Case:  34 | Input/Output: [[21.77552710218357 10.07635247773984 6] 58.70345885900621]
Test Case:  35 | Input/Output: [[65.3788070300007 46.35021648579976 12] 377.6924802312181]
Test Case:  36 | Input/Output: [[17.61658863559646 16.532363448740522 13] 311.88654965958665]
Test Case:  37 | Input/Output: [[13.218354778891902 7.337183800438846 17] 46.19796792970942]
Test Case:  38 | Input/Output: [[46.4753152490129 25.290311634238563 14] 157.40683571884432]
Test Case:  39 | Input/Output: [[21.63432302901674 13.502981570822524 10] 92.6479235306276]
Test Case:  40 | Input/Output: [[75.92423029424481 28.204645288490436 8] 165.61412571592854]
Test Case:  41 | Input/Output: [[38.0548489873587 6.584397619213998 9] 53.97887473422072]
Test Case:  42 | Input/Output: [[51.862465585959285 1.5634087931557743 19] 55.0864717593073]
Test Case:  43 | Input/Output: [[88.26719760560461 79.32143757586617 9] 1021.5407907095664]
Test Case:  44 | Input/Output: [[31.680187241904648 31.16652839386911 1] 62.84671563577376]
Test Case:  45 | Input/Output: [[11.915078111467423 10.725110544243275 20] 199.0548274654408]
Test Case:  46 | Input/Output: [[53.89790407932892 8.583708839569663 18] 74.31728545295168]
Test Case:  47 | Input/Output: [[57.1991854384898 12.68262529605592 10] 89.79088863288526]
Test Case:  48 | Input/Output: [[40.54308784544578 27.344368301410487 6] 188.9046720465638]
Test Case:  49 | Input/Output: [[86.30037050845863 22.00890141168501 17] 145.3867893961056]
Test Case:  50 | Input/Output: [[72.28446203477525 13.994743239087652 14] 106.99392752505402]
Test Case:  51 | Input/Output: [[34.52980676462307 27.48934039136621 20] 300.990799006974]
Test Case:  52 | Input/Output: [[90.91181376784446 36.31895953926326 12] 211.87002102682]
Test Case:  53 | Input/Output: [[69.77394721117453 15.450714484856729 18] 109.46441819995133]
Test Case:  54 | Input/Output: [[82.78657172587519 45.01854801579014 2] 197.30432467496655]
Test Case:  55 | Input/Output: [[79.692153328518 33.49348310060225 20] 195.24386014551425]
Test Case:  56 | Input/Output: [[62.75340272705488 40.90171286403681 20] 297.6184355699952]
Test Case:  57 | Input/Output: [[18.901567223475205 4.132081998596709 7] 29.477106004775845]
Test Case:  58 | Input/Output: [[56.06636528376659 52.47206419539817 3] 305.186830699172]
Test Case:  59 | Input/Output: [[32.444940446557695 2.651621142435688 2] 37.96489123405912]
Test Case:  60 | Input/Output: [[60.68373654979439 30.359640286643486 16] 182.1906567167475]
Test Case:  61 | Input/Output: [[34.68483355224739 18.65255878878627 2] 82.02078942485231]
Test Case:  62 | Input/Output: [[81.70967019645423 45.66279371463096 7] 283.8082169430699]
Test Case:  63 | Input/Output: [[47.84351753329474 24.06010270430461 2] 108.0633464902117]
Test Case:  64 | Input/Output: [[84.8101139154322 67.49432176352003 5] 507.83302869638726]
Test Case:  65 | Input/Output: [[45.83007573410009 10.281862003500942 3] 71.52472411754017]
Test Case:  66 | Input/Output: [[48.70102588075648 33.31835421019924 3] 176.52122227407048]
Test Case:  67 | Input/Output: [[34.93565711389104 26.92734185783076 12] 258.0079563312885]
Test Case:  68 | Input/Output: [[34.360476444636326 17.270581773250022 20] 103.80788755874902]
Test Case:  69 | Input/Output: [[49.4362436384992 29.538243873907728 10] 195.0728588766169]
Test Case:  70 | Input/Output: [[72.44989180762133 58.267487951825416 9] 573.763376073528]
Test Case:  71 | Input/Output: [[49.43624355635664 4.093159465906014 15] 58.36154855741106]
Test Case:  72 | Input/Output: [[89.97757630710917 65.32624133888855 7] 506.58350095958326]
Test Case:  73 | Input/Output: [[37.29043792561327 22.11690010044036 20] 145.9950413582396]
Test Case:  74 | Input/Output: [[51.5557161040744 26.39998751870904 15] 159.76030148638657]
Test Case:  75 | Input/Output: [[27.975544476117797 24.06503476648996 2] 96.80676255552596]
Test Case:  76 | Input/Output: [[69.49292524455005 32.587726440013626 19] 192.2189624792055]
Test Case:  77 | Input/Output: [[35.2947179826687 21.557495141193453 13] 145.82853368506483]
Test Case:  78 | Input/Output: [[5.417890358281015 5.352187991954036 17] 166.36138238982798]
Test Case:  79 | Input/Output: [[27.36906237054098 4.349315886525868 11] 37.71120027807289]
Test Case:  80 | Input/Output: [[75.46456646422557 32.121132271959056 11] 187.30019372488775]
Test Case:  81 | Input/Output: [[28.29313619135074 10.187440576263285 19] 60.13224958895838]
Test Case:  82 | Input/Output: [[21.629350306934008 12.511746633416166 12] 80.87795728049097]
Test Case:  83 | Input/Output: [[1.8090272574093889 1.3259018084854168 2] 5.4326324701382935]
Test Case:  84 | Input/Output: [[73.36111914090058 31.106113075133685 15] 181.37054224473047]
Test Case:  85 | Input/Output: [[75.73323469246462 23.744718514311742 15] 144.91252035110406]
Test Case:  86 | Input/Output: [[36.91960459979988 12.680574704733338 8] 75.53373043589407]
Test Case:  87 | Input/Output: [[38.81425338368596 13.868842101740478 17] 81.97319129066852]
Test Case:  88 | Input/Output: [[96.29782339259997 75.68186415185151 10] 731.1051129054448]
Test Case:  89 | Input/Output: [[16.468095131712417 14.13168106374664 17] 199.6791086842192]
Test Case:  90 | Input/Output: [[69.48167725571157 59.530483796927 13] 780.0341781578145]
Test Case:  91 | Input/Output: [[99.80128343820007 66.42675049969755 5] 432.1466406496877]
Test Case:  92 | Input/Output: [[71.19207675697508 60.14293622210689 4] 415.2026329062962]
Test Case:  93 | Input/Output: [[42.22638634603872 37.19520406639976 15] 567.1776021134508]
Test Case:  94 | Input/Output: [[74.41839521845102 2.3709166669715094 10] 79.31627137194897]
Test Case:  95 | Input/Output: [[21.745771766754466 15.782194683739885 15] 135.72597577092532]
Test Case:  96 | Input/Output: [[24.802139801242117 7.726506539176213 11] 47.24731735372074]
Test Case:  97 | Input/Output: [[18.316371774427644 17.27882883200949 1] 35.59520060643713]
Test Case:  98 | Input/Output: [[83.2537731868235 3.530013146567621 13] 90.62640372980952]
Test Case:  99 | Input/Output: [[17.286233244941073 10.575746281187932 8] 70.36375852051195]
Test Case: 100 | Input/Output: [[13.96438609845696 10.81856301045965 14] 106.92530912548476]
Test Case: 101 | Input/Output: [[42.28243471489424 20.348266736715736 8] 120.3856788692556]
Test Case: 102 | Input/Output: [[27.36186476036434 26.45522394789364 2] 105.85093811021784]
Test Case: 103 | Input/Output: [[10.10700206031994 6.591771630774913 14] 47.89139974524712]
Test Case: 104 | Input/Output: [[89.36538971348266 4.675181012058223 2] 98.96033543663312]
Test Case: 105 | Input/Output: [[50.4858362085148 24.925238904939185 20] 148.94755275811312]
Test Case: 106 | Input/Output: [[7.7457588654770655 6.75590317506449 5] 56.196990236978735]
Test Case: 107 | Input/Output: [[92.23434706518889 23.585703273889944 17] 155.61249581799453]
Test Case: 108 | Input/Output: [[45.22565767311478 17.942614996024783 9] 104.68520973386018]
Test Case: 109 | Input/Output: [[24.46334323141943 15.927546718306122 9] 113.32549289910664]
Test Case: 110 | Input/Output: [[37.55487108913773 32.53352599768442 20] 494.4921532802561]
Test Case: 111 | Input/Output: [[95.38235613222456 93.54809960028012 1] 188.9304557325047]
Test Case: 112 | Input/Output: [[44.87685266743888 23.83747355127738 12] 146.4932495878243]
Test Case: 113 | Input/Output: [[9.134559523239664 7.609037808433984 8] 77.0167501311747]
Test Case: 114 | Input/Output: [[10.035452216467668 9.4919017252417 17] 220.62932325384853]
Test Case: 115 | Input/Output: [[72.57558318357407 10.116737388162091 20] 96.08636386946522]
Test Case: 116 | Input/Output: [[56.75779932458512 15.215679420750496 18] 98.33528676871472]
Test Case: 117 | Input/Output: [[82.12043600111564 64.54719529017055 5] 479.7640442414814]
Test Case: 118 | Input/Output: [[89.00984446107822 2.873963892294708 17] 94.94955453376085]
Test Case: 119 | Input/Output: [[89.68898207875033 80.92689787942162 1] 170.61587995817194]
Test Case: 120 | Input/Output: [[31.70551275488906 2.420647386086599 11] 36.94698242989905]
Test Case: 121 | Input/Output: [[30.349159154391977 16.647277272807262 6] 101.2599838003982]
Test Case: 122 | Input/Output: [[76.90473571954196 53.00877732579329 6] 373.2641933863605]
Test Case: 123 | Input/Output: [[16.90189283177273 6.172467235644666 7] 36.31718240620735]
Test Case: 124 | Input/Output: [[85.58946981912625 37.07117956616986 10] 216.3312144676032]
Test Case: 125 | Input/Output: [[43.37933061962312 31.750797331858333 9] 263.36970946752547]
Test Case: 126 | Input/Output: [[37.921687186731134 31.480570527171576 15] 383.5622392625088]
Test Case: 127 | Input/Output: [[5.220244634572751 4.515486655196246 9] 52.56415636181042]
Test Case: 128 | Input/Output: [[83.91071901626174 83.38268687034653 4] 662.8836502074378]
Test Case: 129 | Input/Output: [[69.37777483632594 51.32831773666939 11] 447.1001305869883]
Test Case: 130 | Input/Output: [[80.55148637556921 7.725794225075977 2] 96.74406546093184]
Test Case: 131 | Input/Output: [[52.42360427131163 18.034358656815485 7] 107.34618296469618]
Test Case: 132 | Input/Output: [[38.20931577883327 21.699769656008524 6] 134.00019212238834]
Test Case: 133 | Input/Output: [[91.40275255444364 17.02816178851891 3] 132.39470190315666]
Test Case: 134 | Input/Output: [[6.749118284586946 5.151271766142297 15] 49.39232226560586]
Test Case: 135 | Input/Output: [[83.28854432128956 54.554807342667736 3] 287.2720928481949]
Test Case: 136 | Input/Output: [[28.032913966565506 26.38607609630945 2] 105.64105062260154]
Test Case: 137 | Input/Output: [[13.762987941048507 11.553098306249204 6] 102.50256982679474]
Test Case: 138 | Input/Output: [[85.3211265999225 5.794374934203504 19] 97.7542409533494]
Test Case: 139 | Input/Output: [[68.27544336602702 25.230385914964685 15] 148.31319133537065]
Test Case: 140 | Input/Output: [[37.37324201489847 10.580440978159658 19] 66.89052760223936]
Test Case: 141 | Input/Output: [[93.46739457675876 70.10231939178253 14] 642.6655561124625]
Test Case: 142 | Input/Output: [[66.95881124314974 50.56722627120548 2] 206.281580249922]
Test Case: 143 | Input/Output: [[4.289388952431414 2.6631218659957705 13] 18.300366448085924]
Test Case: 144 | Input/Output: [[22.73178423868021 22.138218914694523 13] 500.1272895319527]
Test Case: 145 | Input/Output: [[25.235080245640766 9.340195589156448 2] 47.37253410178707]
Test Case: 146 | Input/Output: [[49.26139601353098 36.04486234655637 10] 303.9708336336006]
Test Case: 147 | Input/Output: [[65.55570737122108 40.628928388271895 10] 276.92343540622124]
Test Case: 148 | Input/Output: [[44.502370579107705 36.04535709310466 18] 414.31571626003534]
Test Case: 149 | Input/Output: [[72.32959744697648 51.05134576660558 13] 414.874838728564]
Test Case: 150 | Input/Output: [[18.4312997326628 1.5071967261005597 8] 21.714143653583186]
Test Case: 151 | Input/Output: [[73.01073402405994 40.855155832452816 18] 258.53031797598027]
Test Case: 152 | Input/Output: [[34.27706796642349 6.521221558525655 11] 50.38382573708602]
Test Case: 153 | Input/Output: [[51.849330816685146 42.20818890821317 8] 408.2821159838018]
Test Case: 154 | Input/Output: [[55.41578391916447 29.909654426714013 16] 185.372336018799]
Test Case: 155 | Input/Output: [[58.11208588703402 33.86428670715039 19] 220.42213566696205]
Test Case: 156 | Input/Output: [[88.34820623933044 6.066646980538906 1] 94.41485321986934]
Test Case: 157 | Input/Output: [[70.88306303608928 13.974786263329934 18] 105.6961241837774]
Test Case: 158 | Input/Output: [[24.560082893752416 18.776433946590952 4] 121.1612668108381]
Test Case: 159 | Input/Output: [[88.14586848094791 24.866003928746206 17] 157.42021116074343]
Test Case: 160 | Input/Output: [[59.97542210917531 33.86663122181242 7] 211.6217177005995]
Test Case: 161 | Input/Output: [[52.97008445891187 28.460444345027657 5] 168.10698135924216]
Test Case: 162 | Input/Output: [[24.79094719189449 24.233899424517723 10] 443.53396348241233]
Test Case: 163 | Input/Output: [[50.05041772754109 18.488810018479366 9] 108.67563023185552]
Test Case: 164 | Input/Output: [[58.384728517960966 48.55144440422482 3] 269.8105943733171]
Test Case: 165 | Input/Output: [[95.23343740855051 53.937614375945806 19] 344.0004633814289]
Test Case: 166 | Input/Output: [[78.16256852907013 67.42417880945759 18] 985.585240312449]
Test Case: 167 | Input/Output: [[77.63929425200038 50.82221417152531 14] 370.9280769688888]
Test Case: 168 | Input/Output: [[4.284078075619973 2.635943764250537 16] 17.979969050248698]
Test Case: 169 | Input/Output: [[26.17189565978478 9.378048356555988 14] 55.40177176716048]
Test Case: 170 | Input/Output: [[43.29796526275506 2.077634973997984 13] 47.66267394630134]
Test Case: 171 | Input/Output: [[5.251524234216908 4.948147861543589 18] 116.06377611338787]
Test Case: 172 | Input/Output: [[10.78365088996226 5.043707581610389 4] 28.311918365391904]
Test Case: 173 | Input/Output: [[5.069283387357006 1.2970208617107817 10] 8.555226780757055]
Test Case: 174 | Input/Output: [[91.4008320617856 53.042891155308375 18] 344.16708225790023]
Test Case: 175 | Input/Output: [[36.86804772087933 26.917553468023904 17] 235.21025219579988]
Test Case: 176 | Input/Output: [[45.65044573061692 21.348656771990424 20] 125.85650052183396]
Test Case: 177 | Input/Output: [[77.86701075607354 4.529553255942918 10] 87.48563631892434]
Test Case: 178 | Input/Output: [[80.70318042568336 30.525017607054032 14] 178.89173126855997]
Test Case: 179 | Input/Output: [[54.14291619881881 29.876399224463047 12] 187.31264637205436]
Test Case: 180 | Input/Output: [[86.76580495204989 52.72604531388759 3] 275.76981930805283]
Test Case: 181 | Input/Output: [[78.45345873939588 60.3063592596679 7] 504.7540366130589]
Test Case: 182 | Input/Output: [[47.18192728535063 10.90132546775219 4] 75.32041484661218]
Test Case: 183 | Input/Output: [[35.80688245983666 15.25776609858966 17] 88.98022142287539]
Test Case: 184 | Input/Output: [[47.40849286939962 31.511101163650498 16] 235.0089640414304]
Test Case: 185 | Input/Output: [[39.60127669329074 3.6863031785495406 11] 47.73060535072741]
Test Case: 186 | Input/Output: [[21.76127495220133 1.048339668828572 11] 23.96407310539968]
Test Case: 187 | Input/Output: [[29.497370874760215 7.02930001604945 1] 36.52667089080967]
Test Case: 188 | Input/Output: [[88.11390722387056 85.70228017421275 1] 173.8161873980833]
Test Case: 189 | Input/Output: [[71.94575953164103 61.24184579018126 10] 716.4173582456847]
Test Case: 190 | Input/Output: [[13.478629885633682 8.365923713540143 15] 57.543792242116496]
Test Case: 191 | Input/Output: [[99.22253847385706 77.79759256947828 16] 803.0835954136393]
Test Case: 192 | Input/Output: [[50.249436776810846 19.7121945491989 3] 108.172985584119]
Test Case: 193 | Input/Output: [[85.77328586700087 45.05731450968492 15] 275.5933732845517]
Test Case: 194 | Input/Output: [[1.900030176167058 1.2513428789367071 9] 9.015330216380864]
Test Case: 195 | Input/Output: [[13.280576342615488 3.336893376230916 10] 22.193924844454735]
Test Case: 196 | Input/Output: [[81.73351129675575 21.178476311857107 7] 138.89346237247116]
Test Case: 197 | Input/Output: [[97.4436036733277 51.53146707802215 9] 315.1608131655693]
Test Case: 198 | Input/Output: [[47.41429000058043 3.4579211587625287 11] 54.87418172685099]
Test Case: 199 | Input/Output: [[20.299995391679406 5.339364026903087 12] 34.78989700387417]
Test Case: 200 | Input/Output: [[62.817134707653366 44.95978916968966 16] 377.3312849691945]
Test Case: 201 | Input/Output: [[35.93646614962722 3.593859154629564 18] 43.92287233499388]
Test Case: 202 | Input/Output: [[33.143861763249745 29.345577442114436 10] 383.8409092130273]
Test Case: 203 | Input/Output: [[50.50344864063249 32.47399958181724 3] 170.63995250921573]
Test Case: 204 | Input/Output: [[99.6074292277464 5.533199686935852 9] 111.32472519613678]
Test Case: 205 | Input/Output: [[72.79508932151866 36.62000501226369 1] 109.41509433378236]
Test Case: 206 | Input/Output: [[75.35350048290577 59.375100920160754 11] 589.1855399104265]
Test Case: 207 | Input/Output: [[87.1735898726096 24.615637996736066 13] 155.77664067482618]
Test Case: 208 | Input/Output: [[98.74532662612384 49.53257592965623 16] 297.5146622373831]
Test Case: 209 | Input/Output: [[50.33804803936897 12.937388190445164 2] 79.53786426778282]
Test Case: 210 | Input/Output: [[93.08033829666064 48.95314764218878 12] 299.46626357577435]
Test Case: 211 | Input/Output: [[60.41097246535846 56.15503396130189 20] 1270.757978263452]
Test Case: 212 | Input/Output: [[87.8739477762079 30.61639122950571 17] 181.8487250777221]
Test Case: 213 | Input/Output: [[73.14167537331916 40.14183930935736 4] 228.3046896637532]
Test Case: 214 | Input/Output: [[42.42780641055841 11.700460015938898 6] 74.70653026456]
Test Case: 215 | Input/Output: [[70.98309613736092 40.87073487645948 14] 263.5541039258161]
Test Case: 216 | Input/Output: [[43.28011834695987 22.54467538283781 11] 137.28774708416978]
Test Case: 217 | Input/Output: [[76.82183029800477 34.22380440512502 4] 192.3730530945987]
Test Case: 218 | Input/Output: [[9.277936113696612 6.718487774405018 1] 15.99642388810163]
Test Case: 219 | Input/Output: [[97.2843395879818 96.97303299310688 7] 1346.8169504957073]
Test Case: 220 | Input/Output: [[9.417336900130074 1.64541677477389 9] 13.404880771524883]
Test Case: 221 | Input/Output: [[46.739824198274654 16.124333760149895 9] 95.9663329106289]
Test Case: 222 | Input/Output: [[64.49192179081714 11.119468287761016 20] 91.36405637797353]
Test Case: 223 | Input/Output: [[2.2486377818261483 1.3995510794348935 7] 9.311938402648922]
Test Case: 224 | Input/Output: [[47.91764399287312 5.3364069190258965 13] 59.92800650222026]
Test Case: 225 | Input/Output: [[77.57321274736967 61.388740069414986 4] 404.8272357635386]
Test Case: 226 | Input/Output: [[61.73679216136178 41.30749273185265 13] 309.7197475779015]
Test Case: 227 | Input/Output: [[81.33731342590411 15.635958338470854 11] 120.05148548695576]
Test Case: 228 | Input/Output: [[22.82645267197549 3.1395439835960075 6] 30.106686208472013]
Test Case: 229 | Input/Output: [[43.285837924975006 19.277393033478376 16] 112.7976168017314]
Test Case: 230 | Input/Output: [[34.70133282945933 19.79534055386356 3] 103.31812063066072]
Test Case: 231 | Input/Output: [[77.15032147626656 56.375767222722914 3] 302.394824674934]
Test Case: 232 | Input/Output: [[38.15457228374316 10.343324735757578 1] 48.49789701950073]
Test Case: 233 | Input/Output: [[28.321785372522083 25.9341626058884 9] 352.2620473380049]
Test Case: 234 | Input/Output: [[87.1046741388995 82.94494989094281 4] 633.0064222773412]
Test Case: 235 | Input/Output: [[53.81324736598676 11.84017252747952 9] 84.17347236760939]
Test Case: 236 | Input/Output: [[9.299542784351706 6.843017705937196 3] 36.76164247381545]
Test Case: 237 | Input/Output: [[97.12183476635172 35.93856616620812 20] 211.21902524812765]
Test Case: 238 | Input/Output: [[4.191742690052789 3.917875747046186 4] 29.395635684172763]
Test Case: 239 | Input/Output: [[96.2786337123856 43.598368344468994 1] 139.87700205685462]
Test Case: 240 | Input/Output: [[32.60574209168997 3.1357527932159543 12] 39.54456692686067]
Test Case: 241 | Input/Output: [[52.73313487341149 19.723458956392097 2] 99.55709987274838]
Test Case: 242 | Input/Output: [[13.102105730343723 10.38146865200717 17] 110.9298463834353]
Test Case: 243 | Input/Output: [[68.20480646826672 1.533628838359668 5] 71.3426194834992]
Test Case: 244 | Input/Output: [[14.764475361520258 2.7014589423985105 12] 21.37735268106609]
Test Case: 245 | Input/Output: [[36.0505618615993 8.304443835304482 12] 57.63050655172711]
Test Case: 246 | Input/Output: [[9.11864716922615 2.04382395483965 17] 14.387163154791468]
Test Case: 247 | Input/Output: [[31.81384864999633 25.50899292980867 17] 282.4770740433901]
Test Case: 248 | Input/Output: [[2.266267162475151 1.037524639624548 12] 6.092928443025941]
Test Case: 249 | Input/Output: [[41.75460952678309 19.48835587814757 19] 114.84530752135512]
Test Case: 250 | Input/Output: [[28.15852718924464 16.377003623146816 2] 70.4374018652912]
Test Case: 251 | Input/Output: [[55.5069181134985 9.375196100955424 9] 78.06788129671092]
Test Case: 252 | Input/Output: [[59.72675769089611 8.709589612497275 8] 80.1197017836987]
Test Case: 253 | Input/Output: [[52.66152456691916 33.5630220893101 10] 235.1234141806404]
Test Case: 254 | Input/Output: [[78.13884057615834 23.158194823970323 5] 143.63479838439991]
Test Case: 255 | Input/Output: [[15.739178720099376 4.134048152133984 5] 26.91888974851829]
Test Case: 256 | Input/Output: [[42.717164709125896 25.048614158542197 4] 144.46664432708857]
Test Case: 257 | Input/Output: [[86.73226158404356 33.96546497351226 12] 198.3870806710922]
Test Case: 258 | Input/Output: [[82.21413102282021 46.52042445471447 11] 295.9526880053754]
Test Case: 259 | Input/Output: [[5.293858367135572 2.1391658139487024 7] 12.451341871424589]
Test Case: 260 | Input/Output: [[28.648805176485883 19.67298042615916 14] 153.4326373035579]
Test Case: 261 | Input/Output: [[91.12495549127848 55.80853465966791 8] 371.6202266866257]
Test Case: 262 | Input/Output: [[94.13696256181936 60.43495462149113 6] 401.5250805275677]
Test Case: 263 | Input/Output: [[95.0398254194988 23.63549551616673 2] 148.18873826092914]
Test Case: 264 | Input/Output: [[36.04326074846562 15.640081268492686 9] 91.25147193901346]
Test Case: 265 | Input/Output: [[87.60758045467152 6.61357959525029 1] 94.2211600499218]
Test Case: 266 | Input/Output: [[69.40263929346051 38.74215471863249 17] 244.78287504751685]
Test Case: 267 | Input/Output: [[54.27926150029525 17.733806476447338 12] 106.95749615812214]
Test Case: 268 | Input/Output: [[22.55515043223737 14.597958153744782 9] 103.2143177823406]
Test Case: 269 | Input/Output: [[16.873717894138064 9.428213056499972 5] 56.36159470008249]
Test Case: 270 | Input/Output: [[47.41359705676035 26.880902921056183 11] 171.22534113728398]
Test Case: 271 | Input/Output: [[62.67909612872251 14.916609294949076 11] 101.82945481595674]
Test Case: 272 | Input/Output: [[15.094982567813975 4.720364166630388 15] 28.831161880895948]
Test Case: 273 | Input/Output: [[68.3830460775985 30.48720176770409 15] 178.41037615293462]
Test Case: 274 | Input/Output: [[25.2773040928604 13.994856508736522 19] 87.98456402370343]
Test Case: 275 | Input/Output: [[38.93849740041767 24.42228212424339 10] 168.35873593884713]
Test Case: 276 | Input/Output: [[84.51245496812115 49.58956422210019 15] 324.41405924986344]
Test Case: 277 | Input/Output: [[77.41863372067371 76.27042078198058 17] 2324.555234783286]
Test Case: 278 | Input/Output: [[4.83175730161024 3.077778365357567 4] 18.201478251482225]
Test Case: 279 | Input/Output: [[35.051026553417955 31.38882896717037 1] 66.43985552058832]
Test Case: 280 | Input/Output: [[48.534043232189305 39.672878316799256 7] 365.31180413753617]
Test Case: 281 | Input/Output: [[31.277296234729437 9.778546449710957 1] 41.05584268444039]
Test Case: 282 | Input/Output: [[15.842194496745543 5.041527368510335 1] 20.88372186525588]
Test Case: 283 | Input/Output: [[55.12329883948007 29.57750793152763 9] 182.0955517415633]
Test Case: 284 | Input/Output: [[42.44103398766681 15.096324628390509 15] 89.30226703876278]
Test Case: 285 | Input/Output: [[61.919938887462 4.163793192139574 7] 70.84788256286949]
Test Case: 286 | Input/Output: [[9.389128421497093 4.168293508535022 13] 24.380978276934457]
Test Case: 287 | Input/Output: [[15.684016811738797 8.770968510072013 13] 55.45335531623757]
Test Case: 288 | Input/Output: [[56.61087699416846 18.61804544235606 4] 110.78282609458176]
Test Case: 289 | Input/Output: [[46.32059614855339 8.54018796309311 9] 67.26194147616687]
Test Case: 290 | Input/Output: [[9.926393072406698 1.7268000708638374 17] 14.107306994853136]
Test Case: 291 | Input/Output: [[58.1582551219086 25.048857852949343 11] 146.14348363132723]
Test Case: 292 | Input/Output: [[66.91616934853268 52.59530880067075 11] 518.9381964219382]
Test Case: 293 | Input/Output: [[86.9798410561671 75.50406188225398 9] 886.8581871912629]
Test Case: 294 | Input/Output: [[77.10970328039676 75.8002290339149 4] 596.2351066085585]
Test Case: 295 | Input/Output: [[80.60784379399976 15.363189213938508 11] 118.56937532193425]
Test Case: 296 | Input/Output: [[44.42571428778441 13.311646903490251 18] 82.43935061469749]
Test Case: 297 | Input/Output: [[27.477484386325514 21.00606247058116 8] 181.8431559574967]
Test Case: 298 | Input/Output: [[59.25707422081669 2.234139289453441 9] 63.90041843693725]
Test Case: 299 | Input/Output: [[16.349485764771735 14.52302650696335 8] 169.2293157231]
Test Case: 300 | Input/Output: [[55.56813083820949 43.74888739238127 14] 450.5237807612687]
Test Case: 301 | Input/Output: [[75.96026465172473 13.821812203792463 18] 109.75281907481497]
Test Case: 302 | Input/Output: [[24.238497935001853 16.540763149730843 17] 128.2112089827672]
Test Case: 303 | Input/Output: [[11.42459076984571 4.257003028846661 10] 24.99398025490531]
Test Case: 304 | Input/Output: [[14.744403425013214 3.728052374007032 7] 24.722101359578797]
Test Case: 305 | Input/Output: [[76.17085263364882 29.615481116268764 12] 173.0786125365753]
Test Case: 306 | Input/Output: [[8.378080486793037 6.14916290423439 4] 38.75916656344635]
Test Case: 307 | Input/Output: [[10.336378164929538 4.608427323278004 6] 26.756840876539364]
Test Case: 308 | Input/Output: [[14.343313263621498 8.77908675755005 13] 59.50344772823016]
Test Case: 309 | Input/Output: [[92.05350185302004 91.11700557062146 3] 543.9400882785717]
Test Case: 310 | Input/Output: [[97.79139229267686 58.9688733981882 16] 394.7482035620234]
Test Case: 311 | Input/Output: [[16.969641231085163 5.378120557834797 4] 32.38639434935485]
Test Case: 312 | Input/Output: [[1.1648993565404575 1.125003610061143 17] 29.888256540099423]
Test Case: 313 | Input/Output: [[50.121819691711245 17.143992425402164 3] 98.14366496731832]
Test Case: 314 | Input/Output: [[24.334775201974782 3.69713995929191 1] 28.031915161266696]
Test Case: 315 | Input/Output: [[33.043372217727175 8.238636178914295 10] 54.99334874112619]
Test Case: 316 | Input/Output: [[45.2071595125776 22.24580045335041 1] 67.45295996592802]
Test Case: 317 | Input/Output: [[40.83951282871544 17.54431257983595 13] 102.35269510573777]
Test Case: 318 | Input/Output: [[43.5905045562472 14.049833453071892 13] 85.05461480461643]
Test Case: 319 | Input/Output: [[89.79901818828053 40.641504948365096 18] 238.283483373024]
Test Case: 320 | Input/Output: [[1.4785789640396754 1.0501277284637025 1] 2.528706692503378]
Test Case: 321 | Input/Output: [[76.78852798880833 34.11324219251975 17] 199.55285429267025]
Test Case: 322 | Input/Output: [[65.57255441777045 57.45069472215943 15] 856.5759220176806]
Test Case: 323 | Input/Output: [[19.43709452535208 4.180725603519445 10] 30.089840379023457]
Test Case: 324 | Input/Output: [[16.066749834067092 4.922574922322356 8] 30.25832315670123]
Test Case: 325 | Input/Output: [[80.99522090557254 45.4956148743305 17] 288.58313605552024]
Test Case: 326 | Input/Output: [[75.92530746663803 58.92926604895022 11] 565.3339424606509]
Test Case: 327 | Input/Output: [[50.26394610126656 3.336401530346893 1] 53.60034763161345]
Test Case: 328 | Input/Output: [[14.549101121282828 8.428568335644934 14] 54.59395755163092]
Test Case: 329 | Input/Output: [[3.807739491338196 2.126645713263448 2] 9.248775460795802]
Test Case: 330 | Input/Output: [[89.47010685980275 79.35685493376951 20] 1357.9507470617152]
Test Case: 331 | Input/Output: [[8.227159656955298 3.471366241524399 3] 18.71732591568645]
Test Case: 332 | Input/Output: [[83.5148382726253 73.29988871795071 11] 976.8310906595424]
Test Case: 333 | Input/Output: [[77.9991769726797 49.67265389957982 9] 345.4971182609983]
Test Case: 334 | Input/Output: [[35.770786677945765 19.81649386805729 15] 124.61337714431984]
Test Case: 335 | Input/Output: [[51.69280253005444 11.664336374850606 12] 81.8194734472181]
Test Case: 336 | Input/Output: [[88.37925576020322 23.872798012847465 11] 153.79464037948068]
Test Case: 337 | Input/Output: [[15.69700278993694 6.400783624962582 20] 37.31291257824667]
Test Case: 338 | Input/Output: [[59.64518653489535 31.481546819105382 6] 188.816255247458]
Test Case: 339 | Input/Output: [[30.98347012708133 12.404472938620568 3] 67.71313727908657]
Test Case: 340 | Input/Output: [[40.70749408389636 30.45600024002822 18] 281.0575283911465]
Test Case: 341 | Input/Output: [[55.094495685891445 29.6935279722979 12] 183.7940770200917]
Test Case: 342 | Input/Output: [[21.53824265163351 9.176636132711607 2] 43.80133485205877]
Test Case: 343 | Input/Output: [[9.12097950873622 6.392107769914544 12] 51.123179276487]
Test Case: 344 | Input/Output: [[78.48996045585312 2.504662316780686 15] 83.664404740858]
Test Case: 345 | Input/Output: [[11.633360316761452 6.5054012921678295 4] 37.12598123855453]
Test Case: 346 | Input/Output: [[79.0580417765149 71.0215477336787 9] 913.7923747384756]
Test Case: 347 | Input/Output: [[72.68070761650013 18.65555219815816 6] 122.84065698414244]
Test Case: 348 | Input/Output: [[69.69891131439078 31.37241516290115 2] 146.56488658849216]
Test Case: 349 | Input/Output: [[69.27536685043678 65.6252292562401 6] 709.9849240074369]
Test Case: 350 | Input/Output: [[92.22419532084264 11.688618173813312 15] 118.99431198743255]
Test Case: 351 | Input/Output: [[59.2200203279692 30.321942451273426 5] 177.03827520132575]
Test Case: 352 | Input/Output: [[59.84544361031273 3.443406350594092 7] 67.1527036407822]
Test Case: 353 | Input/Output: [[24.18029050799532 17.656999408186003 14] 153.18011708456694]
Test Case: 354 | Input/Output: [[67.00011809602901 31.16856772213496 11] 183.521532334776]
Test Case: 355 | Input/Output: [[65.44086893676032 10.518195774085628 4] 90.44552136052354]
Test Case: 356 | Input/Output: [[36.80971224732176 13.8021595460965 13] 80.97354321383514]
Test Case: 357 | Input/Output: [[89.71902223291515 85.12436590149098 19] 2156.6629963512387]
Test Case: 358 | Input/Output: [[9.29014582450149 1.6492996062233805 11] 13.300757494521148]
Test Case: 359 | Input/Output: [[14.75924689094902 5.164393759545085 12] 30.647362548349346]
Test Case: 360 | Input/Output: [[43.98856629122284 39.41763977373183 10] 534.7215138897861]
Test Case: 361 | Input/Output: [[40.43032773595812 36.07642942558198 10] 483.09400640944847]
Test Case: 362 | Input/Output: [[33.0100322078967 15.540650436650616 17] 91.74080808474731]
Test Case: 363 | Input/Output: [[38.63282459027415 3.7682463084388096 18] 46.98387918499409]
Test Case: 364 | Input/Output: [[96.0964893801978 42.41983853208114 13] 247.97767844335291]
Test Case: 365 | Input/Output: [[87.21920669438235 25.432981321036745 11] 159.02285212683017]
Test Case: 366 | Input/Output: [[68.76898840324586 32.80832460437485 9] 194.0015761337932]
Test Case: 367 | Input/Output: [[18.35292398330456 10.46716780899002 13] 67.02916733328102]
Test Case: 368 | Input/Output: [[15.537164442367413 8.934842713477995 14] 57.56477137822351]
Test Case: 369 | Input/Output: [[79.11541294747782 15.012094416302498 20] 116.17084387816034]
Test Case: 370 | Input/Output: [[60.367536389994726 24.582412147674223 18] 143.30587593175528]
Test Case: 371 | Input/Output: [[96.35917364995434 3.7193567610010514 1] 100.0785304109554]
Test Case: 372 | Input/Output: [[48.82204959840176 35.19530593974988 17] 299.8639132316098]
Test Case: 373 | Input/Output: [[37.57660674569768 6.185230542929968 5] 52.37816381515096]
Test Case: 374 | Input/Output: [[36.39449430479375 1.8877386814904376 15] 40.37651426497965]
Test Case: 375 | Input/Output: [[21.25923841328061 19.56345391085147 12] 323.0394897306179]
Test Case: 376 | Input/Output: [[60.81547086249753 17.263199566279912 2] 100.24223574511062]
Test Case: 377 | Input/Output: [[58.98347748348269 14.79800420147878 16] 98.4913821821771]
Test Case: 378 | Input/Output: [[69.8690422031181 40.05985374092492 11] 257.0925276262088]
Test Case: 379 | Input/Output: [[11.638773023012352 4.841397771521409 13] 28.21777790504184]
Test Case: 380 | Input/Output: [[34.879050238441344 12.952954985712784 2] 65.59526999181871]
Test Case: 381 | Input/Output: [[11.59232267081514 10.77701403873181 20] 244.08356404386737]
Test Case: 382 | Input/Output: [[47.39986034620442 10.81409388631673 3] 74.52531550838522]
Test Case: 383 | Input/Output: [[19.29070760381552 17.308309361778015 6] 170.33633240527706]
Test Case: 384 | Input/Output: [[80.42471018380826 67.48689851428813 1] 147.9116086980964]
Test Case: 385 | Input/Output: [[46.38568992647999 20.21770597760857 17] 118.06191052705204]
Test Case: 386 | Input/Output: [[77.51772856745147 5.48643854636313 2] 88.87891694479447]
Test Case: 387 | Input/Output: [[1.6255239179442462 1.3181788855505252 20] 15.333573534046971]
Test Case: 388 | Input/Output: [[1.1151145110556595 1.0726829458984646 13] 22.77337806307679]
Test Case: 389 | Input/Output: [[39.21760455855762 11.264541415910529 3] 69.147103161666]
Test Case: 390 | Input/Output: [[98.63415335788746 70.5369141848751 20] 593.14090318361]
Test Case: 391 | Input/Output: [[76.03567083070853 43.55877616548993 9] 278.13663843113727]
Test Case: 392 | Input/Output: [[58.01889396208426 3.780710173014869 13] 66.10738837641631]
Test Case: 393 | Input/Output: [[61.80104629729909 18.78832876798893 9] 115.78894456678934]
Test Case: 394 | Input/Output: [[6.014403185542044 4.459803797444971 1] 10.474206982987017]
Test Case: 395 | Input/Output: [[93.88863677298684 51.391871230761936 9] 319.5542539022028]
Test Case: 396 | Input/Output: [[24.125322760017223 10.390648438413104 2] 49.381816841427]
Test Case: 397 | Input/Output: [[89.94602660516671 18.640473163666847 1] 108.58649976883356]
Test Case: 398 | Input/Output: [[67.74974919717839 13.782447681920203 14] 102.35430942600932]
Test Case: 399 | Input/Output: [[33.785308862338184 11.467287536483694 2] 60.612069213219385]
Test Case: 400 | Input/Output: [[9.23692121454514 6.291393708154407 18] 48.64699588683706]
Test Case: 401 | Input/Output: [[19.369733282941027 3.554579357392869 1] 22.92431264033389]
Test Case: 402 | Input/Output: [[79.31569068090025 64.95169939517814 6] 556.3843367531491]
Test Case: 403 | Input/Output: [[36.93374133921833 29.171936438961307 20] 311.74810224262114]
Test Case: 404 | Input/Output: [[60.4466908712731 20.38676260873298 4] 120.39195381338536]
Test Case: 405 | Input/Output: [[9.967312278231203 1.0967267703846646 12] 12.431956403557487]
Test Case: 406 | Input/Output: [[51.80155468365321 16.647080084954204 8] 100.85038656168052]
Test Case: 407 | Input/Output: [[5.016827415024433 3.254493404035628 19] 23.539604084673115]
Test Case: 408 | Input/Output: [[46.453264134511606 5.267169223992362 12] 58.334808276539576]
Test Case: 409 | Input/Output: [[42.73042317767323 9.250250295436857 11] 66.34243116443972]
Test Case: 410 | Input/Output: [[53.59246602654048 11.605083576075131 3] 82.37281045984226]
Test Case: 411 | Input/Output: [[85.83438322730736 9.78950909679608 4] 107.91561116403008]
Test Case: 412 | Input/Output: [[3.0796497527832463 2.3432354516031437 2] 9.54903520631574]
Test Case: 413 | Input/Output: [[17.03669412831487 11.284085568066011 12] 83.27582595699536]
Test Case: 414 | Input/Output: [[61.57482022423488 4.320147391839349 7] 70.86706724481184]
Test Case: 415 | Input/Output: [[47.943141991810194 3.5115511993893938 2] 55.2234447273767]
Test Case: 416 | Input/Output: [[5.829098045293418 4.825742472161009 20] 60.484768072826114]
Test Case: 417 | Input/Output: [[28.125796556591546 27.84562170224368 5] 274.3367708920353]
Test Case: 418 | Input/Output: [[13.321970714138391 9.523181345502373 19] 79.97956995261119]
Test Case: 419 | Input/Output: [[30.99392508947446 29.715172285304696 2] 118.91344872277216]
Test Case: 420 | Input/Output: [[14.502252753413815 3.1729145010969555 10] 22.62530017540858]
Test Case: 421 | Input/Output: [[76.32868495948479 29.000121487842414 16] 169.86798453726047]
Test Case: 422 | Input/Output: [[93.40802447727414 4.724199253684231 1] 98.13222373095836]
Test Case: 423 | Input/Output: [[59.82780213647871 49.13171020995509 7] 455.94058402175466]
Test Case: 424 | Input/Output: [[4.605195550230475 3.824843474772315 6] 33.41952205439165]
Test Case: 425 | Input/Output: [[11.975317790117918 8.175515778521302 10] 62.10994183951401]
Test Case: 426 | Input/Output: [[83.8065658395165 74.47482887811496 9] 930.2158093601644]
Test Case: 427 | Input/Output: [[9.167022203188864 3.0353993277699263 1] 12.202421530958793]
Test Case: 428 | Input/Output: [[95.19828219980757 51.02128887453191 6] 307.6253307862577]
Test Case: 429 | Input/Output: [[24.431765802840975 1.985037919620392 3] 28.737507095208656]
Test Case: 430 | Input/Output: [[39.56797467974874 5.4064906480336665 14] 52.0922482330425]
Test Case: 431 | Input/Output: [[85.26749664237056 39.57206337588356 1] 124.83956001825412]
Test Case: 432 | Input/Output: [[79.87655094684521 72.03268536824261 12] 1099.4355457995969]
Test Case: 433 | Input/Output: [[95.43917022132575 62.1840094149486 1] 157.62317963627436]
Test Case: 434 | Input/Output: [[82.93382542686363 28.77318750181669 15] 171.0520621868812]
Test Case: 435 | Input/Output: [[85.29470690740453 3.2490267808265694 2] 91.91652166625904]
Test Case: 436 | Input/Output: [[34.91466815306798 5.775441732561548 1] 40.690109885629525]
Test Case: 437 | Input/Output: [[71.17020463281764 40.973710928032055 16] 264.27383526335063]
Test Case: 438 | Input/Output: [[13.677222216651405 8.184750762649058 20] 54.43827699208631]
Test Case: 439 | Input/Output: [[84.27300765238357 40.07558499762503 9] 236.80558472039823]
Test Case: 440 | Input/Output: [[68.38682853142465 25.07015372333685 11] 147.5441940084473]
Test Case: 441 | Input/Output: [[32.99884989126177 3.190582834410398 13] 40.06303538584302]
Test Case: 442 | Input/Output: [[43.83149502811363 33.351049259960256 2] 135.91015118075805]
Test Case: 443 | Input/Output: [[25.14866361071096 23.52075442531561 11] 391.752322772809]
Test Case: 444 | Input/Output: [[24.45548222946199 15.780585283314515 2] 66.19951788401855]
Test Case: 445 | Input/Output: [[82.34309363899982 30.88203796160664 20] 181.172099014127]
Test Case: 446 | Input/Output: [[21.904405216886666 8.264346706261588 10] 48.44480238773437]
Test Case: 447 | Input/Output: [[43.03368241287116 27.165792100534752 7] 182.7754523687414]
Test Case: 448 | Input/Output: [[39.82277298054139 23.876577167274075 4] 138.520171764863]
Test Case: 449 | Input/Output: [[85.23022316902892 53.96011821194936 14] 378.74846734504325]
Test Case: 450 | Input/Output: [[56.85149406577919 21.45420657831477 2] 107.85614061923395]
Test Case: 451 | Input/Output: [[82.56072233428176 65.58584617875088 15] 697.7262953607602]
Test Case: 452 | Input/Output: [[31.5909275466919 17.82998052248232 5] 106.9574824164986]
Test Case: 453 | Input/Output: [[91.38197937039072 38.33595841220824 5] 220.56050941103533]
Test Case: 454 | Input/Output: [[76.80484255219291 22.65097266146334 2] 128.78692086774575]
Test Case: 455 | Input/Output: [[40.71443170633179 5.677437464737731 2] 52.86099880316222]
Test Case: 456 | Input/Output: [[65.24190336644882 15.147232068057985 2] 99.05310489621684]
Test Case: 457 | Input/Output: [[23.50885674976588 6.442424062551655 14] 41.25761812423382]
Test Case: 458 | Input/Output: [[2.629666044768079 1.590602810521584 14] 10.671303893586506]
Test Case: 459 | Input/Output: [[31.020090895050835 24.320037435138207 8] 219.64107841220903]
Test Case: 460 | Input/Output: [[25.45508518465193 7.002369253573757 17] 44.77429050048482]
Test Case: 461 | Input/Output: [[91.00380823691924 54.478998255524445 1] 145.48280649244367]
Test Case: 462 | Input/Output: [[36.58256498404316 3.4114627321097943 20] 44.10719022419876]
Test Case: 463 | Input/Output: [[66.89785240312473 5.239376172598675 18] 78.26702776627258]
Test Case: 464 | Input/Output: [[77.37635621460011 13.094546763516677 5] 108.88519156636016]
Test Case: 465 | Input/Output: [[76.54432178507889 37.081964540858 15] 220.3943777141986]
Test Case: 466 | Input/Output: [[88.26862208388818 77.09136067705076 8] 863.7989205297171]
Test Case: 467 | Input/Output: [[70.56366251291448 34.373677119086686 15] 204.6038494398244]
Test Case: 468 | Input/Output: [[59.57493543683937 11.165343719561337 17] 87.05604409984367]
Test Case: 469 | Input/Output: [[30.456910083462045 30.1579070471083 1] 60.61481713057034]
Test Case: 470 | Input/Output: [[89.2948419664787 46.93565816913959 5] 275.65709684071794]
Test Case: 471 | Input/Output: [[49.12866268328578 42.03482212934016 13] 548.2105097965547]
Test Case: 472 | Input/Output: [[60.352521791948426 32.77540946103501 19] 203.80863881433584]
Test Case: 473 | Input/Output: [[12.998919667047726 1.9908707191644184 19] 17.7007825470327]
Test Case: 474 | Input/Output: [[8.55700912755605 5.203616354120787 4] 30.31177798192316]
Test Case: 475 | Input/Output: [[73.74477905648835 38.62031530481069 19] 235.91253123536023]
Test Case: 476 | Input/Output: [[1.2857327053632948 1.209620514293032 7] 14.653951735117271]
Test Case: 477 | Input/Output: [[66.51948248715512 61.306643880878816 10] 909.9092494485772]
Test Case: 478 | Input/Output: [[92.11605484400698 49.97776966679769 19] 310.6202584066619]
Test Case: 479 | Input/Output: [[88.70944587691001 31.223024120211413 15] 185.0722454738276]
Test Case: 480 | Input/Output: [[46.44600099705937 23.19469139371372 13] 139.09508952068325]
Test Case: 481 | Input/Output: [[16.81301730451834 11.020021735871902 1] 27.83303904039024]
Test Case: 482 | Input/Output: [[45.621754267975554 4.738640733368516 1] 50.36039500134408]
Test Case: 483 | Input/Output: [[19.61147809548572 13.69896623461669 1] 33.31044433010241]
Test Case: 484 | Input/Output: [[63.00370193795728 19.824807919338813 5] 120.48490985427556]
Test Case: 485 | Input/Output: [[36.5972898472457 9.611822605693844 11] 62.66808638084311]
Test Case: 486 | Input/Output: [[96.0036246546322 11.327706540305291 8] 121.68981077547896]
Test Case: 487 | Input/Output: [[75.62601776993694 14.153473802229591 7] 110.449484909521]
Test Case: 488 | Input/Output: [[22.61948797840371 14.171164549017943 4] 83.32763892296286]
Test Case: 489 | Input/Output: [[22.036406661636587 1.8624315576464952 7] 26.105142815462653]
Test Case: 490 | Input/Output: [[77.87969235172395 13.706161302221348 16] 111.14672939847432]
Test Case: 491 | Input/Output: [[88.07984540564975 85.7270295876414 6] 975.6307530576532]
Test Case: 492 | Input/Output: [[8.217272329489763 3.562548900350242 3] 19.10103144415787]
Test Case: 493 | Input/Output: [[85.25135160414747 46.61146045386467 14] 290.86740666738905]
Test Case: 494 | Input/Output: [[62.73684390646964 19.45683964063329 1] 82.19368354710292]
Test Case: 495 | Input/Output: [[53.49028604186 13.279316453026423 12] 88.81966709506499]
Test Case: 496 | Input/Output: [[74.81008112431496 30.76657626070275 12] 179.32299689759827]
Test Case: 497 | Input/Output: [[14.136356660636816 3.893033018299604 5] 24.84214902670449]
Test Case: 498 | Input/Output: [[23.01978414315508 14.004080483198727 20] 94.52843226942078]
Test Case: 499 | Input/Output: [[96.65342471186057 63.89199435675696 6] 434.12332990662287]
Test Case: 500 | Input/Output: [[3.5375367418240344 3.047586175613793 20] 45.13475118502007]
Test Case: 501 | Input/Output: [[52.31757514231656 41.22673717128686 17] 433.5796101386285]
Test Case: 502 | Input/Output: [[47.504449607827226 22.74065667913697 16] 134.7503487325075]
Test Case: 503 | Input/Output: [[65.1035999084055 19.905442126790213 2] 111.00057808486228]
Test Case: 504 | Input/Output: [[23.681435537654103 3.415817148772091 10] 31.66455756536293]
Test Case: 505 | Input/Output: [[33.41028070932162 32.85626805774339 5] 320.5250775201994]
Test Case: 506 | Input/Output: [[14.03518351289002 7.6534729969426225 2] 33.515615827544394]
Test Case: 507 | Input/Output: [[49.3369571553833 37.35198083755119 7] 305.98775555475714]
Test Case: 508 | Input/Output: [[1.8423799698499743 1.8008426124326142 4] 14.087426122394216]
Test Case: 509 | Input/Output: [[39.90953160813583 30.236634109744767 2] 123.29096262085424]
Test Case: 510 | Input/Output: [[26.461889361580432 13.295319690880708 20] 79.90310424596629]
Test Case: 511 | Input/Output: [[60.7069846122973 54.97395992027446 1] 115.68094453257176]
Test Case: 512 | Input/Output: [[83.57235495268681 7.6347654370562115 14] 100.37708445169464]
Test Case: 513 | Input/Output: [[45.45387718523835 15.087075114550114 10] 90.6179170195763]
Test Case: 514 | Input/Output: [[82.75695352500807 66.0311101911205 20] 728.1295751502976]
Test Case: 515 | Input/Output: [[61.6916146850237 55.18675815993252 4] 398.6312582539077]
Test Case: 516 | Input/Output: [[50.163170650237845 35.66451084215672 13] 293.429121400591]
Test Case: 517 | Input/Output: [[63.06078605301483 20.09971039810576 20] 122.06785250743384]
Test Case: 518 | Input/Output: [[65.33765101092055 17.04303290689167 11] 111.45254990991738]
Test Case: 519 | Input/Output: [[60.01601707851656 30.64065853801841 19] 185.21773479482005]
Test Case: 520 | Input/Output: [[31.599565333992437 19.43733153705081 20] 132.59462725173245]
Test Case: 521 | Input/Output: [[8.549884221003481 2.04346293144452 3] 13.730334044003987]
Test Case: 522 | Input/Output: [[54.914082284420495 46.901095421752245 18] 656.9505477386841]
Test Case: 523 | Input/Output: [[68.63102172540175 26.680465611214043 14] 155.92911381215973]
Test Case: 524 | Input/Output: [[19.649471276838405 8.02531281154225 5] 46.24978571383991]
Test Case: 525 | Input/Output: [[89.63901976399106 17.804806553646543 17] 134.0748209367935]
Test Case: 526 | Input/Output: [[71.50887889872183 1.94690464568753 11] 75.51166835618307]
Test Case: 527 | Input/Output: [[7.624382202388578 5.256864826705991 5] 35.019243652517105]
Test Case: 528 | Input/Output: [[74.43298186009494 51.875766457521216 19] 416.34901286777057]
Test Case: 529 | Input/Output: [[50.19839630530111 30.849459785515144 2] 130.8558732821349]
Test Case: 530 | Input/Output: [[69.77512438760391 61.171517100178576 11] 812.2575821453453]
Test Case: 531 | Input/Output: [[36.63324566923632 26.07794268832908 9] 207.42834212986344]
Test Case: 532 | Input/Output: [[75.02263627822936 41.204652530955215 1] 116.22728880918456]
Test Case: 533 | Input/Output: [[43.92640769993197 23.453157802840177 11] 144.4210050941266]
Test Case: 534 | Input/Output: [[24.889927129257497 4.122385594246444 15] 34.77129667350455]
Test Case: 535 | Input/Output: [[31.064701050019377 30.09820273712361 2] 120.42288096096638]
Test Case: 536 | Input/Output: [[10.943409592058789 6.221372936070278 3] 32.47063593127611]
Test Case: 537 | Input/Output: [[23.802488584928263 14.287405969947716 19] 95.278055692659]
Test Case: 538 | Input/Output: [[85.2258958496561 84.7964710517563 5] 841.5880153128379]
Test Case: 539 | Input/Output: [[81.5187797278756 69.44445309345498 19] 970.744054175214]
Test Case: 540 | Input/Output: [[1.3466987052193136 1.319198940894447 13] 30.7127832878294]
Test Case: 541 | Input/Output: [[54.12158093438694 30.34507047352649 1] 84.46665140791343]
Test Case: 542 | Input/Output: [[53.00324069219011 41.73938139912279 10] 404.9330105793407]
Test Case: 543 | Input/Output: [[90.52603966702324 64.09265872953631 14] 525.3096865754629]
Test Case: 544 | Input/Output: [[48.38164986942599 19.50759594202342 14] 113.75555070615758]
Test Case: 545 | Input/Output: [[39.17131164772925 22.163093053208407 13] 141.1721040735122]
Test Case: 546 | Input/Output: [[66.66200737243719 39.96338220460994 7] 258.81716295484296]
Test Case: 547 | Input/Output: [[26.18882860670939 17.8680646383831 19] 138.5678527342352]
Test Case: 548 | Input/Output: [[8.369177943778734 2.8763522663939343 9] 17.133175509973533]
Test Case: 549 | Input/Output: [[51.935714390617264 28.38581410086032 19] 177.13504588073005]
Test Case: 550 | Input/Output: [[79.42451181020789 68.02000009397042 11] 840.2067801999169]
Test Case: 551 | Input/Output: [[33.72953567524967 8.112086128228562 16] 55.091295191496734]
Test Case: 552 | Input/Output: [[99.28718359768386 94.8149263837376 9] 1463.1120141982883]
Test Case: 553 | Input/Output: [[67.97720226226053 67.30339374671144 20] 2465.3681188338537]
Test Case: 554 | Input/Output: [[72.79139546076121 28.30139069155048 1] 101.09278615231167]
Test Case: 555 | Input/Output: [[86.13899036452914 26.748384732465404 10] 163.72830898746972]
Test Case: 556 | Input/Output: [[79.77320980650406 48.29248843125016 2] 205.5931190525979]
Test Case: 557 | Input/Output: [[20.16796466983836 2.091577922723517 12] 24.835144035206664]
Test Case: 558 | Input/Output: [[27.205031521953146 16.740722889837485 17] 114.22013331676148]
Test Case: 559 | Input/Output: [[62.05063338514421 2.23846065269225 13] 66.69510272689342]
Test Case: 560 | Input/Output: [[30.13892590857318 10.426141599813048 2] 54.59798745373798]
Test Case: 561 | Input/Output: [[84.65758102224461 62.613828199604114 10] 537.8821090950895]
Test Case: 562 | Input/Output: [[97.36843622450448 13.607219965599176 2] 126.48448256187883]
Test Case: 563 | Input/Output: [[27.72384327705832 1.0976517873296143 15] 30.009647169427637]
Test Case: 564 | Input/Output: [[27.20795777700567 16.741321699440135 6] 108.04572593078151]
Test Case: 565 | Input/Output: [[47.35930053405828 16.765231405410574 7] 99.19495415841526]
Test Case: 566 | Input/Output: [[3.062939815145277 2.3217704268718045 8] 19.827073192743534]
Test Case: 567 | Input/Output: [[87.71733219005357 28.442568326669576 18] 171.89839143080175]
Test Case: 568 | Input/Output: [[90.30510907470948 70.56987704098181 15] 717.9162904545069]
Test Case: 569 | Input/Output: [[46.91542460494171 11.671020421963508 6] 77.96858995158229]
Test Case: 570 | Input/Output: [[71.60839626949911 33.4796512762739 17] 197.36207225491964]
Test Case: 571 | Input/Output: [[86.84224818134521 59.406444761114535 15] 461.3632716354768]
Test Case: 572 | Input/Output: [[29.259730308697407 10.894877489176846 9] 63.9673703134478]
Test Case: 573 | Input/Output: [[44.65985885468625 4.851418343242219 3] 55.473968084955125]
Test Case: 574 | Input/Output: [[76.13205540162832 35.91952975014684 14] 212.1350596283909]
Test Case: 575 | Input/Output: [[10.28003887602046 5.276457470759351 11] 31.94056446071268]
Test Case: 576 | Input/Output: [[6.709916677985955 6.021316810788707 7] 65.92137071158112]
Test Case: 577 | Input/Output: [[85.08226600813124 31.622800916899564 8] 185.6718085277787]
Test Case: 578 | Input/Output: [[91.59322389628704 8.811730577857867 6] 111.09253789055728]
Test Case: 579 | Input/Output: [[59.66413020189777 45.91285829996405 18] 453.9770179946631]
Test Case: 580 | Input/Output: [[96.79155657706244 11.56657845055073 3] 122.85429598387732]
Test Case: 581 | Input/Output: [[95.9028284256338 57.342284516015525 7] 370.7184358325776]
Test Case: 582 | Input/Output: [[42.40090962687376 1.746116442602638 12] 46.04313332632867]
Test Case: 583 | Input/Output: [[61.17346051171377 15.514633220922528 18] 102.74631043843118]
Test Case: 584 | Input/Output: [[77.6563482820638 69.17898212962231 20] 1211.8181396568602]
Test Case: 585 | Input/Output: [[54.9052726510061 46.991874567940656 6] 429.104491296535]
Test Case: 586 | Input/Output: [[53.73712203663744 17.75502926667753 19] 106.76928942179929]
Test Case: 587 | Input/Output: [[96.88353980400726 28.808294327932757 10] 178.8815283020145]
Test Case: 588 | Input/Output: [[88.03398744694343 80.29065806589257 17] 1513.6300265570308]
Test Case: 589 | Input/Output: [[22.50707561749624 18.58797211010673 2] 75.03431226275382]
Test Case: 590 | Input/Output: [[6.513456864730743 4.467080966176708 3] 23.675984044117968]
Test Case: 591 | Input/Output: [[29.424897106690164 2.092977836744096 3] 33.91918687547021]
Test Case: 592 | Input/Output: [[71.03834717831968 14.110293004946248 15] 106.25374009976598]
Test Case: 593 | Input/Output: [[39.3926645934512 27.0065549924865 2] 111.92074545256266]
Test Case: 594 | Input/Output: [[76.31541692157668 74.50038105456473 13] 1703.8347746963914]
Test Case: 595 | Input/Output: [[12.356813597361642 3.95840190630148 17] 24.005024363193726]
Test Case: 596 | Input/Output: [[58.78549060601458 10.66594678201879 1] 69.45143738803337]
Test Case: 597 | Input/Output: [[2.0064007426131862 1.998310262400032 18] 69.66645413985206]
Test Case: 598 | Input/Output: [[39.17162829053829 5.843633406477442 11] 52.90810626256286]
Test Case: 599 | Input/Output: [[83.07679087579673 59.98875642679213 8] 476.7377886039554]
Test Case: 600 | Input/Output: [[63.95161423029722 28.826934021421625 16] 168.92170253799972]
Test Case: 601 | Input/Output: [[75.03055344363064 51.71791504238581 5] 344.45842630535464]
Test Case: 602 | Input/Output: [[42.0352352324838 11.294130220779044 1] 53.329365453262845]
Test Case: 603 | Input/Output: [[50.0634497403564 28.815850816821072 2] 124.28116946142612]
Test Case: 604 | Input/Output: [[21.196482620537687 17.867273353190388 9] 195.2743511094588]
Test Case: 605 | Input/Output: [[96.07560810571798 60.98617009018283 8] 418.7025734521374]
Test Case: 606 | Input/Output: [[17.27541528748522 10.672945545380983 4] 62.47338172973333]
Test Case: 607 | Input/Output: [[4.71807763792831 1.343824315836028 10] 8.476074828786848]
Test Case: 608 | Input/Output: [[90.25935041201303 60.30517971307548 14] 452.08564307384535]
Test Case: 609 | Input/Output: [[77.56235327751929 20.04741381202104 10] 131.63246378671127]
Test Case: 610 | Input/Output: [[32.67321877437997 28.061605620154467 7] 281.9781784668064]
Test Case: 611 | Input/Output: [[91.04542299746234 17.05531487358758 7] 133.0177502366009]
Test Case: 612 | Input/Output: [[3.781754865756573 1.2360876961272962 8] 7.453361736350813]
Test Case: 613 | Input/Output: [[33.962176711082094 23.633581593345728 10] 184.34168571843827]
Test Case: 614 | Input/Output: [[99.64371783161928 84.68664902914966 9] 943.8961870884192]
Test Case: 615 | Input/Output: [[54.88741005597171 45.29545531349527 19] 558.3618932968377]
Test Case: 616 | Input/Output: [[7.017383462081339 2.085755170059354 19] 12.953168957847245]
Test Case: 617 | Input/Output: [[64.24078872585429 29.1542075917113 5] 167.7070519443362]
Test Case: 618 | Input/Output: [[75.29749294672773 21.501507814510347 20] 135.4882173809977]
Test Case: 619 | Input/Output: [[33.17088792370175 20.90185654595992 3] 109.61550962362604]
Test Case: 620 | Input/Output: [[52.3023902489706 29.862737277893896 15] 191.46786395775175]
Test Case: 621 | Input/Output: [[3.10067970367915 2.333091827149609 5] 16.6555256082091]
Test Case: 622 | Input/Output: [[59.51323734849696 45.08981852766584 10] 404.70907989824747]
Test Case: 623 | Input/Output: [[32.74584705168264 19.17012031537104 12] 125.02296825059364]
Test Case: 624 | Input/Output: [[90.82886222124684 77.80270253590278 8] 835.0245242555143]
Test Case: 625 | Input/Output: [[93.26393411970352 79.3238467665448 13] 1013.9275191397962]
Test Case: 626 | Input/Output: [[1.964922979861988 1.7130216447850375 19] 26.57266661325157]
Test Case: 627 | Input/Output: [[40.844700895986136 1.3136284379034602 6] 43.55926219015281]
Test Case: 628 | Input/Output: [[62.861364915644366 42.4811171825627 11] 320.5588175154401]
Test Case: 629 | Input/Output: [[25.815982619788503 17.437062014580466 20] 133.21330172137183]
Test Case: 630 | Input/Output: [[93.9289805086578 61.60220794472417 12] 449.0512659849828]
Test Case: 631 | Input/Output: [[29.73106605462004 17.345914233458654 5] 105.37096555066957]
Test Case: 632 | Input/Output: [[2.441366925994492 1.3468258254500385 15] 8.448412746896222]
Test Case: 633 | Input/Output: [[87.02884209396862 31.78049397808621 8] 187.09282133411855]
Test Case: 634 | Input/Output: [[84.55923471179885 43.50255707008776 4] 245.2764789508815]
Test Case: 635 | Input/Output: [[66.38897704040015 26.597925967911205 9] 155.10180194492332]
Test Case: 636 | Input/Output: [[70.95315426759467 62.77422751384547 4] 449.3220932022914]
Test Case: 637 | Input/Output: [[26.757281234575515 20.45658379443372 19] 199.2833790929932]
Test Case: 638 | Input/Output: [[3.228890815554221 1.8052800469005863 16] 11.416959399885732]
Test Case: 639 | Input/Output: [[73.11721992792512 3.769659432133545 8] 81.06636811127923]
Test Case: 640 | Input/Output: [[87.47933830110266 17.168172909723477 1] 104.64751121082614]
Test Case: 641 | Input/Output: [[46.600343836565386 33.718190442109346 5] 232.92452246563903]
Test Case: 642 | Input/Output: [[91.67602479161113 56.65968868779317 20] 388.331005510683]
Test Case: 643 | Input/Output: [[56.09502531771563 10.192906901812824 16] 81.00766077282168]
Test Case: 644 | Input/Output: [[75.46830376726605 42.83025954339561 12] 273.23403618782305]
Test Case: 645 | Input/Output: [[92.30032547985138 23.30760487895993 12] 154.6634032210971]
Test Case: 646 | Input/Output: [[82.37058091135637 46.32330361867784 16] 294.04520022139985]
Test Case: 647 | Input/Output: [[10.139441060090617 4.9939730046545705 20] 29.821242849125188]
Test Case: 648 | Input/Output: [[1.4902585065689475 1.1399536754751456 15] 10.988388868955893]
Test Case: 649 | Input/Output: [[19.56679239568008 6.550951313602671 14] 39.26295259629288]
Test Case: 650 | Input/Output: [[57.92161563788446 7.079513846659154 7] 74.05218851459684]
Test Case: 651 | Input/Output: [[50.218658239540645 7.315775971550388 16] 67.34517444342208]
Test Case: 652 | Input/Output: [[63.48116673349913 20.29458534233949 1] 83.77575207583862]
Test Case: 653 | Input/Output: [[80.7903049836794 28.647345237439605 7] 169.4431910073241]
Test Case: 654 | Input/Output: [[49.28518518185794 26.718394964155124 1] 76.00358014601306]
Test Case: 655 | Input/Output: [[59.88383783504864 27.93130120977608 10] 164.49851659473595]
Test Case: 656 | Input/Output: [[45.21857751972402 29.45349856822936 9] 209.6598173776826]
Test Case: 657 | Input/Output: [[95.1776789236625 20.85678499857573 8] 148.59660101513418]
Test Case: 658 | Input/Output: [[29.985288694708377 28.75549912048903 3] 169.0937421072715]
Test Case: 659 | Input/Output: [[46.50907883440462 14.447463683737135 18] 88.42451154963142]
Test Case: 660 | Input/Output: [[54.21192441334801 25.110315309613465 1] 79.32223972296147]
Test Case: 661 | Input/Output: [[80.8445647954475 51.40770295363474 15] 362.8057212570359]
Test Case: 662 | Input/Output: [[75.5950557886043 43.44129627896039 19] 279.85276065456014]
Test Case: 663 | Input/Output: [[89.7043170997101 30.677368188397296 3] 175.62913766697793]
Test Case: 664 | Input/Output: [[96.48830394442038 28.696260518355547 13] 178.174958470232]
Test Case: 665 | Input/Output: [[3.739741737000138 1.4337055035074626 3] 7.917148222544448]
Test Case: 666 | Input/Output: [[16.465938208352018 2.3309994374169976 2] 21.457924868068115]
Test Case: 667 | Input/Output: [[14.234445651185244 12.70257122621405 4] 91.56902353635424]
Test Case: 668 | Input/Output: [[60.02166491289123 41.4234345436159 4] 253.1204838681668]
Test Case: 669 | Input/Output: [[56.75635996128391 44.89460758579549 10] 439.7400090510004]
Test Case: 670 | Input/Output: [[95.8034150173072 47.242591490420224 4] 265.5217623327161]
Test Case: 671 | Input/Output: [[77.06234678780581 18.367917412138446 19] 125.2943455474934]
Test Case: 672 | Input/Output: [[93.1908927856344 60.365403678825054 2] 253.0240392357108]
Test Case: 673 | Input/Output: [[58.08422533229227 17.60226073178406 19] 108.59628361162927]
Test Case: 674 | Input/Output: [[98.28709303202038 2.002011564298691 7] 102.37436997605892]
Test Case: 675 | Input/Output: [[58.48265447264311 5.0337337040690935 9] 69.49825981441754]
Test Case: 676 | Input/Output: [[92.1205055789522 68.6719193848218 6] 523.2884978718563]
Test Case: 677 | Input/Output: [[70.24426139416741 48.90923501567909 9] 377.2171024203207]
Test Case: 678 | Input/Output: [[35.41852722501886 30.733206580656745 7] 314.8577490631233]
Test Case: 679 | Input/Output: [[60.085270371790266 26.486146432623045 3] 141.55484160470388]
Test Case: 680 | Input/Output: [[86.02172568458344 61.96530856301139 16] 526.3955507369931]
Test Case: 681 | Input/Output: [[47.6202141268432 19.193331803847222 2] 93.74275193842972]
Test Case: 682 | Input/Output: [[2.2487191532478508 1.2571367983272537 18] 7.9503849371393]
Test Case: 683 | Input/Output: [[1.7711481879801587 1.7356856279185608 15] 45.83281674419799]
Test Case: 684 | Input/Output: [[6.073622722171832 3.865738493103818 19] 27.33686806488578]
Test Case: 685 | Input/Output: [[26.11550454217836 10.914221233989354 14] 63.61602180798018]
Test Case: 686 | Input/Output: [[96.79173169448435 70.09756445235558 1] 166.88929614683997]
Test Case: 687 | Input/Output: [[20.41483770203936 12.388779008276847 4] 72.12220694170958]
Test Case: 688 | Input/Output: [[31.07558617228364 7.853322498000854 17] 52.09391572497914]
Test Case: 689 | Input/Output: [[52.39618707915047 20.344364920195037 6] 118.50395196720474]
Test Case: 690 | Input/Output: [[9.751387964610442 9.534502815176747 18] 288.6914226753311]
Test Case: 691 | Input/Output: [[42.22250138957659 4.118222171853768 7] 51.34911726175877]
Test Case: 692 | Input/Output: [[52.71807298035083 24.854162102250584 14] 146.76149150244146]
Test Case: 693 | Input/Output: [[29.64376347190074 18.82251745057227 20] 132.75365216505725]
Test Case: 694 | Input/Output: [[68.36943404969625 67.50305547417675 14] 1753.2051364106624]
Test Case: 695 | Input/Output: [[84.60433245386906 29.2096759779786 12] 173.82778928339522]
Test Case: 696 | Input/Output: [[74.96942160962284 51.05837911129363 7] 368.2855065328264]
Test Case: 697 | Input/Output: [[36.91304775690914 21.648711390216608 16] 141.58949154384047]
Test Case: 698 | Input/Output: [[51.521370436734095 19.85046812807433 15] 116.1057113944018]
Test Case: 699 | Input/Output: [[38.42854667375976 1.7457187056098429 16] 42.08613996736942]
Test Case: 700 | Input/Output: [[54.863961664496586 50.38678071838408 19] 1033.8581934884503]
Test Case: 701 | Input/Output: [[81.66388512527023 39.36420205451073 14] 233.6486170883079]
Test Case: 702 | Input/Output: [[43.18864176510351 24.113413294367252 20] 152.37873734615198]
Test Case: 703 | Input/Output: [[74.8087599637476 51.26376958680442 9] 387.2189060974538]
Test Case: 704 | Input/Output: [[23.840743964346583 12.56535300309297 11] 76.91012809483891]
Test Case: 705 | Input/Output: [[19.609675304803297 3.201606538263554 11] 27.26230825848161]
Test Case: 706 | Input/Output: [[67.15748260445706 48.24872730863648 17] 408.4000729141087]
Test Case: 707 | Input/Output: [[12.12831413811446 2.4558441668118367 16] 18.287082148873644]
Test Case: 708 | Input/Output: [[43.891206922279466 9.894286114940634 10] 69.43891820326317]
Test Case: 709 | Input/Output: [[16.58340176386543 15.146477060393222 11] 231.06930554252955]
Test Case: 710 | Input/Output: [[5.708372363215863 2.4322233349501365 9] 14.177634841445334]
Test Case: 711 | Input/Output: [[23.333048389351973 7.770041899711298 12] 46.63164336246624]
Test Case: 712 | Input/Output: [[47.729737436227 46.540792394128005 14] 1125.998482427776]
Test Case: 713 | Input/Output: [[42.64049780355613 4.904917019465769 8] 53.72542443697631]
Test Case: 714 | Input/Output: [[17.895538641489605 11.614633895800528 19] 84.05753105524884]
Test Case: 715 | Input/Output: [[85.83567785091181 61.33417871209512 7] 466.5391066580581]
Test Case: 716 | Input/Output: [[75.41150591273606 4.459321460957765 19] 84.89068262173723]
Test Case: 717 | Input/Output: [[81.87065127247834 40.96321410798432 4] 230.42859927674183]
Test Case: 718 | Input/Output: [[34.72901695033124 11.556685611166031 7] 69.33832467353848]
Test Case: 719 | Input/Output: [[71.63153972795739 28.131807838408207 18] 164.2815138479566]
Test Case: 720 | Input/Output: [[95.8422952250858 58.4506541937704 14] 395.0944914375471]
Test Case: 721 | Input/Output: [[99.58626081780396 90.4232675785465 17] 1664.8518190329762]
Test Case: 722 | Input/Output: [[12.23079179399665 10.45586490397827 1] 22.68665669797492]
Test Case: 723 | Input/Output: [[33.023555889203536 21.694396681966065 5] 139.98299538401818]
Test Case: 724 | Input/Output: [[72.32252261599231 1.3240393468198903 9] 75.0199849033939]
Test Case: 725 | Input/Output: [[57.21314823503546 41.43302942741642 17] 356.1739859625192]
Test Case: 726 | Input/Output: [[4.23146977392867 2.7873794181799108 17] 20.54958504473227]
Test Case: 727 | Input/Output: [[81.52834015470336 36.33564380409224 2] 170.3937394512786]
Test Case: 728 | Input/Output: [[42.10588125223424 12.766965312995822 3] 76.55573499102616]
Test Case: 729 | Input/Output: [[87.99925644764038 78.17860963845102 9] 975.7344548965566]
Test Case: 730 | Input/Output: [[1.449763003340698 1.224101544068928 4] 8.447319317189386]
Test Case: 731 | Input/Output: [[53.63183280271839 37.551566519484965 16] 303.105438524838]
Test Case: 732 | Input/Output: [[24.5639307310308 21.103660386007554 11] 263.16964876762034]
Test Case: 733 | Input/Output: [[98.28578968329602 26.29446524352174 8] 170.07809532167693]
Test Case: 734 | Input/Output: [[14.81758699656836 8.716602686955433 18] 57.15390512746317]
Test Case: 735 | Input/Output: [[52.991652709077314 15.879400406861947 20] 98.3392473971004]
Test Case: 736 | Input/Output: [[14.849531387245856 12.77030094594563 7] 128.63655897330787]
Test Case: 737 | Input/Output: [[75.18645713068634 47.67226625325882 15] 335.367692639557]
Test Case: 738 | Input/Output: [[60.26923748427031 44.74342556036732 12] 396.2200934850581]
Test Case: 739 | Input/Output: [[99.20686158722992 68.67322080572319 7] 503.917707968475]
Test Case: 740 | Input/Output: [[70.83146630360696 53.64496333669127 7] 439.6862365696701]
Test Case: 741 | Input/Output: [[43.212197305428056 37.3037111902401 12] 487.99010751026265]
Test Case: 742 | Input/Output: [[84.57246674165512 42.52165474154714 6] 251.48210224865397]
Test Case: 743 | Input/Output: [[64.06321307810263 14.26055289901509 3] 99.63978288106352]
Test Case: 744 | Input/Output: [[56.1858436162998 50.84548441435711 4] 370.86238875341365]
Test Case: 745 | Input/Output: [[50.47316448229663 29.00876869291491 11] 186.47798295397567]
Test Case: 746 | Input/Output: [[23.28950139737978 3.533944935432981 18] 31.62172073820528]
Test Case: 747 | Input/Output: [[55.96644246529754 16.066898882737775 19] 101.0399995159556]
Test Case: 748 | Input/Output: [[88.97101723079545 65.28499056127693 2] 267.44569982331865]
Test Case: 749 | Input/Output: [[63.3979506594241 4.230074731900548 11] 72.46293956427877]
Test Case: 750 | Input/Output: [[54.3247797588733 16.340729004724967 3] 98.31521054199332]
Test Case: 751 | Input/Output: [[2.059442410275353 1.94388210357712 19] 47.52991609659394]
Test Case: 752 | Input/Output: [[50.58865880101275 47.34778942358258 19] 1094.218008574029]
Test Case: 753 | Input/Output: [[34.93004644255251 12.163296244966258 3] 69.20249047372587]
Test Case: 754 | Input/Output: [[54.8176448249392 13.735358307003288 15] 91.4728582647272]
Test Case: 755 | Input/Output: [[46.37171631123616 16.816680215774383 16] 99.1422951310541]
Test Case: 756 | Input/Output: [[40.003093823632426 36.36388100951695 3] 208.8908882928452]
Test Case: 757 | Input/Output: [[34.34740991153215 33.5235654114257 1] 67.87097532295785]
Test Case: 758 | Input/Output: [[24.78831178544372 16.084687786216108 12] 115.75953894107964]
Test Case: 759 | Input/Output: [[88.81187702118723 88.4883938315637 5] 880.0669812611542]
Test Case: 760 | Input/Output: [[32.95702943931761 2.261797025642725 8] 37.8139472790088]
Test Case: 761 | Input/Output: [[99.4070829681945 34.16331382539492 1] 133.57039679358942]
Test Case: 762 | Input/Output: [[2.692347629422818 2.5764846614970662 10] 43.572147109542286]
Test Case: 763 | Input/Output: [[12.541903292465031 11.109952052652462 18] 183.79175740456444]
Test Case: 764 | Input/Output: [[69.47793402801337 23.6963574700044 9] 141.3920963632194]
Test Case: 765 | Input/Output: [[35.15859588085185 19.13191201919553 11] 118.95246111119506]
Test Case: 766 | Input/Output: [[80.68252174617116 3.5093313654576197 9] 88.02034729528926]
Test Case: 767 | Input/Output: [[21.30576950592016 10.53348129112174 14] 62.96938734203455]
Test Case: 768 | Input/Output: [[36.132045048467006 28.22292278218339 10] 269.14277286881963]
Test Case: 769 | Input/Output: [[53.46057698907915 15.416888985743626 2] 88.7402566845964]
Test Case: 770 | Input/Output: [[8.791417781111178 4.037666796515349 8] 23.67868501821016]
Test Case: 771 | Input/Output: [[90.4968287410564 46.93602884989462 16] 285.50662158897654]
Test Case: 772 | Input/Output: [[62.3889698752002 47.700547562435794 17] 462.72982901718507]
Test Case: 773 | Input/Output: [[88.13409751638471 4.8636608202861495 12] 98.42957270627868]
Test Case: 774 | Input/Output: [[66.82623476464603 14.424215051490354 18] 103.61550333732032]
Test Case: 775 | Input/Output: [[77.42246965046282 75.72852154220259 11] 1511.948532991616]
Test Case: 776 | Input/Output: [[77.69615269890694 3.1865471889439485 16] 84.34180477571583]
Test Case: 777 | Input/Output: [[59.92951957909588 8.483885899843 2] 78.09830746099178]
Test Case: 778 | Input/Output: [[16.34923854942184 14.913154523765687 5] 131.15968750616145]
Test Case: 779 | Input/Output: [[2.547020116097911 1.075428313677949 13] 6.269621740084264]
Test Case: 780 | Input/Output: [[60.50625005650645 35.46327896509332 16] 231.82672881002048]
Test Case: 781 | Input/Output: [[41.6472203492536 15.314010501312932 20] 90.0868890366373]
Test Case: 782 | Input/Output: [[40.35451746209252 14.876299894293554 5] 86.8836070815313]
Test Case: 783 | Input/Output: [[79.2204982065221 29.4987825305371 7] 173.04806501361716]
Test Case: 784 | Input/Output: [[7.060671481831802 3.4180247868611366 15] 20.310847841674217]
Test Case: 785 | Input/Output: [[1.3094111960038466 1.098291230670614 12] 13.122381866195338]
Test Case: 786 | Input/Output: [[5.731776625954171 2.81970226270198 11] 16.824828110837725]
Test Case: 787 | Input/Output: [[84.36076482396855 25.07140992888569 16] 155.70724246382017]
Test Case: 788 | Input/Output: [[9.2245098601569 7.904685828308024 13] 103.63504533675447]
Test Case: 789 | Input/Output: [[90.17921445758196 19.516959569419885 4] 139.68718928127612]
Test Case: 790 | Input/Output: [[96.46011426802433 83.76347587184908 9] 984.7680657814776]
Test Case: 791 | Input/Output: [[41.08940876325638 24.2271798166677 6] 152.4739544654648]
Test Case: 792 | Input/Output: [[38.53806592433527 3.668362354299996 17] 46.64662868016772]
Test Case: 793 | Input/Output: [[22.64559959409348 21.66637573212942 10] 366.1228684773708]
Test Case: 794 | Input/Output: [[51.27472845322466 24.36690302658791 19] 144.1402727786109]
Test Case: 795 | Input/Output: [[45.44686525244751 30.431657431124822 15] 229.10292788608035]
Test Case: 796 | Input/Output: [[28.27943601174527 11.073941161160777 8] 64.64655558651843]
Test Case: 797 | Input/Output: [[96.89178511957022 30.43283772542441 10] 185.6272958086442]
Test Case: 798 | Input/Output: [[84.4135736965842 42.32481023594376 1] 126.73838393252797]
Test Case: 799 | Input/Output: [[34.63315934142658 12.01964644554577 9] 71.4447178218197]
Test Case: 800 | Input/Output: [[43.03996112693435 1.8522067372338096 19] 46.91096148905677]
Test Case: 801 | Input/Output: [[25.438080303703387 10.405665773350364 19] 60.65532868452132]
Test Case: 802 | Input/Output: [[57.26432313869238 7.991182484998768 3] 75.63263195640589]
Test Case: 803 | Input/Output: [[53.67336882266502 47.43051211302515 5] 400.82435572766366]
Test Case: 804 | Input/Output: [[60.44286569244812 12.698921553232177 15] 92.59602030264352]
Test Case: 805 | Input/Output: [[50.17309732094596 29.34956376365822 17] 191.58418482376308]
Test Case: 806 | Input/Output: [[86.4123652090657 52.5397401454634 14] 354.145889147478]
Test Case: 807 | Input/Output: [[67.32374406593145 43.87820075018598 4] 261.69982222878554]
Test Case: 808 | Input/Output: [[72.23817539851417 43.710408380043454 13] 293.1777228771612]
Test Case: 809 | Input/Output: [[58.62478786070395 10.421122707561633 14] 83.97290623507809]
Test Case: 810 | Input/Output: [[62.82741519341568 37.48670416451282 6] 237.48779200087688]
Test Case: 811 | Input/Output: [[88.43038260390763 11.467600141507992 8] 114.78296187230238]
Test Case: 812 | Input/Output: [[47.21404473767714 28.790336909771 1] 76.00438164744814]
Test Case: 813 | Input/Output: [[4.774369572285056 1.395426500651411 15] 8.71778119270246]
Test Case: 814 | Input/Output: [[32.92029201827651 30.260028198073428 18] 610.2827106125429]
Test Case: 815 | Input/Output: [[73.49129590612682 43.38876412711989 14] 285.1686193401113]
Test Case: 816 | Input/Output: [[66.56996414455493 11.741721140605147 8] 95.08240474057516]
Test Case: 817 | Input/Output: [[33.64504525226436 20.352218174027147 11] 136.12839328060977]
Test Case: 818 | Input/Output: [[85.93419024847218 5.1082675101233885 15] 96.79641901928883]
Test Case: 819 | Input/Output: [[96.13835927183612 16.43116588668195 13] 135.77506620766025]
Test Case: 820 | Input/Output: [[92.3696309486184 73.23826784578797 11] 737.3312856691184]
Test Case: 821 | Input/Output: [[91.9104932961034 2.632723571602248 16] 97.33121388825614]
Test Case: 822 | Input/Output: [[44.53612736475441 35.45091267705133 9] 341.7926415868797]
Test Case: 823 | Input/Output: [[72.90245868952091 25.44203741901788 16] 151.06387643954355]
Test Case: 824 | Input/Output: [[19.7544372341623 8.791900208984917 3] 46.9055569247822]
Test Case: 825 | Input/Output: [[49.741476810446414 28.421383679455857 4] 162.92287333411662]
Test Case: 826 | Input/Output: [[17.56740901636971 13.1414650138051 11] 116.88596755108654]
Test Case: 827 | Input/Output: [[67.00842174792356 62.555849496686086 3] 363.4370364910305]
Test Case: 828 | Input/Output: [[29.565573878182036 24.55631658269089 19] 310.0501013474165]
Test Case: 829 | Input/Output: [[52.90985961010149 8.130856862749543 11] 72.12433359927327]
Test Case: 830 | Input/Output: [[89.52472993944738 33.85046737210759 7] 198.1692456444458]
Test Case: 831 | Input/Output: [[5.648500725617853 1.2203205032037845 8] 8.761693449188769]
Test Case: 832 | Input/Output: [[57.26992310351321 23.65956087663408 3] 128.17569877088528]
Test Case: 833 | Input/Output: [[21.363965748688585 18.21726522054005 14] 239.8539354073195]
Test Case: 834 | Input/Output: [[43.90062670242871 18.258409448603057 19] 106.41905216222828]
Test Case: 835 | Input/Output: [[79.60794332034484 31.764512495906985 3] 173.54304466765396]
Test Case: 836 | Input/Output: [[28.23907441356176 18.22245226837741 10] 129.34553756873248]
Test Case: 837 | Input/Output: [[84.75859834659485 36.26189901736253 17] 211.50969521703576]
Test Case: 838 | Input/Output: [[88.69173119290402 26.257960987374105 16] 163.29443265084024]
Test Case: 839 | Input/Output: [[29.50256786390102 24.657789688190476 11] 283.9664024574199]
Test Case: 840 | Input/Output: [[49.97846072137974 48.76066053938021 11] 963.0216339266652]
Test Case: 841 | Input/Output: [[21.185369699814263 10.558420315364492 2] 47.564343594463296]
Test Case: 842 | Input/Output: [[67.06596335151377 59.34629514535754 7] 631.6412784170949]
Test Case: 843 | Input/Output: [[56.886166069511496 18.570080742916797 12] 112.02632797515174]
Test Case: 844 | Input/Output: [[54.18337397381682 54.01737229306608 16] 1691.9959498357575]
Test Case: 845 | Input/Output: [[85.21416410110682 67.13585816911953 11] 665.9917907727208]
Test Case: 846 | Input/Output: [[47.68295061348496 1.115458812752819 9] 49.96730673381625]
Test Case: 847 | Input/Output: [[30.839924053531483 28.751181757196253 14] 550.240154006292]
Test Case: 848 | Input/Output: [[13.225162315318768 12.865900960815305 8] 189.925498330269]
Test Case: 849 | Input/Output: [[70.06893537145122 12.643029258872748 2] 97.63626433034791]
Test Case: 850 | Input/Output: [[82.58611706145929 6.945345770541324 5] 97.75184261174338]
Test Case: 851 | Input/Output: [[84.24459980417811 66.33650067501804 4] 436.0387349331139]
Test Case: 852 | Input/Output: [[19.331949615675438 13.388620576092192 2] 55.38167311687707]
Test Case: 853 | Input/Output: [[97.9803926909235 56.93437460379519 10] 368.1719397279809]
Test Case: 854 | Input/Output: [[42.92339085428608 31.224378828146964 5] 216.6295090577917]
Test Case: 855 | Input/Output: [[33.81002255263713 16.544021822864046 14] 98.59808074585207]
Test Case: 856 | Input/Output: [[30.052244929242143 29.88541532366993 4] 237.7616156013356]
Test Case: 857 | Input/Output: [[22.662741483198563 11.859081835386034 4] 66.98624906332972]
Test Case: 858 | Input/Output: [[14.996896553392723 13.460867761730023 10] 183.543452935531]
Test Case: 859 | Input/Output: [[62.71219465136304 8.345648691903257 3] 81.7725464898517]
Test Case: 860 | Input/Output: [[71.48806080209148 53.59241918865085 8] 449.81487949246525]
Test Case: 861 | Input/Output: [[58.86227547725985 44.370509887402726 20] 417.8370451217645]
Test Case: 862 | Input/Output: [[1.133914954973993 1.1005982965569174 10] 19.610676415975107]
Test Case: 863 | Input/Output: [[37.10671378710397 28.186544425494045 12] 261.5877295644442]
Test Case: 864 | Input/Output: [[74.46149949514452 50.9354583822205 3] 269.8513182257969]
Test Case: 865 | Input/Output: [[39.31523353687754 6.630832894780749 17] 55.26735372894838]
Test Case: 866 | Input/Output: [[7.9417053675662626 5.613715535104902 11] 45.224966150321286]
Test Case: 867 | Input/Output: [[68.07384918789258 41.81775138761616 4] 244.34163968246585]
Test Case: 868 | Input/Output: [[42.70756591084747 20.085351079152147 15] 118.5427691842894]
Test Case: 869 | Input/Output: [[27.33312531177995 24.89567053252817 18] 476.6685562440532]
Test Case: 870 | Input/Output: [[52.54848484326912 9.11130063754077 16] 74.59342397402825]
Test Case: 871 | Input/Output: [[11.01414807332118 5.355492838624762 8] 31.76272276321264]
Test Case: 872 | Input/Output: [[2.6103217389221323 2.252043196417679 18] 32.94156647410188]
Test Case: 873 | Input/Output: [[80.91892693719657 73.12702553047991 16] 1283.1747030736387]
Test Case: 874 | Input/Output: [[83.68689109873375 74.85807923505492 12] 1108.4717186598923]
Test Case: 875 | Input/Output: [[12.889815733885488 4.543301458363883 12] 26.92247752734646]
Test Case: 876 | Input/Output: [[28.346770325707013 24.220293609335243 7] 241.05688799881557]
Test Case: 877 | Input/Output: [[29.202960994911766 25.31523796456609 14] 354.10085598513655]
Test Case: 878 | Input/Output: [[66.1522294831341 5.794392610737647 16] 78.8535458290546]
Test Case: 879 | Input/Output: [[83.66414484087302 37.65534872437496 8] 220.2405105769681]
Test Case: 880 | Input/Output: [[21.68626965726209 18.751923037363312 4] 131.7841440925487]
Test Case: 881 | Input/Output: [[61.75381346883236 56.3078830782652 10] 806.9457674389741]
Test Case: 882 | Input/Output: [[24.657298915258227 18.19368438018989 18] 162.7802252913872]
Test Case: 883 | Input/Output: [[46.5812734232928 44.641181627225166 17] 1127.5513017838027]
Test Case: 884 | Input/Output: [[55.28855378083675 1.1497202770408053 12] 57.63682644354934]
Test Case: 885 | Input/Output: [[46.27254628525901 44.29000038689748 16] 1064.7510511277724]
Test Case: 886 | Input/Output: [[3.3904093387014087 3.3573951252900853 7] 45.8769598662081]
Test Case: 887 | Input/Output: [[38.26025762602031 14.9625072598304 17] 87.40399594200471]
Test Case: 888 | Input/Output: [[6.901070054435405 1.2256183604285709 17] 9.881653336430675]
Test Case: 889 | Input/Output: [[99.41394050670648 39.04106605630154 12] 227.9860377193085]
Test Case: 890 | Input/Output: [[73.66322099739916 5.419830748053681 10] 85.36375895923707]
Test Case: 891 | Input/Output: [[91.5901087388484 69.84888641365066 5] 504.6608691180195]
Test Case: 892 | Input/Output: [[97.19883039503176 71.34155582156988 9] 594.3854142641117]
Test Case: 893 | Input/Output: [[9.899723002016824 9.0226904924353 2] 36.16845957444894]
Test Case: 894 | Input/Output: [[94.84319656459724 89.31866748835577 10] 1426.7402448500886]
Test Case: 895 | Input/Output: [[77.1328303289232 31.63594624438061 17] 184.4003523823203]
Test Case: 896 | Input/Output: [[39.41912090640552 37.90459319947459 12] 754.8759143255306]
Test Case: 897 | Input/Output: [[98.48847241984768 45.66867609782733 12] 268.77071493154216]
Test Case: 898 | Input/Output: [[40.50900493774325 28.22004200962117 6] 200.6617334165302]
Test Case: 899 | Input/Output: [[45.50621812676081 38.70835682861283 6] 350.203777353348]
Test Case: 900 | Input/Output: [[75.62653836469418 69.96539700861459 5] 626.8320789493443]
Test Case: 901 | Input/Output: [[43.62856533746795 29.77164145618987 15] 230.3521089170017]
Test Case: 902 | Input/Output: [[69.02675511003181 60.02460652172626 13] 828.6662525308117]
Test Case: 903 | Input/Output: [[85.09252335369 43.63682457610921 10] 263.8992275057536]
Test Case: 904 | Input/Output: [[38.63420679552098 31.79485697870969 5] 247.65320132674304]
Test Case: 905 | Input/Output: [[16.8761313083319 4.5146404419338975 18] 29.203069187650687]
Test Case: 906 | Input/Output: [[59.8169803683506 34.61151681365716 11] 223.54986607722552]
Test Case: 907 | Input/Output: [[61.120932602752575 37.34376476487562 3] 195.38153840216745]
Test Case: 908 | Input/Output: [[70.86823889987147 40.92947097812036 2] 176.3657184607453]
Test Case: 909 | Input/Output: [[58.606777378168886 7.203428741321129 17] 75.0325456231483]
Test Case: 910 | Input/Output: [[50.68918151044724 1.845141258165768 11] 54.51886880151184]
Test Case: 911 | Input/Output: [[99.01388578227272 67.86556617376321 19] 530.0689688738792]
Test Case: 912 | Input/Output: [[91.40432022664432 80.09841973761452 7] 836.3247606304967]
Test Case: 913 | Input/Output: [[78.52760163565506 23.240972911696318 16] 144.54927490570475]
Test Case: 914 | Input/Output: [[94.00426361833414 54.89814591933359 8] 353.0926662804118]
Test Case: 915 | Input/Output: [[3.281648111075143 1.615727492925376 16] 9.647081426727294]
Test Case: 916 | Input/Output: [[90.67840997530509 62.076323357907896 13] 480.7725789416168]
Test Case: 917 | Input/Output: [[91.9991173098969 18.563595446848733 6] 138.50225555602194]
Test Case: 918 | Input/Output: [[8.922341136070042 6.784121865920188 12] 63.0925007970531]
Test Case: 919 | Input/Output: [[49.08448753282363 29.73291508278361 17] 199.8773840955585]
Test Case: 920 | Input/Output: [[1.948550704037311 1.5660791138347765 10] 15.891952544223464]
Test Case: 921 | Input/Output: [[60.140098753552266 48.632712362069626 13] 532.5247932299475]
Test Case: 922 | Input/Output: [[17.9487631520656 2.982728737818676 2] 24.40989102183953]
Test Case: 923 | Input/Output: [[66.79179570585676 58.248811220137405 9] 692.3480956931669]
Test Case: 924 | Input/Output: [[52.26845248127589 39.74967689621676 19] 382.0793884479856]
Test Case: 925 | Input/Output: [[35.47419357286481 31.256115523422373 3] 177.33058495518733]
Test Case: 926 | Input/Output: [[58.59045348940889 46.23005105670189 18] 489.8851803630885]
Test Case: 927 | Input/Output: [[11.45730015398815 6.790997269426814 20] 44.80425662901035]
Test Case: 928 | Input/Output: [[69.56586024417403 63.98457578204266 17] 1262.93554464738]
Test Case: 929 | Input/Output: [[10.698792457613816 10.640979372498837 7] 146.97850716829367]
Test Case: 930 | Input/Output: [[59.47279787569217 54.50918332071275 13] 925.8345842020208]
Test Case: 931 | Input/Output: [[88.69921386265018 14.477626343407906 8] 123.30240165359724]
Test Case: 932 | Input/Output: [[14.995576220083148 4.32228912110907 13] 27.140888236480524]
Test Case: 933 | Input/Output: [[72.19658339744193 23.879288358384024 6] 143.37036304789666]
Test Case: 934 | Input/Output: [[57.33002295492306 4.936234782465372 17] 68.1326185898263]
Test Case: 935 | Input/Output: [[96.91317912558078 16.502823262139557 13] 136.6926590151868]
Test Case: 936 | Input/Output: [[51.94358414247991 30.680353429958128 3] 160.25013195979938]
Test Case: 937 | Input/Output: [[52.97982168807464 26.724939252843185 15] 160.8309216726465]
Test Case: 938 | Input/Output: [[52.03022856024376 44.25414319343117 4] 307.0785431829659]
Test Case: 939 | Input/Output: [[3.3176682172455267 2.5218149876113243 9] 22.28097753649176]
Test Case: 940 | Input/Output: [[2.5517300096773856 2.457271844125606 1] 5.009001853802992]
Test Case: 941 | Input/Output: [[60.40114158786708 51.01526854895982 15] 660.0703421591713]
Test Case: 942 | Input/Output: [[45.37876459996781 35.155162862635244 4] 228.7023882333261]
Test Case: 943 | Input/Output: [[28.65093210639729 15.24248290620318 14] 93.7770072340809]
Test Case: 944 | Input/Output: [[47.278874961220005 2.5450542329835213 11] 52.65857645417388]
Test Case: 945 | Input/Output: [[49.86731474421871 11.48824017570851 6] 79.7095658124317]
Test Case: 946 | Input/Output: [[63.90122717333148 53.564881626046734 2] 215.93148326420905]
Test Case: 947 | Input/Output: [[13.298839948463248 2.850571201684675 10] 20.55540452307615]
Test Case: 948 | Input/Output: [[84.15633983045277 60.26133582016693 13] 502.00901157649486]
Test Case: 949 | Input/Output: [[84.85343998599055 84.5339326924714 2] 338.1369336361397]
Test Case: 950 | Input/Output: [[7.789495161165827 1.5012708134111763 7] 11.508759543133824]
Test Case: 951 | Input/Output: [[51.37935290244856 46.09009998228076 1] 97.46945288472932]
Test Case: 952 | Input/Output: [[56.28604672226586 41.71638255788631 7] 332.0982918812468]
Test Case: 953 | Input/Output: [[58.00097399090155 10.631086365357644 11] 84.03495361288023]
Test Case: 954 | Input/Output: [[91.64614695748917 40.149167344224416 19] 234.548335922928]
Test Case: 955 | Input/Output: [[63.44487737924716 43.4565612377988 10] 331.60321324059004]
Test Case: 956 | Input/Output: [[45.62661269957211 40.28394530414504 19] 664.83560965849]
Test Case: 957 | Input/Output: [[64.34754204713104 31.68781148647138 20] 189.21266088878824]
Test Case: 958 | Input/Output: [[78.75438523635397 47.45894530192517 1] 126.21333053827914]
Test Case: 959 | Input/Output: [[39.82025594283997 31.13444557467819 2] 126.43237918097668]
Test Case: 960 | Input/Output: [[71.94274062388024 8.686786670234909 20] 91.70218457668996]
Test Case: 961 | Input/Output: [[8.5897443301049 4.504368724450044 2] 19.96052385560932]
Test Case: 962 | Input/Output: [[63.84907088750127 26.60674823289612 5] 153.1307979735502]
Test Case: 963 | Input/Output: [[81.17111297015151 45.39986788663269 1] 126.5709808567842]
Test Case: 964 | Input/Output: [[90.55130802375528 66.43508306950703 12] 575.1129013465987]
Test Case: 965 | Input/Output: [[36.294739606252456 7.493268060894037 11] 55.18031560198813]
Test Case: 966 | Input/Output: [[70.58382856129198 64.09005988323776 6] 643.473690191586]
Test Case: 967 | Input/Output: [[65.95106652465978 29.64703349145215 10] 173.6080452301615]
Test Case: 968 | Input/Output: [[88.51649202824727 21.01381037773708 2] 135.53279032980805]
Test Case: 969 | Input/Output: [[76.76612881144314 74.9489385380855 14] 1826.2197597621785]
Test Case: 970 | Input/Output: [[83.96426976344017 57.78236709147911 3] 306.42321488734854]
Test Case: 971 | Input/Output: [[24.593641316822783 18.20863533634064 20] 164.46112691889948]
Test Case: 972 | Input/Output: [[33.729255858804926 31.749177482609973 6] 339.53090398308416]
Test Case: 973 | Input/Output: [[63.04488216342214 28.8460498887761 8] 169.07375666506752]
Test Case: 974 | Input/Output: [[55.65848994015557 39.59843705600153 5] 269.95224987915554]
Test Case: 975 | Input/Output: [[34.51245478120137 22.491889649550792 5] 144.42597449928974]
Test Case: 976 | Input/Output: [[13.489584611661185 1.5332146018835342 12] 16.94923467859558]
Test Case: 977 | Input/Output: [[66.59946145447508 41.287327643543925 1] 107.886789098019]
Test Case: 978 | Input/Output: [[7.705846459316633 2.506241038442351 4] 14.965029303667675]
Test Case: 979 | Input/Output: [[52.07052335146996 19.133177634945763 16] 112.56564418338432]
Test Case: 980 | Input/Output: [[43.33842400643065 34.97360202956723 9] 346.8460583759366]
Test Case: 981 | Input/Output: [[36.63942673136163 2.228975050191843 3] 41.376827442673466]
Test Case: 982 | Input/Output: [[53.839684670048754 28.69781211538348 17] 176.74468352006377]
Test Case: 983 | Input/Output: [[92.25271146647854 5.800145895146997 2] 104.21767214722452]
Test Case: 984 | Input/Output: [[52.93682183033459 52.42490480311582 13] 1292.9806663333734]
Test Case: 985 | Input/Output: [[27.45653191564943 21.080938585597057 17] 206.6861495956395]
Test Case: 986 | Input/Output: [[78.14862412166711 32.55469540044331 3] 176.0302485760014]
Test Case: 987 | Input/Output: [[28.14218788684844 10.133068562069733 7] 59.76440255554764]
Test Case: 988 | Input/Output: [[38.30008867791452 10.19427007969164 20] 66.08376289841871]
Test Case: 989 | Input/Output: [[69.59189598237187 48.14766611223423 15] 380.5723744872682]
Test Case: 990 | Input/Output: [[98.84784956721236 45.71010961732993 1] 144.55795918454228]
Test Case: 991 | Input/Output: [[94.2003607567357 7.894979670163326 10] 111.43474223827296]
Test Case: 992 | Input/Output: [[26.56225992911409 22.26967385800115 12] 265.7241849256309]
Test Case: 993 | Input/Output: [[42.06330443087902 39.10579016541883 2] 156.6311073282978]
Test Case: 994 | Input/Output: [[38.88406264608072 38.00110206497839 19] 1197.425874018892]
Test Case: 995 | Input/Output: [[77.44418724490883 4.646254612814253 13] 87.32978151349765]
Test Case: 996 | Input/Output: [[33.42188781099595 17.890402759578013 14] 110.4003660959132]
Test Case: 997 | Input/Output: [[14.080260195499095 1.670403503742896 16] 17.870749720390457]
Test Case: 998 | Input/Output: [[31.257380611748093 11.716599877998442 14] 68.7409904213454]
Test Case: 999 | Input/Output: [[76.13940853991537 11.798763435022016 5] 104.05494183619614]
Test Case: 1000 | Input/Output: [[91.57657922953358 75.36046087045685 20] 923.6126304363206]
Test Case: 1001 | Input/Output: [[75.99059319654422 62.82945290804797 6] 545.4691428122266]
Test Case: 1002 | Input/Output: [[8.208161648777914 7.390438398580952 1] 15.598600047358865]
Test Case: 1003 | Input/Output: [[95.71484291169529 93.8258708922032 2] 375.340764879801]
Test Case: 1004 | Input/Output: [[73.99340874775524 52.704498238688 13] 435.01163789975215]
Test Case: 1005 | Input/Output: [[67.73619865833561 19.55364421597113 12] 122.71412885872432]
Test Case: 1006 | Input/Output: [[35.862683622641015 26.837791211388176 11] 238.8850651953605]
Test Case: 1007 | Input/Output: [[17.205068096485782 13.588709115607823 10] 132.6656803411007]
Test Case: 1008 | Input/Output: [[86.26389885579063 84.93892920774863 16] 2445.22349588093]
Test Case: 1009 | Input/Output: [[65.28979832237768 21.267572153623068 15] 128.37408361583425]
Test Case: 1010 | Input/Output: [[13.283636919280347 4.406924581424223 7] 26.461492251480745]
Test Case: 1011 | Input/Output: [[52.6355906600959 7.251843033095242 5] 69.45336440038268]
Test Case: 1012 | Input/Output: [[55.61832844779827 21.571198693224257 3] 118.7380100647994]
Test Case: 1013 | Input/Output: [[55.574755784836135 6.937589248373668 8] 71.42908093252298]
Test Case: 1014 | Input/Output: [[15.94560936919821 10.532776357629793 4] 63.152797907960505]
Test Case: 1015 | Input/Output: [[83.76676951650352 5.227425362893261 17] 94.91747469732871]
Test Case: 1016 | Input/Output: [[59.359355826351205 47.48254737459291 12] 497.33782653489294]
Test Case: 1017 | Input/Output: [[64.69502392828974 4.352311733039855 7] 74.02748138855114]
Test Case: 1018 | Input/Output: [[78.9742385545034 18.127203201775608 20] 126.0293520074144]
Test Case: 1019 | Input/Output: [[47.27243724817589 22.00522327179728 11] 129.58277127244486]
Test Case: 1020 | Input/Output: [[71.41201280330286 43.00073259677633 4] 249.77039638167332]
Test Case: 1021 | Input/Output: [[13.831434154033012 1.5920914624626437 9] 17.42981495829793]
Test Case: 1022 | Input/Output: [[85.97543464759588 32.97138810844993 7] 192.7028153912971]
Test Case: 1023 | Input/Output: [[21.542881789766444 9.258002449168334 12] 54.01058219821287]
Test Case: 1024 | Input/Output: [[21.41952783477452 3.4682846880425866 2] 28.917687487448397]
Test Case: 1025 | Input/Output: [[24.422796099633224 15.66078478512004 12] 111.18701120321296]
Test Case: 1026 | Input/Output: [[51.17140401088616 25.18342244116092 8] 149.8284361582974]
Test Case: 1027 | Input/Output: [[62.55510603787919 14.454524666204918 7] 100.14798221673392]
Test Case: 1028 | Input/Output: [[67.42344035606678 40.318843960033085 14] 267.8115252729728]
Test Case: 1029 | Input/Output: [[86.40058501786325 60.47024504617214 8] 461.2037676144659]
Test Case: 1030 | Input/Output: [[31.59477713625367 15.932480410376307 11] 95.82297399894146]
Test Case: 1031 | Input/Output: [[66.0508453005104 18.12650920524723 16] 116.01590888902952]
Test Case: 1032 | Input/Output: [[51.65347012577085 41.96409384075217 12] 457.8121604120784]
Test Case: 1033 | Input/Output: [[30.848131855169363 23.84983975025057 7] 201.29491130127155]
Test Case: 1034 | Input/Output: [[61.25972834869177 44.2672218688189 18] 379.33743495768806]
Test Case: 1035 | Input/Output: [[1.161842127272962 1.0824445207782063 10] 16.660202865116318]
Test Case: 1036 | Input/Output: [[89.3583303565489 1.6833858076514283 20] 92.78974501776982]
Test Case: 1037 | Input/Output: [[95.755632678096 60.35717988144812 19] 422.2319418638661]
Test Case: 1038 | Input/Output: [[48.11054790346672 23.57016548732304 10] 140.41555321138475]
Test Case: 1039 | Input/Output: [[29.480263734653303 11.053478813136282 13] 64.84809836418513]
Test Case: 1040 | Input/Output: [[87.65506020694377 41.65942528690586 6] 243.5978868269195]
Test Case: 1041 | Input/Output: [[89.37910083040477 70.40113681092132 7] 610.9533019685758]
Test Case: 1042 | Input/Output: [[97.10247005293915 68.48982204781929 14] 557.7301234647368]
Test Case: 1043 | Input/Output: [[57.32352736497803 33.81163835182768 18] 222.1769104872639]
Test Case: 1044 | Input/Output: [[91.37424834587156 11.617168681351384 20] 117.99282698828964]
Test Case: 1045 | Input/Output: [[11.91425179699281 6.001328897960381 11] 36.07990302906245]
Test Case: 1046 | Input/Output: [[57.31362331974664 23.79206309286204 12] 138.6671425792398]
Test Case: 1047 | Input/Output: [[60.84495895684928 54.90031728569309 18] 998.514237107126]
Test Case: 1048 | Input/Output: [[33.07869197419083 7.88417399499452 19] 53.78146238924289]
Test Case: 1049 | Input/Output: [[51.30746050186337 28.2299351539196 20] 176.8315897974497]
Test Case: 1050 | Input/Output: [[84.9301010313107 65.18992363846426 16] 636.4994484950507]
Test Case: 1051 | Input/Output: [[47.08979579596214 45.33097126353595 20] 1318.7411503101284]
Test Case: 1052 | Input/Output: [[33.822906416059205 23.520343568082545 1] 57.34324998414175]
Test Case: 1053 | Input/Output: [[33.74183978099117 1.5016206486210133 1] 35.243460429612185]
Test Case: 1054 | Input/Output: [[51.34588615568992 6.404787877176988 6] 65.98077207721319]
Test Case: 1055 | Input/Output: [[69.11382730455782 36.693008159264544 6] 220.50530392630907]
Test Case: 1056 | Input/Output: [[77.12931159607484 15.075690867524385 9] 114.60580916417376]
Test Case: 1057 | Input/Output: [[38.98563269627143 37.6751647206876 18] 1048.183992522317]
Test Case: 1058 | Input/Output: [[27.060989150877823 10.154869958760257 19] 59.570024748071695]
Test Case: 1059 | Input/Output: [[25.662372235196464 20.295518764348035 4] 133.78345706222217]
Test Case: 1060 | Input/Output: [[84.64672378627665 32.92710925287287 9] 192.38755349604148]
Test Case: 1061 | Input/Output: [[16.396470812455334 15.598612112584664 6] 170.07804781994486]
Test Case: 1062 | Input/Output: [[53.74698735702525 9.045026632213233 8] 75.4973461576598]
Test Case: 1063 | Input/Output: [[52.495249237232585 7.957051597936274 3] 71.00437520768487]
Test Case: 1064 | Input/Output: [[61.48133756967778 50.519747871775216 16] 601.0534463336726]
Test Case: 1065 | Input/Output: [[57.36171271647984 6.82590756890544 13] 72.8574883701463]
Test Case: 1066 | Input/Output: [[62.26160616308383 3.921751003290699 4] 70.63125616796549]
Test Case: 1067 | Input/Output: [[47.7032648520509 2.1995741809678533 17] 52.31506086235239]
Test Case: 1068 | Input/Output: [[64.33579606439987 24.93366659942944 16] 145.75914026735157]
Test Case: 1069 | Input/Output: [[10.66368094552871 2.050019969771441 4] 15.718017647531925]
Test Case: 1070 | Input/Output: [[14.808559827127471 14.6942193298302 12] 339.37898398988096]
Test Case: 1071 | Input/Output: [[22.842825470287096 22.042232924427974 14] 503.49980481432726]
Test Case: 1072 | Input/Output: [[5.403605964135584 3.729972618312988 9] 28.44008067006125]
Test Case: 1073 | Input/Output: [[26.09983402959249 25.35813137387959 19] 763.6998216509173]
Test Case: 1074 | Input/Output: [[20.06564705515417 15.275282424218265 8] 131.33688642011077]
Test Case: 1075 | Input/Output: [[79.78915484094198 9.922278584910435 5] 102.44892803833116]
Test Case: 1076 | Input/Output: [[79.51037560384417 7.181167912731141 5] 95.29809577546813]
Test Case: 1077 | Input/Output: [[58.90186732496917 23.86336333904508 20] 139.1334095696482]
Test Case: 1078 | Input/Output: [[95.7459481911554 32.82665878507698 13] 195.6521613641275]
Test Case: 1079 | Input/Output: [[3.5792836185803734 2.023883987563914 15] 12.891511903145814]
Test Case: 1080 | Input/Output: [[83.21868590799615 79.27664892527031 1] 162.49533483326644]
Test Case: 1081 | Input/Output: [[99.94032109179186 99.92109115338428 15] 2993.886853731885]
Test Case: 1082 | Input/Output: [[14.462530520714031 2.825093328947707 9] 21.484342313168334]
Test Case: 1083 | Input/Output: [[87.2285591953958 6.0826131751228285 8] 100.30567780222334]
Test Case: 1084 | Input/Output: [[19.647892101325382 3.593861430718442 1] 23.241753532043827]
Test Case: 1085 | Input/Output: [[16.59354176027354 11.622151376131775 5] 78.30443715308868]
Test Case: 1086 | Input/Output: [[74.45018124231618 27.070989259161895 9] 159.50947062427682]
Test Case: 1087 | Input/Output: [[63.90349326214749 58.39740554447855 10] 842.918810769077]
Test Case: 1088 | Input/Output: [[15.373226516713846 8.138830188311688 20] 49.96340969863789]
Test Case: 1089 | Input/Output: [[5.152552844812842 3.381135950401724 2] 14.133546281357455]
Test Case: 1090 | Input/Output: [[73.14085751000921 23.69130257332859 6] 143.05906899523984]
Test Case: 1091 | Input/Output: [[59.52011861542097 24.555799418521172 16] 143.12319737978828]
Test Case: 1092 | Input/Output: [[64.98030934818178 27.575736245905308 8] 160.62191463971644]
Test Case: 1093 | Input/Output: [[99.01783509021726 48.38071891092199 7] 286.31276296090306]
Test Case: 1094 | Input/Output: [[84.96110507160009 1.8004308898949604 8] 88.6399256111389]
Test Case: 1095 | Input/Output: [[1.6560506818716294 1.1367927448377024 3] 6.026003611216071]
Test Case: 1096 | Input/Output: [[6.822592159237712 3.133202162762419 5] 18.03465174997998]
Test Case: 1097 | Input/Output: [[68.28985449884867 62.38225700884616 10] 899.3347181274169]
Test Case: 1098 | Input/Output: [[83.61031450730758 80.67644446812413 7] 1035.7834726629308]
Test Case: 1099 | Input/Output: [[87.62006238117989 20.065924315429584 18] 139.67246315779855]
Test Case: 1100 | Input/Output: [[6.700540665216396 2.609228520351544 13] 15.246989088956]
Test Case: 1101 | Input/Output: [[99.40757921201804 49.86534774271873 16] 299.5145918886227]
Test Case: 1102 | Input/Output: [[64.40312096912344 19.56102972776541 7] 120.56226207892352]
Test Case: 1103 | Input/Output: [[34.38970097007852 19.171738711622616 7] 119.01305433248866]
Test Case: 1104 | Input/Output: [[76.12504525248143 73.88972151046917 18] 2121.122182019075]
Test Case: 1105 | Input/Output: [[35.72035289181908 34.23527632135471 3] 201.2625731089118]
Test Case: 1106 | Input/Output: [[55.11873511224293 27.49213888526908 6] 162.2818390064445]
Test Case: 1107 | Input/Output: [[81.09117057682158 17.031288770324675 16] 124.20979979560174]
Test Case: 1108 | Input/Output: [[64.75180999127774 14.062658961083416 20] 100.6799170709311]
Test Case: 1109 | Input/Output: [[69.63079211469392 30.23233578536088 10] 176.45090590464014]
Test Case: 1110 | Input/Output: [[14.146712361514869 12.814271242361135 20] 246.66531939989488]
Test Case: 1111 | Input/Output: [[78.69121824883192 20.83140545644449 18] 135.35399027437353]
Test Case: 1112 | Input/Output: [[98.8982347786052 75.72523943524409 15] 731.6760374815808]
Test Case: 1113 | Input/Output: [[13.146501097769264 3.801887994963868 20] 23.84389940787061]
Test Case: 1114 | Input/Output: [[68.56999463611062 36.39928844491092 8] 222.3253394948385]
Test Case: 1115 | Input/Output: [[91.93368731350782 56.35219857249586 8] 375.4981725028585]
Test Case: 1116 | Input/Output: [[64.17871694755932 26.3659260516384 4] 149.30171921990134]
Test Case: 1117 | Input/Output: [[95.43820725226172 51.07192437584714 1] 146.5101316281089]
Test Case: 1118 | Input/Output: [[88.53154072060103 52.28918187601744 20] 343.98266309846474]
Test Case: 1119 | Input/Output: [[34.32491474558823 32.71552800812577 3] 191.838762176081]
Test Case: 1120 | Input/Output: [[73.25989101893279 24.998629842542837 1] 98.25852086147565]
Test Case: 1121 | Input/Output: [[28.3615643865585 27.45205457517677 7] 355.0541606649757]
Test Case: 1122 | Input/Output: [[79.40525938793023 66.262958932966 4] 453.31720375852166]
Test Case: 1123 | Input/Output: [[81.01259364173252 54.55413993388749 3] 288.3335067952263]
Test Case: 1124 | Input/Output: [[48.02961588033278 25.95515969471297 12] 160.87627604811036]
Test Case: 1125 | Input/Output: [[16.429422137181678 9.856851275441146 16] 65.68915475853746]
Test Case: 1126 | Input/Output: [[18.371425182409386 17.146475653100815 5] 155.43438262092369]
Test Case: 1127 | Input/Output: [[44.96973228014446 42.509501215400974 14] 871.6100841639845]
Test Case: 1128 | Input/Output: [[24.25744108473875 14.367764045434445 9] 93.890044009339]
Test Case: 1129 | Input/Output: [[74.5865380395708 32.55725446699981 20] 190.1408563632854]
Test Case: 1130 | Input/Output: [[4.067551219037021 2.7092083828768674 15] 20.24726652110907]
Test Case: 1131 | Input/Output: [[35.01962252224151 26.42696250576895 12] 241.88621660145049]
Test Case: 1132 | Input/Output: [[9.643664092780128 2.1282219795709034 20] 15.10544732956313]
Test Case: 1133 | Input/Output: [[74.09899302699003 55.91261203992961 14] 519.4464420891202]
Test Case: 1134 | Input/Output: [[12.173802626136668 1.323583250721034 7] 15.143885700234623]
Test Case: 1135 | Input/Output: [[88.9833549429752 81.95510487095243 1] 170.93845981392764]
Test Case: 1136 | Input/Output: [[68.53580137960255 24.53807248613132 13] 144.98208350090337]
Test Case: 1137 | Input/Output: [[19.298217498863448 10.722000148240893 14] 67.53349659230477]
Test Case: 1138 | Input/Output: [[40.648599888221504 22.11685462733452 1] 62.76545451555603]
Test Case: 1139 | Input/Output: [[98.17595778564711 60.883288916541375 12] 417.3815659551602]
Test Case: 1140 | Input/Output: [[76.01889047880591 41.13797410602535 16] 255.3159150586536]
Test Case: 1141 | Input/Output: [[12.604129687835218 9.267145417669273 8] 75.55502787946648]
Test Case: 1142 | Input/Output: [[91.0355265550361 43.49502437516884 12] 257.57672497337825]
Test Case: 1143 | Input/Output: [[3.28275804587232 2.714852420222132 5] 21.257459433495303]
Test Case: 1144 | Input/Output: [[74.56222067876678 22.875096007611884 4] 139.31481239995645]
Test Case: 1145 | Input/Output: [[8.310052641348863 3.147689447257058 5] 18.300151975593216]
Test Case: 1146 | Input/Output: [[45.39093227526786 11.843917219972758 6] 77.41741593013933]
Test Case: 1147 | Input/Output: [[91.54506662615783 48.11981989558972 13] 294.3596736284078]
Test Case: 1148 | Input/Output: [[98.31133028958028 92.26725524892144 6] 981.4813754196908]
Test Case: 1149 | Input/Output: [[54.35089322990374 43.722483777909495 3] 240.435257245035]
Test Case: 1150 | Input/Output: [[50.86509020616688 12.9961157653864 16] 85.7775017915742]
Test Case: 1151 | Input/Output: [[5.53638086380733 5.475552231924316 11] 114.69144872331243]
Test Case: 1152 | Input/Output: [[32.477156608598904 8.453983276764149 6] 55.317982669261255]
Test Case: 1153 | Input/Output: [[11.229932342175614 3.536314832153213 16] 21.55344415788224]
Test Case: 1154 | Input/Output: [[74.88709526278954 38.1551367374744 13] 230.42835106965464]
Test Case: 1155 | Input/Output: [[37.63357475547695 12.016485104390236 10] 72.93914709317549]
Test Case: 1156 | Input/Output: [[79.34201059311249 58.826626983478405 9] 498.1787724517967]
Test Case: 1157 | Input/Output: [[14.238222044130442 10.268193389507234 9] 83.25296515378814]
Test Case: 1158 | Input/Output: [[61.4614663175591 30.720854462595188 18] 184.30469723848407]
Test Case: 1159 | Input/Output: [[59.67749679802996 7.523428263880448 9] 76.89492071053972]
Test Case: 1160 | Input/Output: [[62.8266884039413 36.81464630730441 19] 240.6536126481349]
Test Case: 1161 | Input/Output: [[82.55428686435924 28.823997832126075 5] 170.2399994039603]
Test Case: 1162 | Input/Output: [[44.76667280833905 17.580358164199616 19] 102.66448962605544]
Test Case: 1163 | Input/Output: [[92.85891493107728 76.06261636240284 14] 876.7192620181975]
Test Case: 1164 | Input/Output: [[30.598995364579803 6.989008553250969 18] 48.714773472197386]
Test Case: 1165 | Input/Output: [[10.819525643893249 6.658779082368071 16] 45.43099665931808]
Test Case: 1166 | Input/Output: [[4.066720566573174 1.2148124500816966 7] 7.529681623441614]
Test Case: 1167 | Input/Output: [[33.09437366238831 19.377472799370597 5] 117.88488535055129]
Test Case: 1168 | Input/Output: [[86.5767723205393 75.26307008436392 8] 834.5114936826182]
Test Case: 1169 | Input/Output: [[44.1302398244898 14.550531472396749 6] 87.43389945464904]
Test Case: 1170 | Input/Output: [[30.649950671193714 6.444199592236282 2] 44.89325283967683]
Test Case: 1171 | Input/Output: [[42.36371531362686 33.69233595588378 10] 333.94983945697527]
Test Case: 1172 | Input/Output: [[34.74677807559032 28.578906248519925 14] 333.61498526962504]
Test Case: 1173 | Input/Output: [[81.22954570518826 8.652387362540132 18] 100.59733339603352]
Test Case: 1174 | Input/Output: [[89.41876806615065 79.31838328246339 20] 1357.9355413680578]
Test Case: 1175 | Input/Output: [[57.83613544350408 12.17208968859582 13] 88.66943629389166]
Test Case: 1176 | Input/Output: [[68.15719996763413 20.515405537038102 4] 125.8152847202944]
Test Case: 1177 | Input/Output: [[87.64591323441576 2.5736336461782674 13] 92.94889729685036]
Test Case: 1178 | Input/Output: [[19.51358880879915 13.296211355882942 17] 102.82391982740182]
Test Case: 1179 | Input/Output: [[71.79447310071099 41.938264866677095 4] 241.64683492398197]
Test Case: 1180 | Input/Output: [[6.007936236098436 4.986679391232575 3] 27.694786604845653]
Test Case: 1181 | Input/Output: [[33.47879061957566 29.563680284862663 9] 363.06894363046166]
Test Case: 1182 | Input/Output: [[56.32471556622296 38.89818065840397 6] 274.38258032590574]
Test Case: 1183 | Input/Output: [[74.99738314921204 66.98937373079255 11] 945.751569426955]
Test Case: 1184 | Input/Output: [[51.90379697425966 23.606484276892235 3] 125.47290462746462]
Test Case: 1185 | Input/Output: [[10.789885017911706 3.249846264405745 11] 20.090984955343203]
Test Case: 1186 | Input/Output: [[22.89646004278932 22.695214611196185 16] 683.2973888006761]
Test Case: 1187 | Input/Output: [[80.79724417858972 7.359997500411388 9] 96.99250040440296]
Test Case: 1188 | Input/Output: [[39.49896549052368 7.080404613057121 7] 56.75224125700968]
Test Case: 1189 | Input/Output: [[79.04375120701899 40.00317017809701 4] 225.21743951342535]
Test Case: 1190 | Input/Output: [[37.99275577539385 8.240961776290437 20] 59.04001422404595]
Test Case: 1191 | Input/Output: [[41.24967641408468 8.491484625445448 3] 62.08852845181413]
Test Case: 1192 | Input/Output: [[7.742675901410447 2.9460803125729864 17] 17.253814070918377]
Test Case: 1193 | Input/Output: [[4.153905039640206 4.064431810208154 14] 100.25707137659565]
Test Case: 1194 | Input/Output: [[5.709709235319295 1.3793741392665635 5] 9.339530611768854]
Test Case: 1195 | Input/Output: [[63.75492086990629 56.353724462562695 7] 598.4697603210238]
Test Case: 1196 | Input/Output: [[63.95984236636263 51.300854283843535 3] 281.8596684745908]
Test Case: 1197 | Input/Output: [[14.67608385934862 2.57911573076112 13] 20.934068245642813]
Test Case: 1198 | Input/Output: [[28.883170829365792 17.520951581381066 3] 91.62938219231506]
Test Case: 1199 | Input/Output: [[83.97325154966646 41.6852697458613 16] 249.52269653408703]
Test Case: 1200 | Input/Output: [[9.31990647395318 8.955639058677502 17] 230.17173358211733]
Test Case: 1201 | Input/Output: [[45.2054364641835 3.0855615083280963 6] 51.82863010320645]
Test Case: 1202 | Input/Output: [[14.430434781654553 13.731589858750166 18] 343.5549942968152]
Test Case: 1203 | Input/Output: [[85.32857418004365 39.37667810893985 6] 229.33016399397124]
Test Case: 1204 | Input/Output: [[78.64855246585338 73.04379299065472 10] 1112.3132897646333]
Test Case: 1205 | Input/Output: [[53.67457086147969 11.303525129054483 12] 82.31261051470165]
Test Case: 1206 | Input/Output: [[94.6028513029959 13.299662055894863 1] 107.90251335889076]
Test Case: 1207 | Input/Output: [[64.139732848995 25.714841634555174 19] 149.98736443744335]
Test Case: 1208 | Input/Output: [[11.975705527473478 4.593798362210987 12] 26.88051787895469]
Test Case: 1209 | Input/Output: [[19.184245117678003 17.30722797935161 13] 275.1635715506495]
Test Case: 1210 | Input/Output: [[20.473803398354537 18.218192230465498 3] 103.75745210360937]
Test Case: 1211 | Input/Output: [[72.204587315214 38.21359106831358 4] 216.151739733513]
Test Case: 1212 | Input/Output: [[70.60503357357408 14.0119738552237 12] 105.56747876184934]
Test Case: 1213 | Input/Output: [[38.42056082433986 12.241781907857389 17] 74.35318626343853]
Test Case: 1214 | Input/Output: [[47.46445820334944 13.731403838395204 8] 86.10207334858517]
Test Case: 1215 | Input/Output: [[71.0866351271923 66.57806931241548 19] 1545.5423260325636]
Test Case: 1216 | Input/Output: [[52.70936473899525 46.70430761672368 11] 641.9403215365991]
Test Case: 1217 | Input/Output: [[72.13729083043835 1.068519084351439 18] 74.30645937022301]
Test Case: 1218 | Input/Output: [[46.45351172748909 38.4694051034311 5] 301.6597655856508]
Test Case: 1219 | Input/Output: [[33.16176930901239 31.437692175394563 11] 551.8973806199159]
Test Case: 1220 | Input/Output: [[82.30155283822879 70.88338140119352 14] 967.710153060234]
Test Case: 1221 | Input/Output: [[41.25282187076009 25.06664784461521 12] 168.59660607918585]
Test Case: 1222 | Input/Output: [[45.83576022658301 26.30057883397436 14] 169.183852352051]
Test Case: 1223 | Input/Output: [[55.64559209779527 14.798658487649275 13] 95.96587888771134]
Test Case: 1224 | Input/Output: [[86.33692816884218 12.76850386717778 15] 116.3061277684272]
Test Case: 1225 | Input/Output: [[62.37323646754205 44.652404770569525 11] 367.1706980301032]
Test Case: 1226 | Input/Output: [[91.64587908959058 74.8527925729766 18] 884.8686721983312]
Test Case: 1227 | Input/Output: [[11.27674568396395 4.891517055924224 11] 28.55132459497726]
Test Case: 1228 | Input/Output: [[10.294936754385976 4.260438078761759 11] 24.830153459435373]
Test Case: 1229 | Input/Output: [[17.014713253614417 16.14321744898752 18] 396.10036180046063]
Test Case: 1230 | Input/Output: [[94.22137233889164 18.706441970133056 15] 140.90211807873126]
Test Case: 1231 | Input/Output: [[27.161512835955605 18.69187385400072 16] 146.67636193471157]
Test Case: 1232 | Input/Output: [[9.462903750340857 5.942227456144663 14] 41.344667376068514]
Test Case: 1233 | Input/Output: [[29.59686635298547 24.362613341434937 2] 98.37613994378518]
Test Case: 1234 | Input/Output: [[34.51089977633439 20.516597426127262 13] 135.54432630796654]
Test Case: 1235 | Input/Output: [[98.75082229463196 90.02382985515719 19] 1767.844677558386]
Test Case: 1236 | Input/Output: [[55.04916974725455 4.039510120679736 16] 63.76797634965245]
Test Case: 1237 | Input/Output: [[79.8355244482554 67.13590445887523 1] 146.97142890713064]
Test Case: 1238 | Input/Output: [[93.49635997747048 60.89511230191188 7] 420.7617564305476]
Test Case: 1239 | Input/Output: [[41.49647906249677 30.505213167885177 1] 72.00169223038195]
Test Case: 1240 | Input/Output: [[1.8541654196821984 1.6716029883325858 9] 21.72077887795968]
Test Case: 1241 | Input/Output: [[62.8628452552921 38.21705173171188 6] 244.80313860268163]
Test Case: 1242 | Input/Output: [[42.04194192648858 1.4287548237412326 1] 43.47069675022981]
Test Case: 1243 | Input/Output: [[61.15603369874714 2.709271748310414 10] 66.82575119964612]
Test Case: 1244 | Input/Output: [[38.6476065660391 37.10308064322562 16] 908.4693383106046]
Test Case: 1245 | Input/Output: [[11.135526139600064 5.567376698828297 16] 33.40297885676224]
Test Case: 1246 | Input/Output: [[26.35845921542933 12.402718912259031 16] 73.20851686993058]
Test Case: 1247 | Input/Output: [[21.18645904131017 18.919167680723056 17] 320.04865652296803]
Test Case: 1248 | Input/Output: [[56.69999262754626 3.073033116568791 17] 63.19825234339364]
Test Case: 1249 | Input/Output: [[94.25563708845476 86.61103480384855 12] 1421.86327343042]
Test Case: 1250 | Input/Output: [[11.86016280412136 6.311999926549087 14] 38.84047493722098]
Test Case: 1251 | Input/Output: [[9.087317565257663 5.43172088442407 1] 14.519038449681734]
Test Case: 1252 | Input/Output: [[31.487800615213192 23.66955088469402 20] 221.4075923155068]
Test Case: 1253 | Input/Output: [[30.700102271272087 11.339333841207456 14] 66.66129300903457]
Test Case: 1254 | Input/Output: [[13.643751827994231 12.515130751053483 1] 26.15888257904772]
Test Case: 1255 | Input/Output: [[9.036831027879826 3.927243791374576 1] 12.9640748192544]
Test Case: 1256 | Input/Output: [[43.44683239813346 30.52965891638124 18] 248.38534131597407]
Test Case: 1257 | Input/Output: [[54.32197213060977 8.18994425232059 5] 73.60409278201865]
Test Case: 1258 | Input/Output: [[56.464455648415466 19.29945067032692 1] 75.76390631874239]
Test Case: 1259 | Input/Output: [[77.64273961691333 41.71569186129666 9] 256.9858424147627]
Test Case: 1260 | Input/Output: [[68.56684340317297 51.96570115678503 5] 373.351069167432]
Test Case: 1261 | Input/Output: [[99.69388096921324 10.8392262709394 8] 124.01684823850968]
Test Case: 1262 | Input/Output: [[65.68066050986151 27.837999502981635 9] 162.24166578529974]
Test Case: 1263 | Input/Output: [[71.93122463193129 52.06948306807995 9] 424.5721221855599]
Test Case: 1264 | Input/Output: [[17.21140685831159 5.6830490565264284 3] 32.950086469539166]
Test Case: 1265 | Input/Output: [[28.27599503091993 7.876493065141901 8] 50.10958221048609]
Test Case: 1266 | Input/Output: [[38.33198331431642 18.973466280978677 11] 113.42148151067808]
Test Case: 1267 | Input/Output: [[95.93750014076838 48.43505871182453 13] 291.5392164232143]
Test Case: 1268 | Input/Output: [[97.16985101472892 63.20421038337702 5] 405.3832765909333]
Test Case: 1269 | Input/Output: [[29.810848462618686 20.062226213232364 13] 151.62376787675288]
Test Case: 1270 | Input/Output: [[70.124622792566 60.0643890736381 1] 130.1890118662041]
Test Case: 1271 | Input/Output: [[56.81705591691129 50.621674108269445 9] 636.7357212126768]
Test Case: 1272 | Input/Output: [[95.03264040749598 37.32863727711924 6] 217.18494742713312]
Test Case: 1273 | Input/Output: [[44.02048294208021 30.84614569698125 2] 127.32736498344585]
Test Case: 1274 | Input/Output: [[48.241535453370766 17.07423814112373 3] 96.61511837152663]
Test Case: 1275 | Input/Output: [[77.83977415406096 60.66890903657147 9] 561.249014925072]
Test Case: 1276 | Input/Output: [[32.607240129408794 5.538919648720855 13] 45.95190869824149]
Test Case: 1277 | Input/Output: [[8.297265218511598 3.121972712687372 8] 18.30048830874265]
Test Case: 1278 | Input/Output: [[1.0749702176314284 1.0430901768183642 3] 6.167600281588651]
Test Case: 1279 | Input/Output: [[7.223569609212911 6.995666008343757 13] 153.6040656035543]
Test Case: 1280 | Input/Output: [[16.286076995681718 8.94667472518992 13] 55.96804573796406]
Test Case: 1281 | Input/Output: [[37.28102495374025 19.81577577314445 20] 121.87746553819994]
Test Case: 1282 | Input/Output: [[72.62415692544624 48.44231226297779 11] 359.36443008772284]
Test Case: 1283 | Input/Output: [[83.59250697625059 71.78170063637842 18] 1028.8046137618207]
Test Case: 1284 | Input/Output: [[38.11672662586616 11.1624676615755 4] 69.17446246529178]
Test Case: 1285 | Input/Output: [[47.980299742184194 34.975033604709786 15] 303.37876546236544]
Test Case: 1286 | Input/Output: [[4.84892837935222 1.7360998879787966 10] 10.257303112592815]
Test Case: 1287 | Input/Output: [[62.76547251630453 27.82358028070558 10] 162.6757522909222]
Test Case: 1288 | Input/Output: [[55.73043620492938 53.42250540118982 1] 109.1529416061192]
Test Case: 1289 | Input/Output: [[13.751544465020634 3.86707786743104 20] 24.511516920988104]
Test Case: 1290 | Input/Output: [[5.766368240713042 3.788150840603109 4] 22.663524436120245]
Test Case: 1291 | Input/Output: [[52.21598149249503 46.95912563330592 5] 405.5868662887776]
Test Case: 1292 | Input/Output: [[79.97013384673076 41.41758288274433 12] 251.70258307344392]
Test Case: 1293 | Input/Output: [[92.4996821650338 91.65514115479104 1] 184.15482331982489]
Test Case: 1294 | Input/Output: [[32.09929350608638 29.206262700485976 11] 439.5355632238289]
Test Case: 1295 | Input/Output: [[93.2940899695584 66.97654490322978 18] 566.6917709355641]
Test Case: 1296 | Input/Output: [[2.2865882035323697 1.823728622340004 14] 19.44960816912401]
Test Case: 1297 | Input/Output: [[59.12078760942508 45.17884507436611 3] 244.9109477256637]
Test Case: 1298 | Input/Output: [[32.3393749741964 31.41765909393626 13] 700.9120084790769]
Test Case: 1299 | Input/Output: [[98.98838974016036 79.30600958470718 20] 886.0506960100596]
Test Case: 1300 | Input/Output: [[33.763293451859866 32.26627344389011 18] 830.9029444281811]
Test Case: 1301 | Input/Output: [[42.67095956982072 19.77722943134691 3] 104.80666475208874]
Test Case: 1302 | Input/Output: [[37.742660395268 31.72707664149511 19] 419.7679283505012]
Test Case: 1303 | Input/Output: [[5.317341451997428 1.6072149529712847 5] 9.899214382444118]
Test Case: 1304 | Input/Output: [[26.65018926738427 14.07226634687113 6] 84.41273015260053]
Test Case: 1305 | Input/Output: [[96.48252796731455 75.2050490404209 5] 554.5100363937045]
Test Case: 1306 | Input/Output: [[44.76808735431513 42.36609032008565 20] 1085.003416117493]
Test Case: 1307 | Input/Output: [[12.96289943485179 2.0695586577263367 2] 17.432426874173533]
Test Case: 1308 | Input/Output: [[40.21777202906978 28.04849285797813 5] 188.38702656821656]
Test Case: 1309 | Input/Output: [[90.1434797910098 64.61888010173023 8] 508.4533787832873]
Test Case: 1310 | Input/Output: [[10.516761094001147 1.613810804974654 18] 14.329443864371076]
Test Case: 1311 | Input/Output: [[48.75565436557076 27.26206735992442 8] 170.78939643834894]
Test Case: 1312 | Input/Output: [[54.746078746768944 49.059452650187175 1] 103.80553139695613]
Test Case: 1313 | Input/Output: [[94.49933043843738 73.442594815794 13] 725.2559291525489]
Test Case: 1314 | Input/Output: [[16.398076047238852 7.385162537732556 10] 43.2563200713764]
Test Case: 1315 | Input/Output: [[96.9264387018673 83.17330683759181 5] 678.7115308292812]
Test Case: 1316 | Input/Output: [[91.4139174688452 63.37238297261116 16] 503.15915899081466]
Test Case: 1317 | Input/Output: [[98.48242303420552 53.77618295688729 7] 330.5522085899128]
Test Case: 1318 | Input/Output: [[26.455406623403093 21.95356954142058 17] 272.54233659549885]
Test Case: 1319 | Input/Output: [[33.223196942118854 13.93174296130228 12] 81.20650333546992]
Test Case: 1320 | Input/Output: [[37.696759862334446 9.745887966951978 17] 63.98491279487472]
Test Case: 1321 | Input/Output: [[3.504680244178708 1.0253117551195123 20] 6.40331338566188]
Test Case: 1322 | Input/Output: [[11.739415639872725 3.717430541739428 12] 22.619607813560187]
Test Case: 1323 | Input/Output: [[90.43825181329888 71.05016802469243 10] 685.8173323422504]
Test Case: 1324 | Input/Output: [[58.54377973352995 3.692955011137917 16] 66.42696274431174]
Test Case: 1325 | Input/Output: [[53.78667899377397 37.59938838572001 19] 303.31781293290624]
Test Case: 1326 | Input/Output: [[43.142043277097024 39.75340309257672 7] 460.0930947271032]
Test Case: 1327 | Input/Output: [[85.48199065195611 79.039183428493 15] 1509.024997481591]
Test Case: 1328 | Input/Output: [[31.422615844634496 2.6932330190589333 13] 37.31403557940952]
Test Case: 1329 | Input/Output: [[96.37248269106604 25.92502127284792 2] 155.1965775420684]
Test Case: 1330 | Input/Output: [[19.76374732477545 4.990906044290078 19] 33.1178483798648]
Test Case: 1331 | Input/Output: [[17.257191615953122 14.872162927712004 7] 150.4020123427801]
Test Case: 1332 | Input/Output: [[74.5420350651871 71.83773237234561 16] 1801.0224241930912]
Test Case: 1333 | Input/Output: [[20.732116952276336 10.14186755330921 15] 60.43946200243337]
Test Case: 1334 | Input/Output: [[21.95507992646962 18.739163983650577 19] 264.1156998955992]
Test Case: 1335 | Input/Output: [[56.58535077695639 40.0739900606393 18] 330.5916352613402]
Test Case: 1336 | Input/Output: [[91.56048312295177 60.589332517970334 19] 449.626578470856]
Test Case: 1337 | Input/Output: [[13.25623078756047 2.915469967628773 9] 20.73111866396212]
Test Case: 1338 | Input/Output: [[93.41976277610527 73.75387281956436 4] 485.616781531742]
Test Case: 1339 | Input/Output: [[91.04109910157771 30.142172475581752 10] 181.1605616191688]
Test Case: 1340 | Input/Output: [[50.9693199176884 7.559363458942784 19] 68.72080577857545]
Test Case: 1341 | Input/Output: [[99.39438903506846 42.090235877661605 20] 245.40590153083]
Test Case: 1342 | Input/Output: [[65.16060950253468 53.66745227377614 13] 619.6341589226698]
Test Case: 1343 | Input/Output: [[67.95172631833725 47.683792142703325 14] 384.9660792362309]
Test Case: 1344 | Input/Output: [[69.14551508352329 61.51401166403157 11] 856.8020590101092]
Test Case: 1345 | Input/Output: [[59.91879204401516 40.01096643553296 10] 295.4682409976447]
Test Case: 1346 | Input/Output: [[15.107728439451868 2.663431491433206 17] 21.574690797780423]
Test Case: 1347 | Input/Output: [[86.27240684344297 76.82507711525142 9] 964.96276674789]
Test Case: 1348 | Input/Output: [[29.52777879606323 28.33163359578132 11] 522.0086644649597]
Test Case: 1349 | Input/Output: [[14.598681361640248 9.440924106349811 12] 67.67839446117046]
Test Case: 1350 | Input/Output: [[22.50976946274448 17.97914921869082 2] 72.82849081201978]
Test Case: 1351 | Input/Output: [[95.84388098559748 88.18912577447098 9] 1214.852585048485]
Test Case: 1352 | Input/Output: [[73.56676159860164 26.601562949445068 6] 156.55393098365664]
Test Case: 1353 | Input/Output: [[23.506461835864428 8.342525326789794 10] 49.36932214329306]
Test Case: 1354 | Input/Output: [[77.1165796328374 18.460801897596085 19] 125.65856366657027]
Test Case: 1355 | Input/Output: [[16.125071397475985 4.587284963595355 4] 28.75774564829888]
Test Case: 1356 | Input/Output: [[17.195116569426066 3.546467297300281 1] 20.741583866726348]
Test Case: 1357 | Input/Output: [[10.599979393717646 2.956726110479853 3] 18.39296269002491]
Test Case: 1358 | Input/Output: [[4.578716920810008 1.7270322693199387 1] 6.305749190129946]
Test Case: 1359 | Input/Output: [[66.45169819281064 14.722029851113206 4] 104.02419951749432]
Test Case: 1360 | Input/Output: [[36.73897780278421 36.161461825468535 1] 72.90043962825274]
Test Case: 1361 | Input/Output: [[94.54720237149554 45.58786124173746 16] 270.6177122437608]
Test Case: 1362 | Input/Output: [[50.37175038091315 2.896181419116116 13] 56.5174683106202]
Test Case: 1363 | Input/Output: [[57.9263069677795 33.00796230193414 14] 211.30945055261387]
Test Case: 1364 | Input/Output: [[59.90544772153102 58.10311153282176 8] 850.4182784403438]
Test Case: 1365 | Input/Output: [[9.51749057780653 2.9019900299931507 17] 17.867474788575947]
Test Case: 1366 | Input/Output: [[98.58813198908427 88.25091623802162 7] 961.2855661551214]
Test Case: 1367 | Input/Output: [[7.487389875476968 7.249088349169161 3] 42.81730677401785]
Test Case: 1368 | Input/Output: [[66.2206864754946 41.873248443566695 3] 219.6650939484075]
Test Case: 1369 | Input/Output: [[79.46599137750405 47.08092914600757 7] 302.5622685399801]
Test Case: 1370 | Input/Output: [[60.86281562617341 10.007293574811396 17] 84.81585100627333]
Test Case: 1371 | Input/Output: [[15.01113554691918 2.144389058829111 9] 20.01468659485165]
Test Case: 1372 | Input/Output: [[58.47253206769255 3.487386605308563 15] 65.88967440705912]
Test Case: 1373 | Input/Output: [[12.3263796310697 3.200384968514929 20] 20.97182846703846]
Test Case: 1374 | Input/Output: [[50.16146386137696 5.249051195848386 8] 61.88651069289372]
Test Case: 1375 | Input/Output: [[39.38213077996282 36.20896513133222 19] 748.0096006164165]
Test Case: 1376 | Input/Output: [[55.97778245185463 33.09983090045141 11] 217.2817330609977]
Test Case: 1377 | Input/Output: [[87.04173275182727 72.57269222688255 19] 929.841114930771]
Test Case: 1378 | Input/Output: [[49.4561997115534 12.257189642273644 17] 82.04814361518223]
Test Case: 1379 | Input/Output: [[51.626095285792914 36.562333898533886 17] 301.37957145927913]
Test Case: 1380 | Input/Output: [[16.459456174320028 9.442559591661418 4] 54.17693235088499]
Test Case: 1381 | Input/Output: [[27.125364161217966 27.078221129727588 14] 750.3370038415328]
Test Case: 1382 | Input/Output: [[76.25321693547079 33.09928117104674 8] 192.9828734207039]
Test Case: 1383 | Input/Output: [[26.37104204213719 17.421673977784604 12] 128.15185779619475]
Test Case: 1384 | Input/Output: [[98.75814414043114 60.334476452267616 3] 315.66666461879225]
Test Case: 1385 | Input/Output: [[20.06378422510954 7.484670349657108 2] 37.82523483353095]
Test Case: 1386 | Input/Output: [[22.26550506839661 21.094648337559057 13] 416.0134065947092]
Test Case: 1387 | Input/Output: [[74.73330275876792 3.410860334996838 1] 78.14416309376476]
Test Case: 1388 | Input/Output: [[46.82757828976611 17.207117655314754 9] 101.22136556160297]
Test Case: 1389 | Input/Output: [[69.60285019833074 12.909624369814251 4] 101.18152042783632]
Test Case: 1390 | Input/Output: [[10.357996613956235 3.024487194147751 12] 18.901682693417715]
Test Case: 1391 | Input/Output: [[96.07336434127184 65.9285946017355 19] 515.9074214170167]
Test Case: 1392 | Input/Output: [[72.46888258360717 11.54589188454834 20] 99.93693294241189]
Test Case: 1393 | Input/Output: [[75.62473204072013 48.52991592926853 6] 322.3298647664584]
Test Case: 1394 | Input/Output: [[59.81843127659439 13.72499752262785 11] 95.4420572517582]
Test Case: 1395 | Input/Output: [[25.82179471724469 20.74145238078881 6] 173.0963185746997]
Test Case: 1396 | Input/Output: [[89.63556221686736 86.2669193321783 13] 1835.90630733764]
Test Case: 1397 | Input/Output: [[77.6317370421851 21.34133354560755 11] 136.49655580594575]
Test Case: 1398 | Input/Output: [[76.93418272076809 11.55524685686274 15] 104.12928644165952]
Test Case: 1399 | Input/Output: [[32.11594081416689 20.74547599641376 4] 123.3122204228234]
Test Case: 1400 | Input/Output: [[77.12034906242378 37.772074056345154 15] 225.17748030550035]
Test Case: 1401 | Input/Output: [[37.033444918192615 10.322824786638924 20] 65.65799632002253]
Test Case: 1402 | Input/Output: [[59.35808981227506 48.42380516412709 20] 575.1343918095664]
Test Case: 1403 | Input/Output: [[35.197061723888254 14.42910928779393 1] 49.62617101168218]
Test Case: 1404 | Input/Output: [[90.7055926258704 60.98609687040175 14] 461.1855802320085]
Test Case: 1405 | Input/Output: [[69.42795295413002 39.33939860510591 12] 250.7007670965747]
Test Case: 1406 | Input/Output: [[18.973035621158832 11.915271490416488 1] 30.88830711157532]
Test Case: 1407 | Input/Output: [[16.27343957284817 7.22519274740641 2] 33.9317155140869]
Test Case: 1408 | Input/Output: [[89.26502318257027 70.75063865549106 20] 764.1132050599341]
Test Case: 1409 | Input/Output: [[53.317620158750536 40.13664336767093 9] 348.6801117443145]
Test Case: 1410 | Input/Output: [[54.642293117169714 32.1437258348078 1] 86.78601895197751]
Test Case: 1411 | Input/Output: [[10.522801386131388 4.031192697955378 14] 23.59177398456571]
Test Case: 1412 | Input/Output: [[4.984382497867754 4.008898977779052 6] 33.51336054440087]
Test Case: 1413 | Input/Output: [[63.42682608339116 54.67335036548314 14] 748.7429093220705]
Test Case: 1414 | Input/Output: [[87.07415884707088 54.284430541409854 4] 318.67768156276867]
Test Case: 1415 | Input/Output: [[40.60737380881083 6.588230481349121 1] 47.19560429015995]
Test Case: 1416 | Input/Output: [[13.909386404970723 13.720927068299032 17] 422.0928275740399]
Test Case: 1417 | Input/Output: [[45.258291099534695 35.82986050381571 18] 383.4303898514131]
Test Case: 1418 | Input/Output: [[63.20883059921671 20.91925552900125 4] 124.23492245679404]
Test Case: 1419 | Input/Output: [[71.90137160534155 62.28494280540571 19] 937.7320302205386]
Test Case: 1420 | Input/Output: [[90.64330746398414 76.33855048766296 18] 1010.0249437757692]
Test Case: 1421 | Input/Output: [[11.299285750517353 7.801521718758668 8] 58.5171621845271]
Test Case: 1422 | Input/Output: [[67.9463671751405 61.32923396034361 11] 897.3757340223138]
Test Case: 1423 | Input/Output: [[93.42297210095678 82.86150382803156 14] 1268.5918784343155]
Test Case: 1424 | Input/Output: [[3.9904945473973408 2.456788404104667 1] 6.447282951502007]
Test Case: 1425 | Input/Output: [[45.49525343958065 40.02350841251483 14] 592.8059056973638]
Test Case: 1426 | Input/Output: [[20.724745220419777 12.510828429336462 12] 83.66114556801158]
Test Case: 1427 | Input/Output: [[15.581334599836822 5.352356475694258 6] 31.834942658416875]
Test Case: 1428 | Input/Output: [[4.260424070631367 2.2137326626545355 5] 12.96626291460032]
Test Case: 1429 | Input/Output: [[90.2671717928944 15.789821919936234 19] 128.54196476176887]
Test Case: 1430 | Input/Output: [[13.90874384756902 2.403047791928871 14] 19.71862723032102]
Test Case: 1431 | Input/Output: [[43.88939845969706 27.40920832728114 8] 185.48654014665289]
Test Case: 1432 | Input/Output: [[27.843764815862947 17.111911281522694 11] 116.08642978092814]
Test Case: 1433 | Input/Output: [[46.15516424837754 25.395836955636923 16] 159.07138974683664]
Test Case: 1434 | Input/Output: [[44.90278651341407 4.053917185138673 18] 53.81525730773741]
Test Case: 1435 | Input/Output: [[69.69806249273854 29.98578800996629 13] 174.94971268709577]
Test Case: 1436 | Input/Output: [[29.380784365723144 17.38307555155155 16] 114.49261768555468]
Test Case: 1437 | Input/Output: [[93.71093542577078 44.6594315844504 9] 264.0158587115529]
Test Case: 1438 | Input/Output: [[68.48585544185559 31.43626064241749 14] 184.70176101155425]
Test Case: 1439 | Input/Output: [[45.37908989648987 13.638379411482967 17] 84.37615253382548]
Test Case: 1440 | Input/Output: [[58.86096156858214 30.906496171239063 11] 188.8563882655868]
Test Case: 1441 | Input/Output: [[79.30002768543272 5.478455153579183 11] 91.07007347007432]
Test Case: 1442 | Input/Output: [[39.238113981586096 8.864852181000007 10] 62.14245366636195]
Test Case: 1443 | Input/Output: [[85.74223201949698 36.553866377362624 3] 196.6611633652149]
Test Case: 1444 | Input/Output: [[2.921097081240477 1.0409257183497893 15] 6.155529924371462]
Test Case: 1445 | Input/Output: [[63.08711625363157 14.471992637274896 13] 100.64729078667771]
Test Case: 1446 | Input/Output: [[48.51299225139555 1.4604919006539077 10] 51.524642288641054]
Test Case: 1447 | Input/Output: [[14.665584552803455 5.48609439270983 7] 32.16226683594986]
Test Case: 1448 | Input/Output: [[91.9274073543308 38.31803335950784 2] 184.53555149440731]
Test Case: 1449 | Input/Output: [[42.70613775465696 14.005938684278137 2] 75.31141382764693]
Test Case: 1450 | Input/Output: [[64.51159626184082 36.222649272323 3] 189.054217677004]
Test Case: 1451 | Input/Output: [[53.7411713658687 25.692083877921103 15] 152.189256414911]
Test Case: 1452 | Input/Output: [[6.4520510371087845 3.033956106436023 9] 17.885811894301995]
Test Case: 1453 | Input/Output: [[96.86592964512444 71.51459864958447 4] 452.2297167125947]
Test Case: 1454 | Input/Output: [[47.30237003015015 43.62482338570637 5] 389.2298147152017]
Test Case: 1455 | Input/Output: [[6.01253079072681 2.697943161826121 15] 15.800360106660587]
Test Case: 1456 | Input/Output: [[37.67154419702887 8.35209435045186 7] 59.13261991641578]
Test Case: 1457 | Input/Output: [[61.54993232952451 5.682766718558937 13] 74.07155943929104]
Test Case: 1458 | Input/Output: [[9.132956436414938 6.053828076852071 20] 45.0332173186745]
Test Case: 1459 | Input/Output: [[20.16659822600033 2.4163162692213 3] 25.612955219096914]
Test Case: 1460 | Input/Output: [[97.083760374556 83.4706740170574 5] 682.6796267370206]
Test Case: 1461 | Input/Output: [[95.61142270688892 41.93503705959044 6] 243.26142200791296]
Test Case: 1462 | Input/Output: [[83.56531158573094 36.68242141187149 2] 173.0325297845089]
Test Case: 1463 | Input/Output: [[77.11190656487761 9.710350532675502 13] 99.33049280309083]
Test Case: 1464 | Input/Output: [[4.869785223725943 1.7636328460699031 11] 10.399640218329656]
Test Case: 1465 | Input/Output: [[53.61935100032135 33.70568919841408 2] 142.21848126804133]
Test Case: 1466 | Input/Output: [[75.9249563098808 36.94755729958474 18] 219.8664067161332]
Test Case: 1467 | Input/Output: [[41.92483149777718 18.25498308406949 12] 106.5875602937304]
Test Case: 1468 | Input/Output: [[74.72857484973385 51.88513615334867 3] 275.56046260019616]
Test Case: 1469 | Input/Output: [[34.5152907238187 7.145363806571162 18] 52.53684473906063]
Test Case: 1470 | Input/Output: [[23.490439048057944 19.566591625229105 5] 154.40668310192723]
Test Case: 1471 | Input/Output: [[70.83466183032483 29.04571833831016 4] 164.51657652362363]
Test Case: 1472 | Input/Output: [[58.3284828543079 25.226038903068893 1] 83.55452175737679]
Test Case: 1473 | Input/Output: [[12.161968490563886 5.405614010724657 8] 31.574862665386803]
Test Case: 1474 | Input/Output: [[54.749055269150325 33.204137087406856 17] 223.4576183283641]
Test Case: 1475 | Input/Output: [[24.634283764112453 4.102510019995192 17] 34.47877127737216]
Test Case: 1476 | Input/Output: [[17.623126276025683 12.044090571361156 11] 92.28951988557183]
Test Case: 1477 | Input/Output: [[43.7242650933184 18.3540825984656 4] 103.66713968844932]
Test Case: 1478 | Input/Output: [[85.3951503902804 10.094228491703149 15] 108.2899074572838]
Test Case: 1479 | Input/Output: [[38.783106454439945 4.203708340570167 3] 48.15119161133286]
Test Case: 1480 | Input/Output: [[31.94574977186108 7.81979412542074 1] 39.76554389728182]
Test Case: 1481 | Input/Output: [[53.55238592685309 21.869808025483056 14] 127.48406893098957]
Test Case: 1482 | Input/Output: [[67.89768372069325 37.69639968138876 5] 224.8710954466168]
Test Case: 1483 | Input/Output: [[74.35877464555972 39.68572618573166 1] 114.04450083129136]
Test Case: 1484 | Input/Output: [[77.9249934889785 1.4936854409431892 4] 80.97073517701344]
Test Case: 1485 | Input/Output: [[62.77351536194747 21.089175579658825 6] 126.10939310084936]
Test Case: 1486 | Input/Output: [[75.808790019982 35.56574788816877 18] 209.8041889109107]
Test Case: 1487 | Input/Output: [[13.647378627364482 1.4398648729163548 13] 16.866769824234247]
Test Case: 1488 | Input/Output: [[34.25504295267668 32.10768892025067 5] 292.7398396627183]
Test Case: 1489 | Input/Output: [[18.97565729338853 16.38675081847336 18] 240.70186914471057]
Test Case: 1490 | Input/Output: [[74.37840392653776 15.245252250673044 10] 112.72971968175251]
Test Case: 1491 | Input/Output: [[84.20203718379955 9.212575913966914 12] 104.89074853151504]
Test Case: 1492 | Input/Output: [[56.20659189050656 27.24493637088053 1] 83.4515282613871]
Test Case: 1493 | Input/Output: [[70.91815892597324 28.764606420106624 20] 167.70397069081923]
Test Case: 1494 | Input/Output: [[6.193136913246276 4.128891041008725 13] 30.80889166975696]
Test Case: 1495 | Input/Output: [[75.94320614607561 45.04382366673035 17] 297.3154582030033]
Test Case: 1496 | Input/Output: [[32.21068835913074 28.03243040466479 14] 398.02219199799663]
Test Case: 1497 | Input/Output: [[63.05700628606748 60.13086271027174 6] 658.5039352010469]
Test Case: 1498 | Input/Output: [[98.4617778025093 36.22117262566616 13] 213.0617582850427]
Test Case: 1499 | Input/Output: [[67.520914874266 44.90395563252737 8] 322.79232021568504]
Test Case: 1500 | Input/Output: [[24.82514099614985 20.488021042805958 1] 45.31316203895581]
Test Case: 1501 | Input/Output: [[76.68392015075756 24.218431286781357 14] 147.47955691292836]
Test Case: 1502 | Input/Output: [[58.16386668561454 37.92030617774722 16] 275.7752705650034]
Test Case: 1503 | Input/Output: [[89.83656158620201 9.360533256539783 9] 110.73516039019164]
Test Case: 1504 | Input/Output: [[46.6147480750432 38.92204685710248 13] 468.6215099059108]
Test Case: 1505 | Input/Output: [[81.05207753861755 79.70933533504885 2] 318.85958714887045]
Test Case: 1506 | Input/Output: [[75.16087068801684 47.17583463734777 5] 296.5578318263833]
Test Case: 1507 | Input/Output: [[32.845687043456 24.08122203992724 3] 129.26333403662426]
Test Case: 1508 | Input/Output: [[35.496901003202154 6.482614782116904 15] 51.358930866432]
Test Case: 1509 | Input/Output: [[26.136573800148597 19.907113825638824 2] 81.11320115765803]
Test Case: 1510 | Input/Output: [[5.222368170172178 3.756929921592795 12] 31.38464358049729]
Test Case: 1511 | Input/Output: [[4.89669621130229 4.039528174309149 13] 46.86589195338706]
Test Case: 1512 | Input/Output: [[45.9115545132209 5.014177061431908 10] 57.169423709422354]
Test Case: 1513 | Input/Output: [[17.18433830181196 15.089984873275744 14] 221.88708451501805]
Test Case: 1514 | Input/Output: [[31.157207454206187 18.222501530983585 1] 49.379708985189765]
Test Case: 1515 | Input/Output: [[79.97366007445142 29.439831175402045 2] 149.690686310718]
Test Case: 1516 | Input/Output: [[77.2679236914011 11.783378638868044 16] 105.075315338996]
Test Case: 1517 | Input/Output: [[16.431524956379846 13.405752893603506 4] 90.24363541664508]
Test Case: 1518 | Input/Output: [[29.62740894536225 5.291759828475341 20] 42.51230316946144]
Test Case: 1519 | Input/Output: [[35.079544290744906 28.72418764154112 9] 293.8983136726944]
Test Case: 1520 | Input/Output: [[50.97199780403 40.757924345125744 10] 408.8505248148993]
Test Case: 1521 | Input/Output: [[22.26838841606235 16.98138830272369 1] 39.24977671878604]
Test Case: 1522 | Input/Output: [[28.83284082894538 1.504608228242606 2] 31.920573515508472]
Test Case: 1523 | Input/Output: [[76.98965135867886 62.799991759805714 11] 677.7903997036199]
Test Case: 1524 | Input/Output: [[67.6662774060081 57.7930143390184 4] 402.2961212161493]
Test Case: 1525 | Input/Output: [[63.66455233558119 15.45415410145894 4] 104.11795209568744]
Test Case: 1526 | Input/Output: [[49.31244478999238 31.07086375771846 4] 183.051167108156]
Test Case: 1527 | Input/Output: [[23.680997704425764 13.720243455152325 16] 88.90450603346227]
Test Case: 1528 | Input/Output: [[82.40694600821267 39.21522151889247 12] 232.01573197688256]
Test Case: 1529 | Input/Output: [[53.540981923455234 9.001844012377337 4] 75.12333492441962]
Test Case: 1530 | Input/Output: [[94.91911831552886 29.85745953063248 15] 182.037819389196]
Test Case: 1531 | Input/Output: [[83.74533746504818 61.650440270572496 14] 543.5211494958694]
Test Case: 1532 | Input/Output: [[7.833873784397433 3.7625782866200783 6] 22.039651936348672]
Test Case: 1533 | Input/Output: [[92.83035251011164 1.3490890315092705 9] 95.56832104159272]
Test Case: 1534 | Input/Output: [[46.17892394126433 11.208790783677902 18] 75.78189387890866]
Test Case: 1535 | Input/Output: [[97.72152250212278 85.81177626681408 20] 1393.9951808847054]
Test Case: 1536 | Input/Output: [[8.02640626477169 2.7573600627437678 2] 14.488379054412126]
Test Case: 1537 | Input/Output: [[14.399797031429433 7.035929295679924 2] 31.909502839309805]
Test Case: 1538 | Input/Output: [[9.462072713931702 6.0764487065312185 11] 43.09404037622426]
Test Case: 1539 | Input/Output: [[5.825755521177816 3.5634070610789 17] 24.17227998700413]
Test Case: 1540 | Input/Output: [[25.02865901513657 9.395307502926595 13] 55.11186688515097]
Test Case: 1541 | Input/Output: [[27.83528893414365 17.06504823332646 5] 105.9929685972281]
Test Case: 1542 | Input/Output: [[24.362409988780303 9.352814480866272 19] 54.72393393972508]
Test Case: 1543 | Input/Output: [[7.3652006143732 4.270091265006112 11] 27.61876076649444]
Test Case: 1544 | Input/Output: [[9.623265517262247 8.503037068654692 5] 71.84762413018726]
Test Case: 1545 | Input/Output: [[9.731263551112583 4.900084974828005 17] 29.471127996164554]
Test Case: 1546 | Input/Output: [[5.071989601977953 5.061268524010188 4] 40.40469754983744]
Test Case: 1547 | Input/Output: [[67.89649825094158 6.745073852991094 10] 82.87462505961868]
Test Case: 1548 | Input/Output: [[20.706826059472235 2.239655059090857 4] 25.725855088594223]
Test Case: 1549 | Input/Output: [[25.67929459292909 7.946809703099641 2] 44.03216320927779]
Test Case: 1550 | Input/Output: [[16.29025672085192 14.774602802630373 18] 276.3175233901648]
Test Case: 1551 | Input/Output: [[32.86818031400748 12.857895765505376 13] 75.10764654102447]
Test Case: 1552 | Input/Output: [[7.389090645684933 5.67180395105392 8] 49.425316026713126]
Test Case: 1553 | Input/Output: [[45.830002722120376 43.615701129548775 6] 475.877575617604]
Test Case: 1554 | Input/Output: [[69.66114000526257 29.63078594062369 19] 172.78858281963883]
Test Case: 1555 | Input/Output: [[97.6173776901182 96.89360441199658 9] 1699.5685723371623]
Test Case: 1556 | Input/Output: [[68.86831432991649 57.82404292932151 17] 749.5392057021771]
Test Case: 1557 | Input/Output: [[39.49831783852917 1.125542679557078 20] 41.81543159125982]
Test Case: 1558 | Input/Output: [[47.59970965878839 34.28894693791615 20] 292.4218196714463]
Test Case: 1559 | Input/Output: [[20.869590787223213 15.699893083398925 6] 120.86896539316044]
Test Case: 1560 | Input/Output: [[92.17596697069288 12.341239849322038 17] 120.6739842938374]
Test Case: 1561 | Input/Output: [[77.63302788280279 44.93037363322509 13] 290.71619129953154]
Test Case: 1562 | Input/Output: [[86.73541481199872 42.88643531172453 2] 193.71353718091964]
Test Case: 1563 | Input/Output: [[27.739228712182875 7.130720710582843 17] 46.93525169099572]
Test Case: 1564 | Input/Output: [[55.85400827679226 41.65880360763728 2] 170.24290231383142]
Test Case: 1565 | Input/Output: [[15.523819940425184 3.21998727925441 11] 23.64917405926976]
Test Case: 1566 | Input/Output: [[15.00194449414876 13.103620227802605 5] 109.18618723255172]
Test Case: 1567 | Input/Output: [[48.98389182212047 3.3706053173591872 15] 56.22324592601071]
Test Case: 1568 | Input/Output: [[38.52092041983872 34.24389089113737 13] 513.4481264835435]
Test Case: 1569 | Input/Output: [[61.2660218490568 9.902874869632749 10] 84.89034222933687]
Test Case: 1570 | Input/Output: [[4.454084560401606 2.8465438676954893 20] 20.225563644491388]
Test Case: 1571 | Input/Output: [[31.7121444237072 10.955932939657712 11] 65.18939734231282]
Test Case: 1572 | Input/Output: [[52.90878977063418 8.482772538917771 20] 73.11376220015177]
Test Case: 1573 | Input/Output: [[54.19126349525591 2.266894129243581 12] 58.922986143807535]
Test Case: 1574 | Input/Output: [[46.47824018416898 12.682462287955934 11] 81.36174959066366]
Test Case: 1575 | Input/Output: [[14.907528516766142 11.526196576191184 13] 112.42768315297992]
Test Case: 1576 | Input/Output: [[75.5726108329837 35.27825440830531 15] 207.90003375462888]
Test Case: 1577 | Input/Output: [[96.58637276802716 66.7732872233903 9] 510.1500325634538]
Test Case: 1578 | Input/Output: [[81.22649554924672 11.24982487414606 6] 107.34255216238068]
Test Case: 1579 | Input/Output: [[36.33875652167556 5.881208646254809 18] 50.37244103549469]
Test Case: 1580 | Input/Output: [[59.3895992612957 6.944279659364359 16] 75.11714142348542]
Test Case: 1581 | Input/Output: [[85.39265838148712 43.74524460570087 13] 264.7363295349101]
Test Case: 1582 | Input/Output: [[18.76849191523552 17.718648730898742 16] 392.6006939902943]
Test Case: 1583 | Input/Output: [[67.23154234213531 43.55480589564941 13] 313.4709584821948]
Test Case: 1584 | Input/Output: [[19.23205231538796 11.416956050375036 11] 75.1803058693467]
Test Case: 1585 | Input/Output: [[59.8613837319958 16.529721316695216 7] 105.51908733002288]
Test Case: 1586 | Input/Output: [[91.38384353050974 76.81559134841905 18] 1008.7673708219572]
Test Case: 1587 | Input/Output: [[37.447041344443406 33.1919673665769 15] 519.8537223286831]
Test Case: 1588 | Input/Output: [[45.1403854696619 15.251083524836885 10] 91.20458347929112]
Test Case: 1589 | Input/Output: [[54.189788461444856 11.446131764285193 5] 83.17728233620969]
Test Case: 1590 | Input/Output: [[70.66084125403404 40.13685455433716 16] 256.4585991384184]
Test Case: 1591 | Input/Output: [[89.6574392802292 82.92671161992688 16] 1639.3663971597907]
Test Case: 1592 | Input/Output: [[92.67136985628258 37.28962475190684 14] 217.46566767865312]
Test Case: 1593 | Input/Output: [[9.670448860801342 4.722455305133744 5] 27.34853696917053]
Test Case: 1594 | Input/Output: [[66.92907067554093 7.69360983828362 2] 83.20068382461949]
Test Case: 1595 | Input/Output: [[7.665518285483551 3.698927255796316 16] 21.96183373064176]
Test Case: 1596 | Input/Output: [[25.12260541821969 9.88760792686596 6] 57.51748565055219]
Test Case: 1597 | Input/Output: [[47.66366834601057 27.39325750007193 6] 170.1282588292575]
Test Case: 1598 | Input/Output: [[30.103271142808808 7.012043316368428 20] 48.38600985801644]
Test Case: 1599 | Input/Output: [[58.570793957876845 24.090411295113185 4] 136.3956238937503]
Test Case: 1600 | Input/Output: [[14.334378583764192 10.954977686007943 10] 99.97839516289967]
Test Case: 1601 | Input/Output: [[97.04145873757248 57.66678227253848 1] 154.70824101011095]
Test Case: 1602 | Input/Output: [[48.15287535369331 21.00251508702142 1] 69.15539044071473]
Test Case: 1603 | Input/Output: [[30.342965249500345 1.3753500433735917 9] 33.224265508010994]
Test Case: 1604 | Input/Output: [[4.44730579869681 2.024025525388706 5] 11.64456909805864]
Test Case: 1605 | Input/Output: [[70.07598697375822 44.21369000141824 20] 309.64618360427016]
Test Case: 1606 | Input/Output: [[27.5788389628091 19.61711923055751 1] 47.19595819336661]
Test Case: 1607 | Input/Output: [[50.77949496047856 41.055265389779976 5] 313.8874972544492]
Test Case: 1608 | Input/Output: [[44.61546460411537 9.550431689556918 5] 68.88772832637972]
Test Case: 1609 | Input/Output: [[28.92424407486944 23.700079491400075 14] 273.44437225112944]
Test Case: 1610 | Input/Output: [[2.0826171526853683 1.3085804845778024 11] 9.069338321135236]
Test Case: 1611 | Input/Output: [[97.70444963810546 36.245169491248014 13] 212.94491088029488]
Test Case: 1612 | Input/Output: [[19.587161091765623 9.814499763031504 4] 55.214550697699664]
Test Case: 1613 | Input/Output: [[73.47845911506995 6.991426533371211 7] 88.93166921494131]
Test Case: 1614 | Input/Output: [[52.881923776429566 42.76989606426213 4] 286.1857559465971]
Test Case: 1615 | Input/Output: [[58.13680005037241 32.425126298354016 10] 204.173603337582]
Test Case: 1616 | Input/Output: [[81.26573354727152 64.62124785798792 15] 689.3932825999335]
Test Case: 1617 | Input/Output: [[43.04848107556359 33.35434853951607 15] 331.89287385004616]
Test Case: 1618 | Input/Output: [[50.64926055826051 22.5862963963894 10] 132.1376215391392]
Test Case: 1619 | Input/Output: [[80.92067873443396 10.648269107843392 12] 105.4442484915776]
Test Case: 1620 | Input/Output: [[6.986468481851015 3.8753352886614985 9] 24.270387239007825]
Test Case: 1621 | Input/Output: [[55.42121263530927 41.78468588640972 3] 225.74945731020648]
Test Case: 1622 | Input/Output: [[66.17883498383594 31.23268053416552 16] 184.47070037574875]
Test Case: 1623 | Input/Output: [[48.650602167625856 23.590188870201704 8] 139.8148383676412]
Test Case: 1624 | Input/Output: [[74.1431511644658 27.74501572976073 8] 162.75233824730864]
Test Case: 1625 | Input/Output: [[8.840071390330088 1.6895463819134109 2] 12.542076374278077]
Test Case: 1626 | Input/Output: [[28.554920707735743 22.513520482549293 1] 51.06844119028504]
Test Case: 1627 | Input/Output: [[15.11533237205342 7.672906607651829 4] 43.20905313869196]
Test Case: 1628 | Input/Output: [[78.16872161380466 10.208495488706216 18] 101.65260581245164]
Test Case: 1629 | Input/Output: [[55.42462121596866 20.015651590165728 12] 118.08386519020756]
Test Case: 1630 | Input/Output: [[52.569209343537096 42.6812286792966 15] 484.1597630098868]
Test Case: 1631 | Input/Output: [[40.86669271873271 24.59393323937216 8] 161.56643039886978]
Test Case: 1632 | Input/Output: [[29.70088420317372 12.376199618893356 5] 71.2293719149614]
Test Case: 1633 | Input/Output: [[4.067637166884429 2.452384048650736 12] 16.38127813003788]
Test Case: 1634 | Input/Output: [[16.843428428738548 8.108163259375212 15] 48.11108500984863]
Test Case: 1635 | Input/Output: [[17.531785076403413 1.089253557326412 20] 19.85460978442513]
Test Case: 1636 | Input/Output: [[19.850518646273034 16.821165025896775 5] 135.30317619967605]
Test Case: 1637 | Input/Output: [[21.721645756372784 11.45753929236156 17] 70.21486702480507]
Test Case: 1638 | Input/Output: [[60.671158980641216 37.91900725863074 13] 262.3180521009191]
Test Case: 1639 | Input/Output: [[77.62068580326964 69.84068532424111 9] 902.5516054803228]
Test Case: 1640 | Input/Output: [[28.32698982675783 3.930271559780553 9] 37.45385291300807]
Test Case: 1641 | Input/Output: [[40.75080391355283 3.3795378178886653 9] 48.12111257201427]
Test Case: 1642 | Input/Output: [[60.67447737093693 51.80952924709919 17] 717.3608591301141]
Test Case: 1643 | Input/Output: [[3.04759147805793 2.852076949267764 14] 55.61437934698847]
Test Case: 1644 | Input/Output: [[71.62433817930706 42.49521900273832 3] 221.99907025694597]
Test Case: 1645 | Input/Output: [[55.37687443198438 15.783733654524877 1] 71.16060808650926]
Test Case: 1646 | Input/Output: [[97.3635782362392 46.67240169577645 7] 275.0437547822295]
Test Case: 1647 | Input/Output: [[45.1698020457148 7.880778866606697 2] 62.30631991342096]
Test Case: 1648 | Input/Output: [[44.707594752474016 39.27642220112306 8] 446.0330334950206]
Test Case: 1649 | Input/Output: [[84.87851857815555 8.96960437314885 18] 104.93747312751036]
Test Case: 1650 | Input/Output: [[36.18552200623723 27.23382148594257 11] 245.11021337774557]
Test Case: 1651 | Input/Output: [[12.136334965507505 10.296210999218628 12] 127.38313223731976]
Test Case: 1652 | Input/Output: [[24.735251705678003 18.577322467636154 16] 172.1954631110519]
Test Case: 1653 | Input/Output: [[23.30400815262684 10.426013631252689 8] 60.93984677104629]
Test Case: 1654 | Input/Output: [[87.79002169435415 37.495326961209415 16] 218.68688460137685]
Test Case: 1655 | Input/Output: [[46.71523490119042 36.531834809710894 16] 374.4164627730057]
Test Case: 1656 | Input/Output: [[57.45170712321436 55.156625469025535 16] 1350.6514078639084]
Test Case: 1657 | Input/Output: [[11.112680863251107 3.316156696062455 2] 18.73457499369432]
Test Case: 1658 | Input/Output: [[65.16513457000369 32.56052357466393 13] 195.29553643569372]
Test Case: 1659 | Input/Output: [[2.417613888436076 1.4058340498510875 11] 9.1125164488844]
Test Case: 1660 | Input/Output: [[28.784541585612008 24.37870721161836 20] 334.80551384494936]
Test Case: 1661 | Input/Output: [[42.31932344729096 7.853721824250041 2] 59.48427963590644]
Test Case: 1662 | Input/Output: [[88.3284233195891 71.36866926280467 14] 789.6800422588026]
Test Case: 1663 | Input/Output: [[3.0378813103782583 1.6281888577705343 15] 10.054492030205283]
Test Case: 1664 | Input/Output: [[34.65633464885668 15.762100159958004 13] 92.47561131383216]
Test Case: 1665 | Input/Output: [[1.8294539986120415 1.1760865688677176 10] 8.314176899275324]
Test Case: 1666 | Input/Output: [[26.898587754263087 18.638385540334863 3] 98.9537478395912]
Test Case: 1667 | Input/Output: [[26.825274853134356 3.092976399580979 19] 33.817428780763805]
Test Case: 1668 | Input/Output: [[7.136396727113925 6.764085337415794 8] 92.88445670978582]
Test Case: 1669 | Input/Output: [[22.42233988482442 21.73651318470286 14] 509.1592724703441]
Test Case: 1670 | Input/Output: [[59.39189280211309 13.326440253682431 10] 93.7552507938472]
Test Case: 1671 | Input/Output: [[56.12221021670268 14.853779526987026 9] 96.52181953770328]
Test Case: 1672 | Input/Output: [[55.81122752761583 46.56145427995552 2] 187.7788107059166]
Test Case: 1673 | Input/Output: [[12.227224597539958 2.8571297141128573 7] 19.68312749926405]
Test Case: 1674 | Input/Output: [[84.54570388346711 15.27830024735368 17] 121.8421686343484]
Test Case: 1675 | Input/Output: [[87.85478033379597 28.647437110128987 16] 172.87174249948183]
Test Case: 1676 | Input/Output: [[21.191467503203253 13.817334232838602 4] 82.42317807055595]
Test Case: 1677 | Input/Output: [[10.970034635730324 4.439502660362702 12] 25.88455185424119]
Test Case: 1678 | Input/Output: [[32.54944728399268 16.488934430286307 7] 98.53401246905112]
Test Case: 1679 | Input/Output: [[3.615234690105954 2.220703627369934 14] 15.112832315027472]
Test Case: 1680 | Input/Output: [[1.704629125050658 1.3346789514028772 11] 13.054838545495215]
Test Case: 1681 | Input/Output: [[65.0961335134864 34.5544741573229 12] 212.2878324304589]
Test Case: 1682 | Input/Output: [[79.96761142755074 63.44596743932684 13] 659.8839658069022]
Test Case: 1683 | Input/Output: [[20.06510486998514 6.974367232588693 15] 41.44531672730911]
Test Case: 1684 | Input/Output: [[13.802782769034456 5.585632060953199 16] 32.56772951083471]
Test Case: 1685 | Input/Output: [[11.218919938219369 9.773614144637142 12] 131.811603844209]
Test Case: 1686 | Input/Output: [[71.0734917313624 5.741369110998162 11] 83.56532984376445]
Test Case: 1687 | Input/Output: [[34.12583626647331 9.002426694531406 18] 58.58233703298259]
Test Case: 1688 | Input/Output: [[81.93323651116721 44.08177202254634 14] 272.7254822832541]
Test Case: 1689 | Input/Output: [[28.967476593090005 20.323556745512803 6] 145.48231855323667]
Test Case: 1690 | Input/Output: [[2.94682994441238 1.8923975972987508 10] 13.36290643465851]
Test Case: 1691 | Input/Output: [[93.51612110885593 4.292857166107132 12] 102.5149255380196]
Test Case: 1692 | Input/Output: [[38.59605520927632 36.83507027759069 4] 281.69570602493366]
Test Case: 1693 | Input/Output: [[30.709704380095605 8.271413895082858 17] 53.35070547198183]
Test Case: 1694 | Input/Output: [[26.69661049521526 15.723522133953502 13] 103.0987446042614]
Test Case: 1695 | Input/Output: [[19.08932955789461 3.6021368571574524 9] 27.969223245894177]
Test Case: 1696 | Input/Output: [[26.687624390959343 19.76675746794724 19] 178.5360755438245]
Test Case: 1697 | Input/Output: [[67.58593289299374 37.75606390660899 18] 238.66807398354229]
Test Case: 1698 | Input/Output: [[99.89216424258451 2.045370837981274 2] 104.02478649829276]
Test Case: 1699 | Input/Output: [[61.45905474736195 57.35112177494275 6] 603.8395117948941]
Test Case: 1700 | Input/Output: [[38.92194035213293 37.35112707246213 13] 783.6400205994056]
Test Case: 1701 | Input/Output: [[38.17653546937876 8.616764484206382 19] 60.43369138131711]
Test Case: 1702 | Input/Output: [[26.58300622253078 14.735097210973198 20] 92.70421826549816]
Test Case: 1703 | Input/Output: [[33.16162782613511 29.70916525387745 16] 499.8880354315911]
Test Case: 1704 | Input/Output: [[65.35166686186439 11.48984891621634 19] 93.23341354622586]
Test Case: 1705 | Input/Output: [[42.684137992978 36.93842184806986 17] 540.8573788458236]
Test Case: 1706 | Input/Output: [[6.043276765286689 2.221480527285325 16] 13.068779042405716]
Test Case: 1707 | Input/Output: [[1.3074727289087718 1.1838435182936602 5] 10.31330795902129]
Test Case: 1708 | Input/Output: [[84.21009945526994 54.68452953565422 13] 394.6957691276274]
Test Case: 1709 | Input/Output: [[33.60776936929767 7.674934640979525 14] 53.50049874654808]
Test Case: 1710 | Input/Output: [[48.07433373034078 6.637952992349544 16] 63.47699009059112]
Test Case: 1711 | Input/Output: [[57.780769886021965 13.6421802822975 16] 93.49807244246102]
Test Case: 1712 | Input/Output: [[92.72081005738043 85.16388303098903 2] 341.27143569786404]
Test Case: 1713 | Input/Output: [[50.203722266725 12.317584596106842 13] 82.84830483852461]
Test Case: 1714 | Input/Output: [[81.94097289976135 17.73839064302234 6] 127.20646321462166]
Test Case: 1715 | Input/Output: [[76.14256481139319 24.90652049751764 3] 144.9145587963812]
Test Case: 1716 | Input/Output: [[66.03914139581492 53.28280129115551 15] 593.0322824661199]
Test Case: 1717 | Input/Output: [[41.8881580982606 27.809803148387385 9] 202.1798505435978]
Test Case: 1718 | Input/Output: [[21.8838434840224 16.278568369904068 13] 145.81081446252517]
Test Case: 1719 | Input/Output: [[88.13274728660126 9.877064694135134 16] 110.38015010776428]
Test Case: 1720 | Input/Output: [[24.961688864674617 18.008167439127988 3] 96.33398211148206]
Test Case: 1721 | Input/Output: [[74.2798222598268 73.82692100520235 10] 1441.0841619627026]
Test Case: 1722 | Input/Output: [[42.42195901673351 33.40562185300024 12] 336.4864823360215]
Test Case: 1723 | Input/Output: [[92.9343112015454 83.57282190526712 20] 1542.6480246260048]
Test Case: 1724 | Input/Output: [[4.719005065651484 1.5552832503484753 5] 9.322331221567303]
Test Case: 1725 | Input/Output: [[34.117173249970946 24.07772639843804 10] 191.70304174413144]
Test Case: 1726 | Input/Output: [[21.60181460551502 6.293933390060163 6] 39.341180851253576]
Test Case: 1727 | Input/Output: [[3.462041995374922 2.4687767772817075 20] 20.648067310910417]
Test Case: 1728 | Input/Output: [[40.69451449796435 11.508126271202563 16] 72.78602211096512]
Test Case: 1729 | Input/Output: [[75.00890209716593 39.147014582252936 19] 238.7680616541913]
Test Case: 1730 | Input/Output: [[58.38942639011832 26.461906061730712 3] 140.73308769557988]
Test Case: 1731 | Input/Output: [[4.336574551665295 1.0223134639283435 2] 6.62220387049203]
Test Case: 1732 | Input/Output: [[24.872838551918623 5.440909460910922 20] 38.80154950335806]
Test Case: 1733 | Input/Output: [[69.67525209904166 61.86099917137317 8] 719.9951716751807]
Test Case: 1734 | Input/Output: [[38.8673216954496 37.6653025568578 1] 76.5326242523074]
Test Case: 1735 | Input/Output: [[9.60599192583584 7.519944734108511 14] 76.30256226477]
Test Case: 1736 | Input/Output: [[93.86157746706624 23.81490724389238 15] 157.6848759406995]
Test Case: 1737 | Input/Output: [[63.45887395208493 17.44158701911143 15] 111.56355537753072]
Test Case: 1738 | Input/Output: [[23.4943394650756 13.470703677196232 6] 83.56398087408705]
Test Case: 1739 | Input/Output: [[97.3535152810487 96.70169477727484 4] 768.4599247113568]
Test Case: 1740 | Input/Output: [[24.45564496186411 10.45020761483702 19] 60.95097484755932]
Test Case: 1741 | Input/Output: [[54.2096513090052 41.63203958231968 19] 410.3391001199204]
Test Case: 1742 | Input/Output: [[47.33395223826588 28.33710416709831 16] 188.49627720993783]
Test Case: 1743 | Input/Output: [[23.87384054124603 20.45277572095908 20] 295.30359919966344]
Test Case: 1744 | Input/Output: [[13.25411262688432 7.329593587972037 5] 43.667506156773534]
Test Case: 1745 | Input/Output: [[32.478247723806135 2.22841069279472 11] 37.26338916817014]
Test Case: 1746 | Input/Output: [[41.08279596964714 39.81686088403037 18] 1130.80991309072]
Test Case: 1747 | Input/Output: [[13.760214196107402 7.074866751292118 17] 42.88358517585766]
Test Case: 1748 | Input/Output: [[23.063923627864693 20.278607967610164 11] 271.77774090322856]
Test Case: 1749 | Input/Output: [[84.09352017130813 29.65141387824071 5] 174.73753262356746]
Test Case: 1750 | Input/Output: [[28.378565569618875 7.7528669221718305 9] 49.71223289244223]
Test Case: 1751 | Input/Output: [[35.5630930993011 3.766748062014844 12] 43.98904342260263]
Test Case: 1752 | Input/Output: [[50.04535001382756 36.3666764834334 20] 315.6175918783187]
Test Case: 1753 | Input/Output: [[52.29729789991726 41.99611521192683 7] 375.62919024912753]
Test Case: 1754 | Input/Output: [[23.13518423041117 16.858443610259155 5] 117.12418463489004]
Test Case: 1755 | Input/Output: [[85.48052637828496 9.85990677705935 9] 107.77153672749009]
Test Case: 1756 | Input/Output: [[80.43232967417109 51.97115662982465 20] 374.1169514138886]
Test Case: 1757 | Input/Output: [[98.80263077825184 59.0771933830597 5] 362.65766814173975]
Test Case: 1758 | Input/Output: [[82.84708449400077 60.81402916717349 7] 478.150332529566]
Test Case: 1759 | Input/Output: [[25.877668800493307 25.575065139607837 8] 395.1634678049574]
Test Case: 1760 | Input/Output: [[45.91979517536989 23.47216672322512 18] 141.95025315406394]
Test Case: 1761 | Input/Output: [[7.340307404899064 2.601467964680962 6] 15.36896889906638]
Test Case: 1762 | Input/Output: [[45.69926417947125 25.26121258891358 9] 157.9023436167033]
Test Case: 1763 | Input/Output: [[94.59424266539769 22.534490875514475 8] 153.75557965705244]
Test Case: 1764 | Input/Output: [[31.32706739863786 4.473400461952684 6] 41.763911121620666]
Test Case: 1765 | Input/Output: [[88.53772004139859 84.34004974953326 20] 2266.0695526105883]
Test Case: 1766 | Input/Output: [[73.28745563857917 33.85756382784849 2] 156.64420507116986]
Test Case: 1767 | Input/Output: [[74.51234239084462 57.52674814300643 14] 563.746432931426]
Test Case: 1768 | Input/Output: [[54.55047144857211 20.799108531553724 6] 121.4092139362172]
Test Case: 1769 | Input/Output: [[37.81403665637614 19.602926334890057 14] 119.21004463135256]
Test Case: 1770 | Input/Output: [[98.90733168640126 43.37474421385595 16] 253.41361825036375]
Test Case: 1771 | Input/Output: [[51.038129209810464 45.6293672677452 10] 614.6134575455188]
Test Case: 1772 | Input/Output: [[28.25200717901688 18.65511340685244 12] 137.13974410239328]
Test Case: 1773 | Input/Output: [[59.43906204703693 2.152488646456664 13] 63.905794776844886]
Test Case: 1774 | Input/Output: [[77.41467586398917 66.7959730306136 2] 268.6404211336607]
Test Case: 1775 | Input/Output: [[96.49186225343556 36.003079486894656 1] 132.49494174033023]
Test Case: 1776 | Input/Output: [[13.687533981896586 5.460413411749638 12] 31.85609346248899]
Test Case: 1777 | Input/Output: [[56.89898272572908 54.57193305210708 9] 853.8561510522717]
Test Case: 1778 | Input/Output: [[57.479039432484704 13.948697759999938 13] 94.31576992239232]
Test Case: 1779 | Input/Output: [[39.76700612290056 39.05720601867811 20] 1335.7423872794025]
Test Case: 1780 | Input/Output: [[23.12912871080232 16.473139383921804 3] 87.89679991095718]
Test Case: 1781 | Input/Output: [[49.81801575297774 32.774403961088524 5] 211.6640453055097]
Test Case: 1782 | Input/Output: [[70.81857086555385 5.316678658021787 20] 82.31501999453525]
Test Case: 1783 | Input/Output: [[33.8753291577829 30.70182047636957 12] 477.5892377882993]
Test Case: 1784 | Input/Output: [[16.240497725549726 15.64943257394427 19] 443.0137949705739]
Test Case: 1785 | Input/Output: [[31.630838089874693 7.737046080690087 6] 52.104432073745215]
Test Case: 1786 | Input/Output: [[30.183468571184832 6.623307035371767 20] 47.15401255116043]
Test Case: 1787 | Input/Output: [[36.76912755956519 32.88828545703522 13] 505.168369869074]
Test Case: 1788 | Input/Output: [[84.52154345349695 46.2888092947768 12] 288.9734422936711]
Test Case: 1789 | Input/Output: [[3.640331096888774 2.177597832542204 6] 13.81580216477619]
Test Case: 1790 | Input/Output: [[96.60333452986038 85.16339262610981 20] 1411.5138206876172]
Test Case: 1791 | Input/Output: [[19.46520618031985 14.839840096837577 15] 141.90180725411918]
Test Case: 1792 | Input/Output: [[98.92185816147426 10.26927056551605 18] 121.83952700187947]
Test Case: 1793 | Input/Output: [[60.79964645726344 49.11365026509469 5] 375.16039567503714]
Test Case: 1794 | Input/Output: [[29.06596674416956 15.00585120918734 14] 91.09936549124848]
Test Case: 1795 | Input/Output: [[29.746328169581048 5.146254311903551 12] 42.1919955571008]
Test Case: 1796 | Input/Output: [[22.62768391577926 9.802938679058842 11] 57.21406678025589]
Test Case: 1797 | Input/Output: [[3.297799523342307 2.560164114717317 10] 24.10721667545599]
Test Case: 1798 | Input/Output: [[11.34939773906842 5.647654830378261 17] 33.83262850208261]
Test Case: 1799 | Input/Output: [[17.56667574932605 15.552842541831106 7] 165.70716981126546]
Test Case: 1800 | Input/Output: [[58.05846234364278 49.61865231652592 13] 644.609234921533]
Test Case: 1801 | Input/Output: [[67.13173132846838 46.2456282493804 5] 307.88128272205284]
Test Case: 1802 | Input/Output: [[17.560143663146224 7.975780567266503 5] 45.88168937572856]
Test Case: 1803 | Input/Output: [[24.045159528908947 7.098732787612259 14] 44.18983672840823]
Test Case: 1804 | Input/Output: [[33.35863076232266 7.866103257535919 1] 41.22473401985858]
Test Case: 1805 | Input/Output: [[91.02607460756887 31.244899385586077 14] 186.1763872836035]
Test Case: 1806 | Input/Output: [[21.44935416549598 1.6483069214035515 15] 25.020389418990963]
Test Case: 1807 | Input/Output: [[35.0089472605338 7.542605727743094 12] 54.23674862762469]
Test Case: 1808 | Input/Output: [[10.962131066436898 10.41692764742168 5] 96.77818941578764]
Test Case: 1809 | Input/Output: [[1.3428454612209784 1.293910988052467 17] 33.86129115992474]
Test Case: 1810 | Input/Output: [[36.44472188961338 9.332847242352152 1] 45.777569131965535]
Test Case: 1811 | Input/Output: [[76.34751027934816 4.911300546179323 10] 86.84542356136521]
Test Case: 1812 | Input/Output: [[57.96004999164803 46.157363374037466 16] 497.91430986380016]
Test Case: 1813 | Input/Output: [[72.73212808310377 18.36247233347459 19] 121.8603282290712]
Test Case: 1814 | Input/Output: [[8.784285436983954 7.278286063694675 8] 72.88045860042016]
Test Case: 1815 | Input/Output: [[29.36938088759192 21.674715764459467 15] 192.78342652523057]
Test Case: 1816 | Input/Output: [[79.7691189761875 50.64628135677373 19] 357.1514992263292]
Test Case: 1817 | Input/Output: [[60.88264807854557 36.50658209855602 10] 241.78172471425407]
Test Case: 1818 | Input/Output: [[82.45693299866242 30.548644482778503 17] 179.5106942555591]
Test Case: 1819 | Input/Output: [[77.5780091868378 33.72914423241742 11] 196.9054690906411]
Test Case: 1820 | Input/Output: [[58.71388544181076 47.79670312668144 2] 193.21674006547084]
Test Case: 1821 | Input/Output: [[21.03977684500807 4.265303510341628 2] 30.435070478169425]
Test Case: 1822 | Input/Output: [[87.31912611844676 13.523458241493277 1] 100.84258435994003]
Test Case: 1823 | Input/Output: [[24.915923511013 3.300335026283016 15] 32.52440429786692]
Test Case: 1824 | Input/Output: [[59.96589488910296 27.990997217268912 17] 164.95443617939506]
Test Case: 1825 | Input/Output: [[23.36146671562222 7.980150232784643 8] 47.59348161520563]
Test Case: 1826 | Input/Output: [[75.64946021812715 49.73653110922189 13] 364.4784772924068]
Test Case: 1827 | Input/Output: [[40.62773479886028 36.39814629602867 9] 464.7921359059719]
Test Case: 1828 | Input/Output: [[12.163943830808702 10.00656572417558 20] 122.48549791489782]
Test Case: 1829 | Input/Output: [[42.69935628735068 11.389422763991956 6] 73.7377564818335]
Test Case: 1830 | Input/Output: [[93.08439046964384 68.80718695550583 15] 614.0576045444113]
Test Case: 1831 | Input/Output: [[88.15518809525881 63.40085800383337 18] 538.291573198347]
Test Case: 1832 | Input/Output: [[58.41515420237442 54.79381703275239 5] 500.0806826769054]
Test Case: 1833 | Input/Output: [[67.98677615208213 11.180955758207496 4] 94.68081960343612]
Test Case: 1834 | Input/Output: [[95.2698473515946 4.320494758638771 15] 104.32132191718289]
Test Case: 1835 | Input/Output: [[82.18769491562801 53.20981557964189 4] 316.5504848688564]
Test Case: 1836 | Input/Output: [[74.69858378365106 34.92512340109417 16] 205.8833420778293]
Test Case: 1837 | Input/Output: [[31.386293987250635 28.704041438410695 12] 462.4423999029376]
Test Case: 1838 | Input/Output: [[27.771278952752333 10.376373081955451 10] 60.90018035196313]
Test Case: 1839 | Input/Output: [[20.9693283105426 9.204189552497624 9] 53.746560881776]
Test Case: 1840 | Input/Output: [[47.94240020559526 32.85938714367728 4] 200.15647941857776]
Test Case: 1841 | Input/Output: [[22.814441775521445 7.013700832575424 2] 38.99802158624998]
Test Case: 1842 | Input/Output: [[77.92639433871463 27.14367217848976 17] 161.2306512287481]
Test Case: 1843 | Input/Output: [[52.208363869293954 15.549373524095763 13] 96.49802291692252]
Test Case: 1844 | Input/Output: [[41.098303692424416 13.571099852424194 6] 81.5159777608484]
Test Case: 1845 | Input/Output: [[78.88612572410231 34.03861893212532 6] 197.3510445227533]
Test Case: 1846 | Input/Output: [[27.08910264904655 23.15257440542372 8] 247.29408324410275]
Test Case: 1847 | Input/Output: [[93.49850645777336 93.18355289097246 20] 3616.5405659874746]
Test Case: 1848 | Input/Output: [[60.61187936388277 43.7185783174148 10] 360.06261641277126]
Test Case: 1849 | Input/Output: [[21.65711387123564 17.610760987978757 15] 200.72591374822076]
Test Case: 1850 | Input/Output: [[51.4530994691596 39.43885030866248 15] 382.05054668063167]
Test Case: 1851 | Input/Output: [[43.39853949176313 29.958043648460823 16] 236.23427157485685]
Test Case: 1852 | Input/Output: [[26.176366935961987 6.746420713175355 16] 44.35416106905196]
Test Case: 1853 | Input/Output: [[3.199264921753194 2.254223501481241 10] 17.904934190727065]
Test Case: 1854 | Input/Output: [[79.69877566654799 61.843226762610605 7] 524.7613075835062]
Test Case: 1855 | Input/Output: [[23.34428839302829 7.505949903310607 10] 45.46994339377696]
Test Case: 1856 | Input/Output: [[44.9949552752154 37.67659080856666 19] 490.8510480098009]
Test Case: 1857 | Input/Output: [[9.938388117098508 2.59345749616295 11] 16.956769942244357]
Test Case: 1858 | Input/Output: [[58.60244781895159 20.59383046405604 13] 122.10625630202269]
Test Case: 1859 | Input/Output: [[38.59313995890342 18.25438185865747 10] 107.8086825840713]
Test Case: 1860 | Input/Output: [[32.366020500836825 24.33276864702394 20] 227.67975655825123]
Test Case: 1861 | Input/Output: [[74.81927581849479 53.62164674102143 2] 220.4922520180821]
Test Case: 1862 | Input/Output: [[77.81539031002116 32.22513327386235 20] 187.82184366238127]
Test Case: 1863 | Input/Output: [[13.849827825369749 1.868611404701714 4] 18.163893642620327]
Test Case: 1864 | Input/Output: [[55.8877747451763 4.806164004516559 14] 66.40450696595373]
Test Case: 1865 | Input/Output: [[21.58973565474098 11.761592040415794 7] 72.22039230665223]
Test Case: 1866 | Input/Output: [[26.51194272225689 8.891294017462068 1] 35.40323673971896]
Test Case: 1867 | Input/Output: [[92.95764415058731 89.34334969316745 11] 1657.5895053159852]
Test Case: 1868 | Input/Output: [[35.14102216248277 31.581033770497257 8] 378.3799987560086]
Test Case: 1869 | Input/Output: [[64.12662127849981 48.11617257918371 18] 447.0111275724021]
Test Case: 1870 | Input/Output: [[70.28055986157342 63.93938238378007 2] 256.3296707221362]
Test Case: 1871 | Input/Output: [[79.33934980780305 72.1732616345301 12] 1138.8206716819934]
Test Case: 1872 | Input/Output: [[7.479802226996178 5.706308422527377 16] 54.88092704574338]
Test Case: 1873 | Input/Output: [[50.31384621229267 48.96091817668782 5] 470.387258659407]
Test Case: 1874 | Input/Output: [[25.68884460985453 3.966273558507029 2] 34.23377138539039]
Test Case: 1875 | Input/Output: [[42.70590216204732 33.68518676194122 15] 351.3576213258078]
Test Case: 1876 | Input/Output: [[32.94065715583548 27.96748955879352 18] 382.23485788230346]
Test Case: 1877 | Input/Output: [[65.64822831958838 64.61744262577972 16] 1855.9051541238248]
Test Case: 1878 | Input/Output: [[37.51771864115957 20.233313180277666 14] 125.332950527791]
Test Case: 1879 | Input/Output: [[63.17333598469647 39.59240110181816 6] 258.625873514248]
Test Case: 1880 | Input/Output: [[53.501120148754254 49.05733030273632 3] 282.82746010908335]
Test Case: 1881 | Input/Output: [[33.05827852366258 11.540218120108944 15] 68.51683165335118]
Test Case: 1882 | Input/Output: [[76.44513801269146 57.46627958280374 15] 531.9213140726148]
Test Case: 1883 | Input/Output: [[62.950014388777134 39.10394874335471 3] 204.8292526904449]
Test Case: 1884 | Input/Output: [[84.5443793141996 79.37534791511294 14] 1572.602959151763]
Test Case: 1885 | Input/Output: [[54.81691552112954 8.159374489138942 6] 73.98864884531494]
Test Case: 1886 | Input/Output: [[66.41602657824815 30.48567236249685 1] 96.901698940745]
Test Case: 1887 | Input/Output: [[65.91013859922306 56.2781086308386 13] 728.8851662963561]
Test Case: 1888 | Input/Output: [[80.60485999072078 73.60711145381259 12] 1178.9763602923372]
Test Case: 1889 | Input/Output: [[39.11358883754594 36.539594821380135 9] 526.6247287814286]
Test Case: 1890 | Input/Output: [[78.44165122176383 42.15475616237487 7] 257.3194817347452]
Test Case: 1891 | Input/Output: [[72.77108051862812 7.056533919543157 3] 88.31902990672276]
Test Case: 1892 | Input/Output: [[98.64804349538306 20.860288350779648 13] 151.55679794059168]
Test Case: 1893 | Input/Output: [[83.50403712885881 10.563193726591432 1] 94.06723085545023]
Test Case: 1894 | Input/Output: [[85.06141127701116 54.62669195164153 15] 389.9027134389709]
Test Case: 1895 | Input/Output: [[58.35897477173094 40.61445547692752 18] 325.0308600141358]
Test Case: 1896 | Input/Output: [[95.20517462655904 51.54635663246543 1] 146.75153125902446]
Test Case: 1897 | Input/Output: [[67.96648481022766 42.04855340804881 14] 288.15330295015787]
Test Case: 1898 | Input/Output: [[59.54858417029903 56.89164675025157 20] 1562.2630724547737]
Test Case: 1899 | Input/Output: [[56.11085723608564 34.818167385396244 20] 239.60053151829905]
Test Case: 1900 | Input/Output: [[94.80661379413075 80.09854181728288 9] 880.1563548698174]
Test Case: 1901 | Input/Output: [[2.609670016523284 2.1250780028457585 6] 18.06367389951164]
Test Case: 1902 | Input/Output: [[30.498734387025745 4.009470983288853 1] 34.5082053703146]
Test Case: 1903 | Input/Output: [[74.29410666331273 36.2989829767936 20] 216.24906417564333]
Test Case: 1904 | Input/Output: [[52.88518536086353 37.000120983151966 6] 264.1544568086768]
Test Case: 1905 | Input/Output: [[90.20289398264362 80.62301335645036 16] 1341.646632592915]
Test Case: 1906 | Input/Output: [[62.96031952150224 50.9928180179888 11] 540.5278338055628]
Test Case: 1907 | Input/Output: [[43.4970854334335 3.487962832999324 1] 46.98504826643282]
Test Case: 1908 | Input/Output: [[67.97929526974198 64.27557316276203 9] 961.31401119448]
Test Case: 1909 | Input/Output: [[98.32273608584336 52.60014288514747 17] 324.5396092645344]
Test Case: 1910 | Input/Output: [[8.155114093915238 8.090842746547624 1] 16.24595684046286]
Test Case: 1911 | Input/Output: [[1.4280339187941355 1.255147535905376 12] 17.452071195171758]
Test Case: 1912 | Input/Output: [[83.89776270294202 61.62351242432989 9] 514.0110181123936]
Test Case: 1913 | Input/Output: [[71.90247986669033 66.69608549197545 3] 386.4149876954667]
Test Case: 1914 | Input/Output: [[89.31307023863698 44.2226493444852 9] 264.02837366763964]
Test Case: 1915 | Input/Output: [[13.494203338098629 4.867440154515854 11] 28.7213654702448]
Test Case: 1916 | Input/Output: [[48.75833957183532 24.6248744917395 12] 148.21983968436945]
Test Case: 1917 | Input/Output: [[7.225582437719804 3.5129957507936016 15] 20.89942479473938]
Test Case: 1918 | Input/Output: [[18.03969469978185 8.74047317718764 13] 51.94702375348776]
Test Case: 1919 | Input/Output: [[66.55136102772502 34.017053523298515 20] 205.71991621192632]
Test Case: 1920 | Input/Output: [[8.192298786582356 3.569142088888076 4] 20.090577342733923]
Test Case: 1921 | Input/Output: [[70.3667949817347 16.134956691491205 6] 112.22128038339088]
Test Case: 1922 | Input/Output: [[96.25726623339594 63.05087881601514 15] 460.9859781800413]
Test Case: 1923 | Input/Output: [[74.44423868616497 53.92483559687235 12] 456.0030803820631]
Test Case: 1924 | Input/Output: [[13.961612558383177 3.7395692268414633 20] 24.176873027797686]
Test Case: 1925 | Input/Output: [[90.3556238488816 57.68738660854984 14] 408.7000414816825]
Test Case: 1926 | Input/Output: [[78.78942449576444 9.03566706635438 14] 99.20165839432852]
Test Case: 1927 | Input/Output: [[71.69335086908411 30.218678687440605 16] 176.16553119281497]
Test Case: 1928 | Input/Output: [[18.79437339362442 5.54295272317604 12] 34.51740037373298]
Test Case: 1929 | Input/Output: [[41.16591324663828 21.43524509566562 7] 129.25502762896673]
Test Case: 1930 | Input/Output: [[27.617695233479733 2.2540989035556445 7] 32.52654220729173]
Test Case: 1931 | Input/Output: [[92.5536668262462 65.10377803748281 1] 157.65744486372904]
Test Case: 1932 | Input/Output: [[86.51110338544426 83.50906432606669 18] 2304.962708238881]
Test Case: 1933 | Input/Output: [[6.044143404901149 3.5146899611566043 17] 22.838615865201188]
Test Case: 1934 | Input/Output: [[66.16559078858268 18.482150319757736 8] 117.45293813700296]
Test Case: 1935 | Input/Output: [[40.97074003784694 1.5828408427351128 1] 42.55358088058205]
Test Case: 1936 | Input/Output: [[14.003685555963123 12.35571645015425 13] 179.99936280200046]
Test Case: 1937 | Input/Output: [[73.29058079585386 52.08743740751447 6] 377.5362363085825]
Test Case: 1938 | Input/Output: [[3.535723964502276 1.2345612846076477 18] 7.329517291281889]
Test Case: 1939 | Input/Output: [[25.71951561972508 12.727567632049356 18] 76.11154492106748]
Test Case: 1940 | Input/Output: [[55.852841300153365 48.79508573333046 2] 196.07218572731705]
Test Case: 1941 | Input/Output: [[86.52585922305221 23.627587419726773 5] 151.30225357178367]
Test Case: 1942 | Input/Output: [[3.534466221377771 2.539744082421868 18] 21.52670430041474]
Test Case: 1943 | Input/Output: [[28.36812293307316 8.504944346401214 3] 51.24214219048356]
Test Case: 1944 | Input/Output: [[7.381121151894884 3.037409227646952 10] 17.70138721229984]
Test Case: 1945 | Input/Output: [[46.46026907812666 36.81826076860287 11] 370.2166996482807]
Test Case: 1946 | Input/Output: [[12.196940766749751 4.66081846838871 6] 27.198720725130983]
Test Case: 1947 | Input/Output: [[72.04353123489261 63.2802831495535 10] 808.3951412566129]
Test Case: 1948 | Input/Output: [[5.781331704590015 3.9448013948485183 1] 9.726133099438536]
Test Case: 1949 | Input/Output: [[54.996895231568544 27.03364236451599 1] 82.03053759608454]
Test Case: 1950 | Input/Output: [[61.013136502355984 22.830415585329277 15] 133.97568031539998]
Test Case: 1951 | Input/Output: [[66.5742152875099 55.32559134643881 10] 608.108784725663]
Test Case: 1952 | Input/Output: [[3.566107720231971 3.0758958086260555 7] 31.156799153846947]
Test Case: 1953 | Input/Output: [[46.740094700388354 39.17717606702966 6] 346.84566858042285]
Test Case: 1954 | Input/Output: [[2.2018608514462485 1.9734292180745172 2] 7.917415476537293]
Test Case: 1955 | Input/Output: [[70.52165853741852 25.78502933707621 15] 151.81531552363614]
Test Case: 1956 | Input/Output: [[73.34387832233823 69.08581112998988 6] 739.7370781185507]
Test Case: 1957 | Input/Output: [[97.8634901606206 48.24876370833861 7] 286.1612425314626]
Test Case: 1958 | Input/Output: [[5.489760716319401 3.424088914083297 9] 23.351141508661467]
Test Case: 1959 | Input/Output: [[81.15744103002473 4.110112158395039 2] 89.58581659254389]
Test Case: 1960 | Input/Output: [[32.04304777229159 29.220574662972503 15] 521.0814189726489]
Test Case: 1961 | Input/Output: [[43.64572586802 42.693335468141335 20] 1411.629220061128]
Test Case: 1962 | Input/Output: [[8.193638448527517 4.97702269558752 16] 33.537909220368455]
Test Case: 1963 | Input/Output: [[90.08439802295186 51.039508583332655 10] 324.4913523487823]
Test Case: 1964 | Input/Output: [[86.82720684563175 27.172873996975422 18] 165.92773837894893]
Test Case: 1965 | Input/Output: [[47.258586460780265 23.683942338876864 1] 70.94252879965713]
Test Case: 1966 | Input/Output: [[77.887518611985 58.20412991005704 16] 533.4240321802222]
Test Case: 1967 | Input/Output: [[60.16997944745504 38.90759466871021 13] 279.408723091445]
Test Case: 1968 | Input/Output: [[36.73939983692529 14.82993658482252 1] 51.569336421747806]
Test Case: 1969 | Input/Output: [[46.60835205144873 21.260287968626923 7] 124.27961631067078]
Test Case: 1970 | Input/Output: [[59.25712772994652 18.547054219064183 19] 113.2508981340752]
Test Case: 1971 | Input/Output: [[19.07049446545495 18.346052848176527 13] 389.6198804052015]
Test Case: 1972 | Input/Output: [[71.05755655916597 15.333254994034558 10] 110.16232541372068]
Test Case: 1973 | Input/Output: [[26.27169961601611 14.419361550436715 15] 90.18400032495114]
Test Case: 1974 | Input/Output: [[72.56340102051158 34.833065784597814 5] 201.2812152184579]
Test Case: 1975 | Input/Output: [[23.222842235523927 15.924082168406468 15] 124.12184253894404]
Test Case: 1976 | Input/Output: [[71.01147131527178 16.783731798862867 13] 114.9682164458836]
Test Case: 1977 | Input/Output: [[67.32391005451672 40.16392617403884 18] 266.41542616469394]
Test Case: 1978 | Input/Output: [[17.550691767933994 8.717725698278734 2] 39.316384992766174]
Test Case: 1979 | Input/Output: [[42.06370472146477 25.25693287899744 9] 166.77960914032707]
Test Case: 1980 | Input/Output: [[60.9375175401586 13.017107855791528 11] 94.04366788046312]
Test Case: 1981 | Input/Output: [[65.12936913223731 26.757121656639868 2] 129.63625006672777]
Test Case: 1982 | Input/Output: [[19.113759194811664 13.42274879330564 11] 107.03812920567026]
Test Case: 1983 | Input/Output: [[30.381431765468943 14.50369684332286 10] 85.83316020055008]
Test Case: 1984 | Input/Output: [[21.920456732714197 7.071920803114815 3] 41.36340752876778]
Test Case: 1985 | Input/Output: [[10.184553215340229 2.6865416840350145 10] 17.482786949541524]
Test Case: 1986 | Input/Output: [[15.09553470745779 3.3238431372827946 19] 23.62025504850736]
Test Case: 1987 | Input/Output: [[9.475180656185689 8.047378739880237 6] 72.63980870124003]
Test Case: 1988 | Input/Output: [[63.6212720313703 53.65366649242358 15] 690.4435019315534]
Test Case: 1989 | Input/Output: [[82.53033602962633 33.90053786479897 20] 197.59652294935708]
Test Case: 1990 | Input/Output: [[16.598694372134922 1.4763834247648266 14] 19.839738318837565]
Test Case: 1991 | Input/Output: [[68.42218780068194 34.9804735886135 20] 211.56289297892968]
Test Case: 1992 | Input/Output: [[61.64283714475873 49.64867915783137 18] 560.3355294407253]
Test Case: 1993 | Input/Output: [[98.57797638139964 64.07247722000797 18] 464.4732570503549]
Test Case: 1994 | Input/Output: [[36.40260990132749 12.224750814667743 13] 73.21415958992097]
Test Case: 1995 | Input/Output: [[15.22039819652759 9.099930727955314 18] 60.47411105665919]
Test Case: 1996 | Input/Output: [[94.86031015335811 90.79141379330903 2] 363.3401819868034]
Test Case: 1997 | Input/Output: [[98.45780388422456 23.3413550588915 12] 159.64648966450318]
Test Case: 1998 | Input/Output: [[72.13980173326644 52.36577462621978 12] 444.5008291998246]
Test Case: 1999 | Input/Output: [[18.52574897872847 6.55597771658033 13] 38.81921659952544]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline float_sqrt integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup zip_deepdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring string_indexof integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove float_pow gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_sort vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean float_log10 boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_deepdup code_fromzipchildren environment_end vector_integer_rot string_includes integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot float_floor exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add string_uppercase float_arctan vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 integer_abs zip_shove vector_integer_flush integer_pow vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_sort vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next float_arcsin vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap float_log2 float_arccos exec_eq string_emptystring string_swap integer_yank exec_while float_empty integer_negate print_vector_boolean float_abs code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length float_ceiling char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent float_negate char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove vector_integer_sort zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 string_sort code_stackdepth genome_back2 string_capitalize genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank string_lowercase integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome char_uppercase exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup char_lowercase vector_boolean_replace vector_string_dup_items float_deepdup integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot boolean_deepdup string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse vector_string_sort zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast exec_deepdup string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container integer_deepdup float_square code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector string_deepdup vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup char_deepdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.32.0-1-SNAPSHOTHash of last Git commit = unavailable
GitHub link = unavailable
ALPS-age-limit-system = :polynomial
ALPS-number-of-layers = 10
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 10
alternation-rate = 0.01
atom-generators = (float_sqrt integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_do*while exec_dup_items boolean_dup_items exec_empty float_pow exec_rot exec_dup boolean_fromfloat float_sin boolean_flush float_lte exec_k float_frominteger boolean_xor integer_gte boolean_dup_times boolean_shove float_lt float_mod float_log10 boolean_rot integer_div integer_fromfloat integer_lte integer_mod exec_do*count integer_rot float_yankdup float_floor integer_add float_arctan integer_shove integer_max integer_abs integer_pow integer_stackdepth float_max float_arcsin float_dup_items float_stackdepth integer_dup_times float_gt boolean_dup float_fromboolean exec_dup_times float_log2 float_arccos exec_eq integer_yank exec_while float_empty integer_negate float_abs integer_min exec_swap float_ceiling float_eq integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean float_negate boolean_frominteger boolean_eq float_gte integer_flush float_shove float_pop integer_gt float_sub float_min boolean_not float_mult exec_do*times float_dec exec_pop float_add exec_s float_dup integer_lt float_swap exec_noop integer_swap float_deepdup integer_dup float_tan boolean_deepdup exec_yank integer_pop integer_empty float_dup_times float_inc integer_dec float_rot exec_stackdepth float_flush boolean_and exec_deepdup float_cos exec_flush exec_when float_div boolean_invert_second_then_and integer_deepdup float_square float_yank boolean_yankdup #object[clojush.instructions.tag$tag_instruction_erc$fn__2429 0x5b0575d0 clojush.instructions.tag$tag_instruction_erc$fn__2429@5b0575d0] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2435 0x62f6185a clojush.instructions.tag$tagged_instruction_erc$fn__2435@62f6185a] in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 in1 in2 in3 0.0 1.0 2.0 0.0 1.0 2.0 0.0 1.0 2.0)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
calculate-mod-metrics = false
case-batch-size = 1
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
downsample-factor = 1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
epsilon-lexicase-version = :semi-dynamic
error-change-recency-limit = 5
error-function = #object[clojush.problems.psb2.bouncing_balls$make_error_function_from_cases$the_actual_error_function__8188 0x446f3a53 clojush.problems.psb2.bouncing_balls$make_error_function_from_cases$the_actual_error_function__8188@446f3a53]
error-threshold = 0
evalpush-limit = 2000
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
knock-off-chip-off-the-old-block = false
label = nil
lazy-automatic-simplification = false
lexicase-leakage = 0.1
lexicase-slippage = 0
lineage-redundancy-window = nil
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1000000.0
max-generations = 300
max-genome-size-in-initial-program = 250
max-nested-depth = 200
max-point-evaluations = 1.0E101
max-points = 2000
max-program-executions = 1.0E101
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-lexicase-best-programs = false
print-preselection-fraction = false
print-selection-counts = false
print-timings = false
problem-specific-initial-report = #object[clojush.problems.psb2.bouncing_balls$initial_report 0x34ede267 clojush.problems.psb2.bouncing_balls$initial_report@34ede267]
problem-specific-report = #object[clojush.problems.psb2.bouncing_balls$custom_report 0x51c6e775 clojush.problems.psb2.bouncing_balls$custom_report@51c6e775]
random-screen = false
random-seed = -74 100 -95 -33 39 11 101 -78 114 -127 -54 -24 32 -61 15 -33
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
run-uuid = #uuid "fa7dc3e9-c06b-4fdf-bf57-d81346ab5e0b"
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
simplification-steps-for-mod-metrics = 0
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([[97.17954653692244 3.5724672692848234 7] 104.59716391779378] [[4.272385107662528 2.080170608313236 10] 12.37116402239604] [[45.137059939684825 28.020824084646016 1] 73.15788402433084] [[70.27927487987013 37.13505470689709 1] 107.41432958676722] [[58.2357253850557 7.76827746906407 1] 66.00400285411978] [[15.114692336054386 1.4623586494135714 4] 18.35108023194392] [[97.98920448775034 34.23643372346059 19] 203.23328542297293] [[29.49881862225299 20.72580800426837 16] 168.28235457686455] [[17.165 5.627 1] 22.792] [[96.01839545206622 5.057773921007658 1] 101.07616937307388] [[83.84233480558129 2.7076176919996997 8] 89.43828674496746] [[82.26819869857962 27.97484830958698 8] 167.01631994137142] [[93.469033361748 47.54704606116183 3] 249.24051117687725] [[1.4350320526495906 1.302553775163484 9] 17.252110118558825] [[24.421076909204977 12.836202006817253 9] 78.29835066338377] [[96.98439869328266 31.965054336447977 11] 192.34311029229508] [[57.31075552505411 40.19482406810027 18] 325.9359944489603] [[99.47895798156216 15.92643588942552 16] 137.40349224240012] [[8.60724743042029 8.146094441547918 13] 159.85810862357778] [[39.478833325226496 2.055855895302239 16] 43.81642471273236] [[26.523257876641782 7.180103533060013 20] 46.2139181301317] [[26.375592828934707 5.981422884032303 16] 41.84703161584708] [[19.9830856291557 13.937648208464095 15] 111.62017894895612] [[91.3024905656236 17.982310156872497 16] 136.0876968997569] [[75.510551625402 31.009124550573247 18] 180.74383613439704] [[43.76432895771969 33.74671752973772 1] 77.5110464874574] [[55.70496636610868 9.849608751124547 14] 79.63552353193332] [[1.001 1.0 1] 2.001] [[49.44742858657386 19.82429804295244 5] 114.43185758553028] [[11.28876686708065 3.379404580779171 2] 19.059234406329708] [[79.40573208049254 45.60593039468263 8] 290.2120546592723] [[85.32722766181153 44.4880696391581 2] 197.4986392144499] [[5.391569668341206 4.6360501434196095 15] 64.12656543114693] [[1.0990171958856036 1.0664111523483024 4] 8.283812435575541] [[35.529935544199 25.62604904985262 8] 203.32883996242504] [[51.98151685525191 18.50774873925615 3] 104.52237811882632] [[68.43842129732522 20.77952000389561 3] 124.53137519590966] [[23.99162478993707 16.61623265722927 8] 125.10138970053951] [[94.36913519626314 16.26506584127315 15] 133.67362271705363] [[75.64185623874953 14.733123967094045 4] 112.0741182882242] [[82.44554558937753 47.70280940206079 11] 308.09449229268216] [[55.46086200903 17.55762725312008 15] 106.8422859921063] [[83.49133700011795 60.88598916389755 1] 144.3773261640155] [[79.08954988447844 45.77474080206674 14] 296.28827276730993] [[86.68041182932258 35.73407389792904 5] 205.7967727380096] [[74.55304981976104 67.30936407763166 11] 985.7346629761485] [[81.74780527721082 66.80734404153036 9] 680.6601611703177] [[4.58373426799257 3.582057759483066 8] 32.16966087094561] [[64.177987474928 44.24435691933294 11] 343.23886396196536] [[73.97078679542646 59.450721290638505 9] 584.598381286135] [[60.567 37.053 1] 97.62] [[44.65836934089016 42.605099387852384 10] 712.5380722150092] [[55.743315382083054 21.08910699259336 19] 123.58943193910564] [[36.311 33.399 1] 69.71000000000001] [[47.34296069359289 32.3277001361559 17] 250.8175513783797] [[97.87095698893194 10.142667119801857 19] 120.50157103567136] [[53.44084985737808 23.595475771580173 17] 137.9404007196066] [[10.490838108513184 7.892075622530969 7] 64.09052171934651] [[30.215004642310543 11.062464965120832 12] 65.11886716984533] [[99.99150344486482 54.12317455483757 16] 335.94685974638446] [[82.84731293361686 58.72096945853961 11] 475.1045425281764] [[100.0 99.999 20] 3999.599534511501] [[25.574222499530133 24.79122851566953 6] 279.9852862270458] [[87.95336749641464 35.47118846249467 4] 201.37178351879976] [[50.5089316439644 29.25349285939968 13] 189.3816716368828] [[48.81724723084933 47.634002855389895 20] 1543.2708665264058] [[100.0 1.0 20] 102.02020201974588] [[79.7180173207521 33.262769853710154 16] 193.87684627248404] [[47.74264590092079 21.85788470381161 11] 128.34957185065113] [[44.08614093172047 4.106438265848173 17] 53.14258729371132] [[48.752966129636704 28.184461337666907 10] 181.60231209211028] [[20.052331907560728 19.12777973653861 15] 431.1702472933248] [[47.1143953399904 43.74770690194053 9] 619.0981642483139] [[31.06376646832685 30.81124607656102 17] 986.1716283110708] [[26.795400400182544 13.10386408253076 8] 77.8305227284335] [[35.792987209075555 20.10710984108343 1] 55.90009705015899] [[23.07766343080669 9.362201958080956 15] 54.58331182747669] [[82.28055194299884 64.60235745759566 10] 622.7834495108267] [[59.663165803418686 9.821398051064431 11] 83.17660533792835] [[35.80062608626359 3.0635529429230925 11] 42.501109840514886] [[63.53728210198055 31.039181831222 10] 184.7640178433449] [[56.51602437367966 5.094531781125222 3] 67.66495915565484] [[12.153148330684465 2.8748433719154494 5] 19.669771420474643] [[95.19690416455371 63.52345800811727 9] 464.5328624252392] [[87.15699653670427 8.68886459989622 14] 106.45898124701286] [[53.223876049588384 49.4088532638628 20] 1108.352776171861] [[19.696108553354357 13.72265670482058 2] 56.70225994731313] [[27.93029202135339 8.880740231354192 9] 53.970232244500494] [[12.86263410391404 12.484524147819693 12] 259.50342836054733] [[74.76321659122677 11.333281794534107 8] 101.4796780090045] [[48.46923230251033 3.840733092351054 8] 56.81176614777452] [[40.33413598236154 12.196869870647934 5] 75.11160297423211] [[32.01077123345011 17.01922092596908 17] 104.68923072629516] [[15.922579005443067 11.605945218954384 1] 27.52852422439745] [[2.176 1.787 1] 3.963] [[64.1487201233283 8.390368225208546 3] 83.26784059526848] [[8.414496956482072 1.4726673133817356 4] 11.97342229771248] [[57.18066383556299 8.152632998993878 17] 76.19725312499077] [[63.56673645589389 14.201797999074964 3] 99.02501335957726] [[87.25259985194475 78.93911616080327 12] 1219.7026109780545] [[88.99953221737351 56.37003616273572 18] 396.4002973400875] [[12.962060612056954 10.631688142261302 16] 125.7270133596633] [[94.3596704034375 56.11476969450266 14] 371.0009470551048] [[88.94605183042374 82.34455815022714 5] 738.4133192406756] [[54.34539927708706 36.90935016176109 11] 280.39310679995515] [[27.815101106096364 3.994939405396648 16] 37.1449826862781] [[65.10438322475113 50.39009301024721 7] 425.9823391989605] [[59.75470002456002 43.05256838388782 11] 357.8214349768302] [[98.6396794023612 9.832404820137544 10] 120.4817021660092] [[54.92653723171749 51.98679851630883 10] 845.1572295824686] [[14.62827734460253 10.777294545214849 4] 68.07255236417234] [[17.71296474878555 3.800164339203052 12] 27.38925898819096] [[70.60771325156578 11.557961777888965 2] 95.61558989165567] [[52.62102244916001 51.04331015517113 8] 747.314878844336] [[8.751442898916931 5.221936004029243 2] 22.31121430665652] [[55.859294831536594 19.79055795602232 6] 116.9264647918108] [[8.415812537728023 7.527795786120094 12] 111.45997112013468] [[64.69250452699325 58.303092190694414 1] 122.99559671768766] [[80.03465611674505 31.7138895697713 19] 185.0913587493753] [[5.152177111099441 2.1330553643108408 8] 12.421628829910505] [[81.64227156706289 24.40535675193546 15] 151.26547662264718] [[45.77020142067386 14.376645471719128 20] 87.69103093667414] [[86.06655109282323 79.22112026391166 5] 705.0213147484104] [[36.22066837230424 10.830266018422352 3] 65.3261581757281] [[76.39943325007572 55.56617259781668 12] 473.339139245704] [[91.85618833729652 55.18880154105334 1] 147.04498987834984] [[16.351830811519314 15.015507735118424 10] 220.1921308050422] [[15.10749280588142 3.865977292695957 17] 25.498480293326725] [[48.382464800254205 39.59533651096317 16] 464.7996449482709] [[74.25145645597769 37.32029273017883 8] 223.40541922118643] [[81.3632130159364 53.70381589371882 10] 391.0787969158339] [[21.021264790780087 19.01703289121732 12] 293.7584261080377] [[15.400234570147022 14.972265655117903 13] 335.27178176783684] [[89.63305242812889 38.695098935430565 12] 225.80337506784517] [[32.43605935110068 22.759245286655915 5] 153.5447436981634] [[67.79923025639773 14.985198055108924 7] 106.27054315215898] [[49.74806239070432 26.640532291281 12] 164.3650781598107] [[51.46811203743607 29.10265675506857 9] 184.31638069645527] [[88.71511927032182 30.571127300714338 17] 182.0049328244968] [[62.145 62.058 1] 124.203] [[28.647394644701173 11.565377870734183 5] 66.71558535687177] [[88.24679355957359 50.68982401465606 5] 306.0420412565428] [[44.56747473425981 9.400299204540678 12] 68.39353286062364] [[31.8553788037608 20.101823983888195 11] 139.9286736417627] [[59.25154798507464 34.67474186891582 13] 226.23049745010064] [[86.6932749618255 17.146715237012405 11] 129.44175367041663] [[81.02466125076013 66.90671935226014 10] 723.8467997802453] [[60.91809525597825 30.469309230550326 12] 182.79158610007156] [[25.220604052456437 14.582877112016313 1] 39.80348116447274] [[96.55634834069626 31.63538214050934 1] 128.1917304812056] [[90.34933152577864 67.62278514631875 18] 624.6058568209141] [[62.25009080082057 45.42197619850806 19] 397.2983860865757] [[8.690952282138554 1.6254767975200282 10] 12.68981664249565] [[72.70448910671657 11.627291513685336 10] 100.38605560152976] [[4.508338421682028 1.1746901371334486 3] 7.54962305216424] [[8.009724631805277 4.655868529883783 9] 30.018975932869907] [[25.986234261637176 7.902574871989679 9] 48.69716519014719] [[67.73866262678467 13.618593272779895 10] 101.82971290396809] [[46.821 8.151 1] 54.972] [[22.955704903473716 9.522452298913956 14] 55.50075513520339] [[22.985597416848385 7.699977426735591 13] 46.14309375518405] [[69.91942435832935 64.13759211847852 8] 808.4262319930441] [[18.558490830694023 15.261719662903635 14] 178.0675194418523] [[35.205473340585854 25.001661060600316 19] 207.4168989642416] [[80.48365382283802 6.028829075183441 7] 93.5176552451946] [[51.59481093485435 42.707264291422746 12] 490.8149794559178] [[77.88244675997892 71.76948235563891 13] 1247.8166200885514] [[69.06634272177155 27.551925382210023 13] 160.73999250591734] [[38.59261241325306 37.152743504110006 18] 1006.1969152799865] [[97.25429149789028 58.07717353035083 16] 385.4979776164741] [[58.29584345881111 56.70543539644176 2] 226.8651322624566] [[39.54260511487551 2.553792475754177 2] 44.81512245398126] [[33.59151458801102 25.712665664341024 3] 139.4458772208189] [[12.588726669552363 9.7848408749937 15] 98.15786269624088] [[36.53030133442315 21.42111803376184 6] 134.4158021128048] [[51.292944660480096 3.1086036919359734 5] 57.91120664795742] [[89.10458668923924 76.88075880465931 8] 838.312849469253] [[44.40278712205473 27.72638501946825 18] 192.01198675894636] [[78.44712451532912 39.923330500067046 18] 241.0399428848581] [[48.02015736932131 2.1116843262558387 17] 52.43779127231055] [[41.67381018374023 8.733231983898879 5] 63.74522296791245] [[79.57263541640944 43.995191293041664 17] 276.36057074233645] [[4.964064476210711 1.4363255281825371 7] 9.0047916976264] [[5.9528633620664495 5.083452120668414 3] 28.50881826063582] [[9.842612611563924 4.4725872621206655 16] 26.237958506860984] [[41.28351470515699 9.039950714294305 4] 64.28424240238668] [[70.42636138154938 52.348530071904776 6] 397.6275471996298] [[34.63668116651457 25.513382431458705 4] 161.1326407214202] [[13.854328616673412 8.438065440997752 6] 54.11136857912688] [[15.319 5.635 1] 20.954] [[81.07727489432324 53.07678524157052 3] 279.47024047065736] [[23.825570680485523 23.71298841706389 5] 235.45705682581823] [[58.87395533403744 41.44500274443874 15] 337.12051052040937] [[48.47182514745632 23.737809862869764 15] 141.50773700770162] [[15.106127196139573 1.6553819288102114 12] 18.824346437902467] [[27.5900116604602 21.521998536728677 14] 216.4042603744563] [[45.168297157390384 20.51966001023997 18] 120.37222110509327] [[84.16096658198269 51.89082150393272 15] 354.5738411697211] [[48.82616881190021 13.648209070537163 13] 86.71294100850118] [[15.927360543912584 8.414641880299097 2] 37.20221435849108])
truncated-lexicase-factor = 0.1
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-reordering-rate = 0.01
uniform-segment-deletion-rate = 0.01
uniform-segment-duplication-rate = 0.01
uniform-segmenting-rate = 0.01
uniform-silence-mutation-rate = 0.1
uniform-transposition-rate = 0.01
use-ALPS = false
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Bouncing Balls problem report - generation 0
Test total error for best: 322413.87799999927
Test mean error for best: 161.20694
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 12.717
Correct output: 12.371 | Program output: 8.241
Correct output: 73.158 | Program output: 86.062
Correct output: 107.414 | Program output: 113.405
Correct output: 66.004 | Program output: 25.305
Correct output: 18.351 | Program output: 6.387
Correct output: 203.233 | Program output: 104.709
Correct output: 168.282 | Program output: 64.177
Correct output: 22.792 | Program output: 18.881
Correct output: 101.076 | Program output: 17.173
Correct output: 89.438 | Program output: 10.123
Correct output: 167.016 | Program output: 85.925
Correct output: 249.241 | Program output: 144.641
Correct output: 17.252 | Program output: 5.343
Correct output: 78.298 | Program output: 40.509
Correct output: 192.343 | Program output: 97.895
Correct output: 325.936 | Program output: 122.584
Correct output: 137.403 | Program output: 49.779
Correct output: 159.858 | Program output: 26.438
Correct output: 43.816 | Program output: 8.168
Correct output: 46.214 | Program output: 23.540
Correct output: 41.847 | Program output: 19.944
Correct output: 111.620 | Program output: 43.813
Correct output: 136.088 | Program output: 55.947
Correct output: 180.744 | Program output: 95.027
Correct output: 77.511 | Program output: 103.240
Correct output: 79.636 | Program output: 31.549
Correct output: 2.001 | Program output: 4.001
Correct output: 114.432 | Program output: 61.473
Correct output: 19.059 | Program output: 12.138
Correct output: 290.212 | Program output: 138.818
Correct output: 197.499 | Program output: 135.464
Correct output: 64.127 | Program output: 15.908
Correct output: 8.284 | Program output: 4.298
Correct output: 203.329 | Program output: 78.878
Correct output: 104.522 | Program output: 57.523
Correct output: 124.531 | Program output: 64.339
Correct output: 125.101 | Program output: 51.849
Correct output: 133.674 | Program output: 50.795
Correct output: 112.074 | Program output: 46.199
Correct output: 308.094 | Program output: 145.108
Correct output: 106.842 | Program output: 54.673
Correct output: 144.377 | Program output: 184.658
Correct output: 296.288 | Program output: 139.324
Correct output: 205.797 | Program output: 109.202
Correct output: 985.735 | Program output: 203.928
Correct output: 680.660 | Program output: 202.422
Correct output: 32.170 | Program output: 12.746
Correct output: 343.239 | Program output: 134.733
Correct output: 584.598 | Program output: 180.352
Correct output: 97.620 | Program output: 113.159
Correct output: 712.538 | Program output: 129.815
Correct output: 123.589 | Program output: 65.267
Correct output: 69.710 | Program output: 102.197
Correct output: 250.818 | Program output: 98.983
Correct output: 120.502 | Program output: 32.428
Correct output: 137.940 | Program output: 72.786
Correct output: 64.091 | Program output: 25.676
Correct output: 65.119 | Program output: 35.187
Correct output: 335.947 | Program output: 164.370
Correct output: 475.105 | Program output: 178.163
Correct output: 3999.600 | Program output: 301.997
Correct output: 279.985 | Program output: 76.374
Correct output: 201.372 | Program output: 108.414
Correct output: 189.382 | Program output: 89.760
Correct output: 1543.271 | Program output: 144.902
Correct output: 102.020 | Program output: 5.000
Correct output: 193.877 | Program output: 101.788
Correct output: 128.350 | Program output: 67.574
Correct output: 53.143 | Program output: 14.319
Correct output: 181.602 | Program output: 86.553
Correct output: 431.170 | Program output: 59.383
Correct output: 619.098 | Program output: 133.243
Correct output: 986.172 | Program output: 94.434
Correct output: 77.831 | Program output: 41.312
Correct output: 55.900 | Program output: 62.321
Correct output: 54.583 | Program output: 30.087
Correct output: 622.783 | Program output: 195.807
Correct output: 83.177 | Program output: 31.464
Correct output: 42.501 | Program output: 11.191
Correct output: 184.764 | Program output: 95.118
Correct output: 67.665 | Program output: 17.284
Correct output: 19.670 | Program output: 10.625
Correct output: 464.533 | Program output: 192.570
Correct output: 106.459 | Program output: 28.067
Correct output: 1108.353 | Program output: 150.227
Correct output: 56.702 | Program output: 43.168
Correct output: 53.970 | Program output: 28.642
Correct output: 259.503 | Program output: 39.454
Correct output: 101.480 | Program output: 36.000
Correct output: 56.812 | Program output: 13.522
Correct output: 75.112 | Program output: 38.591
Correct output: 104.689 | Program output: 53.058
Correct output: 27.529 | Program output: 36.818
Correct output: 3.963 | Program output: 7.361
Correct output: 83.268 | Program output: 27.171
Correct output: 11.973 | Program output: 6.418
Correct output: 76.197 | Program output: 26.458
Correct output: 99.025 | Program output: 44.605
Correct output: 1219.703 | Program output: 238.817
Correct output: 396.400 | Program output: 171.110
Correct output: 125.727 | Program output: 33.895
Correct output: 371.001 | Program output: 170.344
Correct output: 738.413 | Program output: 249.034
Correct output: 280.393 | Program output: 112.728
Correct output: 37.145 | Program output: 13.985
Correct output: 425.982 | Program output: 153.170
Correct output: 357.821 | Program output: 131.158
Correct output: 120.482 | Program output: 31.497
Correct output: 845.157 | Program output: 157.960
Correct output: 68.073 | Program output: 34.332
Correct output: 27.389 | Program output: 13.400
Correct output: 95.616 | Program output: 36.674
Correct output: 747.315 | Program output: 155.130
Correct output: 22.311 | Program output: 17.666
Correct output: 116.926 | Program output: 61.372
Correct output: 111.460 | Program output: 24.583
Correct output: 122.996 | Program output: 176.909
Correct output: 185.091 | Program output: 97.142
Correct output: 12.422 | Program output: 8.399
Correct output: 151.265 | Program output: 75.216
Correct output: 87.691 | Program output: 45.130
Correct output: 705.021 | Program output: 239.663
Correct output: 65.326 | Program output: 34.491
Correct output: 473.339 | Program output: 168.699
Correct output: 147.045 | Program output: 167.566
Correct output: 220.192 | Program output: 47.047
Correct output: 25.498 | Program output: 13.598
Correct output: 464.800 | Program output: 120.786
Correct output: 223.405 | Program output: 113.961
Correct output: 391.079 | Program output: 163.111
Correct output: 293.758 | Program output: 59.051
Correct output: 335.272 | Program output: 46.917
Correct output: 225.803 | Program output: 118.085
Correct output: 153.545 | Program output: 70.278
Correct output: 106.271 | Program output: 46.956
Correct output: 164.365 | Program output: 81.922
Correct output: 184.316 | Program output: 89.308
Correct output: 182.005 | Program output: 93.713
Correct output: 124.203 | Program output: 188.174
Correct output: 66.716 | Program output: 36.696
Correct output: 306.042 | Program output: 154.069
Correct output: 68.394 | Program output: 30.201
Correct output: 139.929 | Program output: 62.305
Correct output: 226.230 | Program output: 106.024
Correct output: 129.442 | Program output: 53.440
Correct output: 723.847 | Program output: 202.720
Correct output: 182.792 | Program output: 93.408
Correct output: 39.803 | Program output: 45.749
Correct output: 128.192 | Program output: 96.906
Correct output: 624.606 | Program output: 204.868
Correct output: 397.298 | Program output: 138.266
Correct output: 12.690 | Program output: 6.876
Correct output: 100.386 | Program output: 36.882
Correct output: 7.550 | Program output: 5.524
Correct output: 30.019 | Program output: 15.968
Correct output: 48.697 | Program output: 25.708
Correct output: 101.830 | Program output: 42.856
Correct output: 54.972 | Program output: 26.453
Correct output: 55.501 | Program output: 30.567
Correct output: 46.143 | Program output: 25.100
Correct output: 808.426 | Program output: 194.413
Correct output: 178.068 | Program output: 47.785
Correct output: 207.417 | Program output: 77.005
Correct output: 93.518 | Program output: 20.086
Correct output: 490.815 | Program output: 130.122
Correct output: 1247.817 | Program output: 217.308
Correct output: 160.740 | Program output: 84.656
Correct output: 1006.197 | Program output: 113.458
Correct output: 385.498 | Program output: 176.232
Correct output: 226.865 | Program output: 172.116
Correct output: 44.815 | Program output: 9.661
Correct output: 139.446 | Program output: 79.138
Correct output: 98.158 | Program output: 31.355
Correct output: 134.416 | Program output: 66.263
Correct output: 57.911 | Program output: 11.326
Correct output: 838.313 | Program output: 232.642
Correct output: 192.012 | Program output: 85.179
Correct output: 241.040 | Program output: 121.770
Correct output: 52.438 | Program output: 8.335
Correct output: 63.745 | Program output: 28.200
Correct output: 276.361 | Program output: 133.986
Correct output: 9.005 | Program output: 6.309
Correct output: 28.509 | Program output: 17.250
Correct output: 26.238 | Program output: 15.418
Correct output: 64.284 | Program output: 29.120
Correct output: 397.628 | Program output: 159.046
Correct output: 161.133 | Program output: 78.540
Correct output: 54.111 | Program output: 27.314
Correct output: 20.954 | Program output: 18.905
Correct output: 279.470 | Program output: 161.230
Correct output: 235.457 | Program output: 73.139
Correct output: 337.121 | Program output: 126.335
Correct output: 141.508 | Program output: 73.213
Correct output: 18.824 | Program output: 6.966
Correct output: 216.404 | Program output: 66.566
Correct output: 120.372 | Program output: 63.559
Correct output: 354.574 | Program output: 157.672
Correct output: 86.713 | Program output: 42.945
Correct output: 37.202 | Program output: 27.244
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 3 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 1 1 1 1 5 1 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
Population mean number of elite cases: 0.23
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_negate} {:close 0, :instruction exec_do*count} {:close 2, :instruction float_cos} {:close 0, :instruction float_yankdup} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction float_swap} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_frominteger} {:close 0, :instruction tag_boolean_337} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction float_sub} {:close 0, :instruction 0.0} {:close 0, :instruction exec_while} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction tag_float_635} {:close 0, :instruction float_max} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction 2.0} {:close 0, :instruction float_floor} {:close 1, :instruction float_log2} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_log10} {:close 0, :instruction tagged_260} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 1, :instruction 0.0} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yank} {:close 1, :instruction float_ceiling} {:close 0, :instruction exec_y} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction float_gte} {:close 0, :instruction in2} {:close 0, :instruction float_sin} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_y} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 1, :instruction exec_while} {:close 2, :instruction float_fromboolean} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 1, :instruction integer_mult} {:close 1, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_min} {:close 2, :instruction float_max} {:close 1, :instruction integer_swap} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_dup} {:close 0, :instruction float_max} {:close 0, :instruction float_dup} {:close 0, :instruction in3} {:close 1, :instruction float_pow} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 1, :instruction integer_max} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 0, :instruction float_log2} {:close 1, :instruction float_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_swap} {:close 0, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_shove} {:close 0, :instruction float_negate} {:close 0, :instruction in1} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction float_min} {:close 0, :instruction in3} {:close 0, :instruction float_floor} {:close 1, :instruction 1.0} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_sub} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_do*while} {:close 1, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_empty} {:close 0, :instruction float_sqrt} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction float_gt} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_empty} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction float_arccos} {:close 0, :instruction in3} {:close 0, :instruction float_dec} {:close 0, :instruction in1} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_dup_times} {:close 1, :instruction float_inc} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 0, :instruction integer_fromfloat} {:close 1, :instruction float_gte} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction float_min} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 1, :instruction in1} {:close 0, :instruction float_max} {:close 0, :instruction 2.0} {:close 1, :instruction integer_rot} {:close 0, :instruction float_dup_times} {:close 0, :instruction float_flush} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_gt} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction tag_float_118} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_dup} {:close 1, :instruction float_div} {:close 0, :instruction integer_sub} {:close 0, :instruction float_mod} {:close 1, :instruction float_eq} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction integer_dup} {:close 1, :instruction float_frominteger} {:close 0, :instruction in1} {:close 1, :instruction integer_lt} {:close 1, :instruction exec_do*while} {:close 0, :instruction float_empty} {:close 0, :instruction float_log2} {:close 1, :instruction float_log10} {:close 1, :instruction float_deepdup} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 0, :instruction integer_abs} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 1, :instruction 1.0} {:close 0, :instruction boolean_dup})
Best program: (integer_negate exec_do*count (float_cos) float_yankdup boolean_empty in2 integer_dup integer_dup_items float_swap boolean_invert_second_then_and in2 boolean_empty integer_yankdup integer_abs float_add float_frominteger tag_boolean_337 2.0 in1 float_min in2 float_empty in1 in3 float_sub 0.0 exec_while (integer_rot exec_if (tag_float_635 float_max in3 in2 2.0 float_floor float_log2) (in3 exec_do*count (float_log10 tagged_260 integer_dup exec_do*times (float_rot integer_sub) integer_stackdepth in1) integer_dec boolean_dup_times 2.0 in1 exec_rot () () (integer_sub integer_shove exec_y (exec_y (in2) float_min 0.0) integer_div boolean_yankdup boolean_yank float_ceiling) exec_y (exec_noop) in1 float_gte in2 float_sin integer_fromboolean exec_do*times (exec_y () in1 in1 exec_while () float_fromboolean)) exec_when (boolean_dup exec_s (integer_mult) (0.0) (1.0 float_min float_max)) integer_swap) integer_yankdup exec_swap (integer_lt) (integer_dup float_max float_dup in3 float_pow) in2 float_stackdepth exec_do*count (exec_y (boolean_frominteger float_add) integer_max) float_square in3 float_log2 float_dup_times boolean_eq boolean_xor exec_swap (0.0 1.0 float_shove float_negate in1 boolean_xor) (boolean_frominteger float_min in3 float_floor 1.0) in2 exec_s (float_sub boolean_empty boolean_invert_second_then_and exec_do*while (in2) in2 boolean_empty float_empty float_sqrt exec_eq) (exec_dup (float_gt integer_dup in3 exec_do*count (boolean_empty in1 integer_shove exec_do*while (float_arccos in3 float_dec in1 boolean_flush boolean_stackdepth exec_dup_times () float_inc) integer_pop exec_while (integer_fromfloat float_gte) exec_while (integer_eq boolean_invert_first_then_and float_min exec_noop integer_negate) exec_empty in3 in1) float_max 2.0 integer_rot) float_dup_times float_flush exec_yank integer_gt) (boolean_fromfloat) tag_float_118 integer_flush exec_dup () float_div integer_sub float_mod float_eq in1 boolean_invert_second_then_and float_mult integer_empty exec_empty exec_empty in3 float_min integer_dup float_frominteger in1 integer_lt exec_do*while () float_empty float_log2 float_log10 float_deepdup integer_abs boolean_not integer_abs boolean_swap in1 exec_dup_times () integer_max exec_eq exec_do*count (exec_when (1.0) boolean_dup))
Errors: [91.88 4.131 12.905 5.991 40.699 11.964 98.524 104.105 3.911 83.903 79.315 81.092 104.599 11.909 37.79 94.448 203.352 87.624 133.42 35.649 22.674 21.903 67.807 80.141 85.716 25.729 48.087 2.0 52.959 6.921 151.394 62.034 48.218 3.986 124.451 46.999 60.193 73.253 82.878 65.875 162.986 52.169 40.281 156.964 96.595 781.807 478.238 19.423 208.506 404.246 15.539 582.723 58.322 32.487 151.834 88.074 65.154 38.414 29.931 171.577 296.942 3697.603 203.612 92.958 99.621 1398.369 97.02 92.089 60.776 38.823 95.049 371.787 485.855 891.738 36.519 6.421 24.497 426.976 51.712 31.31 89.646 50.381 9.045 271.962 78.392 958.126 13.534 25.328 220.05 65.48 43.29 36.521 51.632 9.289 3.398 56.097 5.555 49.739 54.42 980.885 225.29 91.832 200.657 489.38 167.665 23.16 272.812 226.664 88.984 687.197 33.741 13.989 58.942 592.185 4.645 55.555 86.877 53.914 87.95 4.022 76.049 42.561 465.358 30.835 304.641 20.521 173.146 11.901 344.014 109.445 227.967 234.707 288.355 107.718 83.267 59.315 82.443 95.008 88.292 63.971 30.019 151.973 38.193 77.623 120.206 76.002 521.127 89.384 5.945 31.286 419.738 259.032 5.813 63.504 2.026 14.051 22.989 58.974 28.519 24.933 21.043 614.013 130.282 130.412 73.431 360.693 1030.508 76.084 892.739 209.266 54.749 35.154 60.308 66.803 68.152 46.585 605.671 106.833 119.27 44.103 35.546 142.375 2.696 11.258 10.82 35.164 238.582 82.592 26.797 2.049 118.24 162.318 210.786 68.294 11.858 149.838 56.813 196.901 43.768 9.958]
Total: 32447.210000000006
Mean: 162.23605
Genome size: 203
Size: 244
Percent parens: 0.168
Age: 0
--- Population Statistics ---
Average total errors in population: 3.020231959585291E12
Median total errors in population: 47435.271
Error averages by case: (1.4000177158384314E10 1.0000163011049124E10 1.5000303364737206E10 1.6008122235705513E10 1.62809756529481E10 1.00001670189917E10 1.7015239330962744E10 1.6000165804275352E10 1.3000177021436068E10 1.5019278990595236E10 1.3000164551915075E10 1.4001812525265024E10 1.7462335895825886E10 1.100015901530126E10 1.5000160196603575E10 1.5009006804200302E10 1.601730776793784E10 1.6000257624682215E10 1.300045232603282E10 1.4000162071040825E10 1.3016824802014616E10 1.4000477906267756E10 1.7004905223920887E10 1.7000312382063673E10 1.5002382959991375E10 1.6001137352555382E10 1.700016475267727E10 8.00016900583283E9 1.5000187739949392E10 8.0001710404929085E9 1.4189556934278048E10 1.2136163551289055E10 1.2000168221575771E10 1.000016800796465E10 1.3000194743014107E10 1.8000181200545666E10 1.7000272264112669E10 1.5000163589086544E10 1.90002559231721E10 1.300018592540962E10 1.7440490260511063E10 1.900018455271632E10 1.7246524939893494E10 1.8201650624836914E10 1.4012048778145039E10 1.823512219635414E10 1.8392178327222366E10 9.000164027694656E9 1.6096427742367308E10 1.7103801588160831E10 1.6005654767691795E10 1.8044259493007175E10 1.800021132260727E10 1.508613665608497E10 1.7224876879640114E10 1.6016202969638882E10 1.823775360468757E10 1.2005445843836704E10 1.6000165196596706E10 1.6328361285277544E10 1.618698859833284E10 1.600016269748145E10 1.50001762907391E10 1.4012105533681997E10 1.8000446196729282E10 1.6383410037299955E10 9.000160580794258E9 1.5004873942553535E10 1.7000196603588032E10 1.6216148366542034E10 1.7000347256328127E10 1.8000168080386246E10 1.6072865866861488E10 1.6174212996479599E10 1.4000164278689835E10 1.5059705789854933E10 1.6001409392704735E10 1.9329521814699116E10 1.5000164911389603E10 1.400016511594121E10 1.7001230016451748E10 1.500100933953762E10 1.000016876807679E10 1.6708762113860468E10 1.800016555762648E10 1.4810686970405563E10 1.2000164134239809E10 1.6000159082410114E10 1.6000165210060133E10 1.3000166974108858E10 1.2000166105687231E10 1.3759426607166609E10 1.817778458430107E10 1.4000169130123762E10 1.0000168006018362E10 1.7000164573398245E10 9.000167010587078E9 1.7245021620266174E10 1.7000172250030542E10 1.800016631390947E10 1.521859195114468E10 1.3757761530355593E10 1.8298098699218136E10 1.6000167955637905E10 1.6004562218144594E10 1.3000162626066986E10 1.801819839947722E10 1.7057202417991327E10 1.6000165332732529E10 1.7008420996153204E10 1.3000167055878542E10 1.303740945834452E10 1.2000168666938385E10 1.5005988154466688E10 8.000168930867676E9 1.3000197233237484E10 1.100028404959074E10 1.7042004677940409E10 1.600354968339436E10 9.000164011039175E9 1.8000822573257683E10 1.5000162587716276E10 1.700016789928288E10 1.6005585685416338E10 1.608232362621628E10 1.722880282721237E10 1.6000162610774755E10 1.3073235243582561E10 1.7012337364934866E10 1.5010043340824923E10 1.709547291252587E10 1.7000166018812681E10 1.7000161332935043E10 1.7027519864788141E10 1.5000177604130503E10 1.7000178486739435E10 1.5000296442181993E10 1.5000449753376123E10 1.7294002962735523E10 1.7048109772568111E10 1.3000295247280209E10 1.5104810001190659E10 1.600016532979903E10 1.7000169034837675E10 1.7002504564511276E10 1.7000253765883823E10 1.8375142050874367E10 1.5000948810109097E10 1.4000462812531126E10 1.6008223540735794E10 1.6778063429515444E10 1.7155367807299799E10 1.1000307018523085E10 1.7000166179671381E10 1.1000164002731453E10 1.2000176776175638E10 1.5151556345392107E10 1.7000170180932669E10 1.6005102232725662E10 1.6000165065299524E10 1.703058242457015E10 1.5118550347727589E10 1.6000166267911327E10 1.7000187169272213E10 1.6555093870538687E10 1.604728757339725E10 1.945861100567496E10 1.7000829367643927E10 1.5004063567174473E10 1.6445762912436642E10 1.2019464964513926E10 1.1000164091552143E10 1.7000191370332008E10 1.5063056601150991E10 1.5000172670176249E10 1.2000168349781242E10 1.600016404914939E10 1.5000282574708046E10 1.5025221697998999E10 1.4225838258031792E10 1.4001955154568094E10 1.7382429521654404E10 1.1000163007994814E10 1.1000165144763807E10 1.0006120003579159E10 1.3000165236191813E10 1.3035703974803232E10 1.300019355392797E10 1.2004473890486649E10 1.26369311793504E10 1.7086861585054043E10 1.4028847335805904E10 1.90292823767636E10 1.800022246485112E10 1.1000165018892391E10 1.7000169091724716E10 1.500018137674469E10 1.909309421088328E10 1.8000163492765957E10 1.1013214005673153E10)
Error minima by case: (5.43 2.371 6.842 5.991 5.658 1.351 31.767 49.263 3.792 3.076 3.672 43.289 14.241 5.748 27.087 42.657 90.936 18.858 47.333 1.872 4.34 0.416 1.694 7.33 54.256 2.489 16.379 0.0 27.082 6.059 55.212 37.501 22.515 3.986 31.671 46.999 54.531 18.798 14.561 31.974 73.094 6.471 40.281 61.288 29.203 403.805 445.66 11.159 108.239 349.598 15.539 213.946 12.973 10.29 15.818 9.885 25.326 1.806 29.931 100.947 240.105 1499.6 44.985 33.628 13.975 555.949 1.02 41.123 18.35 5.95 53.398 29.074 64.157 21.214 24.307 6.421 18.333 387.783 12.283 5.501 50.236 9.665 5.67 229.533 6.66 400.158 13.534 23.897 24.503 0.657 6.657 12.238 7.925 9.289 0.037 12.87 0.418 1.9 28.688 683.551 161.4 12.082 136.001 489.38 45.393 6.547 190.982 122.821 12.5 90.926 12.027 8.389 23.616 55.072 3.164 23.653 0.039 42.996 49.909 1.432 23.022 15.795 465.358 27.326 238.339 20.521 4.273 7.525 120.416 11.595 156.079 58.758 98.105 9.197 66.195 0.228 52.866 50.684 35.29 55.676 6.479 1.677 1.131 29.929 8.77 19.442 488.847 52.208 5.945 30.192 389.606 162.298 1.437 7.595 0.656 2.389 12.754 6.152 6.972 24.933 10.037 413.755 53.853 27.583 4.625 174.691 268.602 48.214 260.637 150.498 8.135 3.815 60.308 2.415 41.142 4.911 603.313 42.988 6.04 2.438 11.524 41.361 0.983 1.752 2.019 15.816 162.628 73.867 6.126 2.049 44.47 0.457 102.121 28.194 0.824 18.596 8.605 119.574 10.017 8.472)
Average genome size in population (length): 127.372
Average program size in population (points): 146.855
Average percent parens in population: 0.142
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.341
Error (vector) diversity:			 0.342
Behavioral diversity:				 0.343
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 1000
Number of program executions (running on a single case counts as 1 execution): 200000
Number of point (instruction) evaluations so far: 99043330
--- Timings ---
Current time: 1745362148147 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Bouncing Balls problem report - generation 1
Test total error for best: 239440.97900000014
Test mean error for best: 119.72049
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 110.897
Correct output: 12.371 | Program output: 13.513
Correct output: 73.158 | Program output: 132.200
Correct output: 107.414 | Program output: 184.684
Correct output: 66.004 | Program output: 84.541
Correct output: 18.351 | Program output: 22.502
Correct output: 203.233 | Program output: 203.699
Correct output: 168.282 | Program output: 94.676
Correct output: 22.792 | Program output: 37.046
Correct output: 101.076 | Program output: 114.192
Correct output: 89.438 | Program output: 94.965
Correct output: 167.016 | Program output: 169.193
Correct output: 249.241 | Program output: 239.110
Correct output: 17.252 | Program output: 7.778
Correct output: 78.298 | Program output: 65.930
Correct output: 192.343 | Program output: 195.880
Correct output: 325.936 | Program output: 180.895
Correct output: 137.403 | Program output: 150.258
Correct output: 159.858 | Program output: 36.046
Correct output: 43.816 | Program output: 48.646
Correct output: 46.214 | Program output: 51.064
Correct output: 41.847 | Program output: 47.320
Correct output: 111.620 | Program output: 64.796
Correct output: 136.088 | Program output: 148.249
Correct output: 180.744 | Program output: 171.538
Correct output: 77.511 | Program output: 148.004
Correct output: 79.636 | Program output: 88.254
Correct output: 2.001 | Program output: 6.002
Correct output: 114.432 | Program output: 111.920
Correct output: 19.059 | Program output: 24.427
Correct output: 290.212 | Program output: 219.224
Correct output: 197.499 | Program output: 221.791
Correct output: 64.127 | Program output: 22.300
Correct output: 8.284 | Program output: 6.397
Correct output: 203.329 | Program output: 115.408
Correct output: 104.522 | Program output: 110.505
Correct output: 124.531 | Program output: 133.777
Correct output: 125.101 | Program output: 76.840
Correct output: 133.674 | Program output: 146.164
Correct output: 112.074 | Program output: 122.841
Correct output: 308.094 | Program output: 228.554
Correct output: 106.842 | Program output: 111.134
Correct output: 144.377 | Program output: 269.149
Correct output: 296.288 | Program output: 219.414
Correct output: 205.797 | Program output: 196.883
Correct output: 985.735 | Program output: 279.481
Correct output: 680.660 | Program output: 285.170
Correct output: 32.170 | Program output: 18.330
Correct output: 343.239 | Program output: 199.911
Correct output: 584.598 | Program output: 255.323
Correct output: 97.620 | Program output: 174.726
Correct output: 712.538 | Program output: 175.474
Correct output: 123.589 | Program output: 122.011
Correct output: 69.710 | Program output: 139.508
Correct output: 250.818 | Program output: 147.326
Correct output: 120.502 | Program output: 131.299
Correct output: 137.940 | Program output: 127.227
Correct output: 64.091 | Program output: 37.167
Correct output: 65.119 | Program output: 66.402
Correct output: 335.947 | Program output: 265.361
Correct output: 475.105 | Program output: 262.010
Correct output: 3999.600 | Program output: 402.997
Correct output: 279.985 | Program output: 102.948
Correct output: 201.372 | Program output: 197.367
Correct output: 189.382 | Program output: 141.269
Correct output: 1543.271 | Program output: 194.719
Correct output: 102.020 | Program output: 106.000
Correct output: 193.877 | Program output: 182.506
Correct output: 128.350 | Program output: 116.316
Correct output: 53.143 | Program output: 59.405
Correct output: 181.602 | Program output: 136.306
Correct output: 431.170 | Program output: 80.436
Correct output: 619.098 | Program output: 181.358
Correct output: 986.172 | Program output: 126.498
Correct output: 77.831 | Program output: 69.107
Correct output: 55.900 | Program output: 99.114
Correct output: 54.583 | Program output: 54.164
Correct output: 622.783 | Program output: 279.088
Correct output: 83.177 | Program output: 92.127
Correct output: 42.501 | Program output: 47.991
Correct output: 184.764 | Program output: 159.655
Correct output: 67.665 | Program output: 74.800
Correct output: 19.670 | Program output: 23.778
Correct output: 464.533 | Program output: 288.767
Correct output: 106.459 | Program output: 116.224
Correct output: 1108.353 | Program output: 204.450
Correct output: 56.702 | Program output: 63.864
Correct output: 53.970 | Program output: 57.573
Correct output: 259.503 | Program output: 53.316
Correct output: 101.480 | Program output: 111.763
Correct output: 56.812 | Program output: 62.991
Correct output: 75.112 | Program output: 79.925
Correct output: 104.689 | Program output: 86.068
Correct output: 27.529 | Program output: 53.740
Correct output: 3.963 | Program output: 10.537
Correct output: 83.268 | Program output: 92.320
Correct output: 11.973 | Program output: 15.832
Correct output: 76.197 | Program output: 84.639
Correct output: 99.025 | Program output: 109.172
Correct output: 1219.703 | Program output: 327.070
Correct output: 396.400 | Program output: 261.110
Correct output: 125.727 | Program output: 47.857
Correct output: 371.001 | Program output: 265.704
Correct output: 738.413 | Program output: 338.980
Correct output: 280.393 | Program output: 168.073
Correct output: 37.145 | Program output: 42.800
Correct output: 425.982 | Program output: 219.275
Correct output: 357.821 | Program output: 191.912
Correct output: 120.482 | Program output: 131.137
Correct output: 845.157 | Program output: 213.887
Correct output: 68.073 | Program output: 49.960
Correct output: 27.389 | Program output: 32.113
Correct output: 95.616 | Program output: 108.282
Correct output: 747.315 | Program output: 208.751
Correct output: 22.311 | Program output: 27.417
Correct output: 116.926 | Program output: 118.231
Correct output: 111.460 | Program output: 33.999
Correct output: 122.996 | Program output: 242.602
Correct output: 185.091 | Program output: 178.176
Correct output: 12.422 | Program output: 14.551
Correct output: 151.265 | Program output: 157.858
Correct output: 87.691 | Program output: 91.900
Correct output: 705.021 | Program output: 326.730
Correct output: 65.326 | Program output: 71.711
Correct output: 473.339 | Program output: 246.098
Correct output: 147.045 | Program output: 260.423
Correct output: 220.192 | Program output: 64.398
Correct output: 25.498 | Program output: 29.705
Correct output: 464.800 | Program output: 170.168
Correct output: 223.405 | Program output: 189.212
Correct output: 391.079 | Program output: 245.475
Correct output: 293.758 | Program output: 81.072
Correct output: 335.272 | Program output: 63.317
Correct output: 225.803 | Program output: 208.718
Correct output: 153.545 | Program output: 103.714
Correct output: 106.271 | Program output: 115.755
Correct output: 164.365 | Program output: 132.670
Correct output: 184.316 | Program output: 141.776
Correct output: 182.005 | Program output: 183.429
Correct output: 124.203 | Program output: 251.319
Correct output: 66.716 | Program output: 66.344
Correct output: 306.042 | Program output: 243.316
Correct output: 68.394 | Program output: 75.768
Correct output: 139.929 | Program output: 95.161
Correct output: 226.230 | Program output: 166.276
Correct output: 129.442 | Program output: 141.133
Correct output: 723.847 | Program output: 284.745
Correct output: 182.792 | Program output: 155.326
Correct output: 39.803 | Program output: 71.969
Correct output: 128.192 | Program output: 194.462
Correct output: 624.606 | Program output: 296.218
Correct output: 397.298 | Program output: 201.516
Correct output: 12.690 | Program output: 16.567
Correct output: 100.386 | Program output: 110.586
Correct output: 7.550 | Program output: 11.032
Correct output: 30.019 | Program output: 24.977
Correct output: 48.697 | Program output: 52.694
Correct output: 101.830 | Program output: 111.594
Correct output: 54.972 | Program output: 74.274
Correct output: 55.501 | Program output: 54.523
Correct output: 46.143 | Program output: 49.086
Correct output: 808.426 | Program output: 265.332
Correct output: 178.068 | Program output: 67.344
Correct output: 207.417 | Program output: 113.210
Correct output: 93.518 | Program output: 101.570
Correct output: 490.815 | Program output: 182.717
Correct output: 1247.817 | Program output: 296.191
Correct output: 160.740 | Program output: 154.722
Correct output: 1006.197 | Program output: 153.051
Correct output: 385.498 | Program output: 274.486
Correct output: 226.865 | Program output: 231.412
Correct output: 44.815 | Program output: 50.204
Correct output: 139.446 | Program output: 113.730
Correct output: 98.158 | Program output: 44.943
Correct output: 134.416 | Program output: 103.794
Correct output: 57.911 | Program output: 63.619
Correct output: 838.313 | Program output: 322.747
Correct output: 192.012 | Program output: 130.582
Correct output: 241.040 | Program output: 201.217
Correct output: 52.438 | Program output: 57.355
Correct output: 63.745 | Program output: 70.874
Correct output: 276.361 | Program output: 214.558
Correct output: 9.005 | Program output: 12.273
Correct output: 28.509 | Program output: 24.203
Correct output: 26.238 | Program output: 26.260
Correct output: 64.284 | Program output: 71.403
Correct output: 397.628 | Program output: 230.472
Correct output: 161.133 | Program output: 114.177
Correct output: 54.111 | Program output: 42.169
Correct output: 20.954 | Program output: 35.224
Correct output: 279.470 | Program output: 243.308
Correct output: 235.457 | Program output: 97.965
Correct output: 337.121 | Program output: 186.209
Correct output: 141.508 | Program output: 122.685
Correct output: 18.824 | Program output: 23.072
Correct output: 216.404 | Program output: 95.156
Correct output: 120.372 | Program output: 109.727
Correct output: 354.574 | Program output: 242.833
Correct output: 86.713 | Program output: 92.771
Correct output: 37.202 | Program output: 44.171
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 9 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 11 12 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 4 1 2 1 2 40 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 11 1 1 4 1 1 1 1 2 1 3 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 14 13 1 1 1 1 1 1 2 3 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9 1 1 1 1 1 3 1 3 1 1 1 1 1 1 1 1)
Population mean number of elite cases: 0.34
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.01
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_negate} {:close 0, :instruction exec_do*count} {:close 2, :instruction float_cos} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction float_swap} {:close 0, :instruction float_swap} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_frominteger} {:close 1, :instruction 1.0} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction float_sub} {:close 0, :instruction 0.0} {:close 0, :instruction exec_while} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction tag_float_635} {:close 0, :instruction float_max} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction 2.0} {:close 0, :instruction float_floor} {:close 1, :instruction float_log2} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_log10} {:close 0, :instruction tagged_260} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 1, :instruction 0.0} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_yank} {:close 1, :instruction float_ceiling} {:close 0, :instruction exec_y} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction float_gte} {:close 0, :instruction in2} {:close 0, :instruction float_sin} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_y} {:close 0, :instruction in1} {:close 0, :instruction 1.0} {:close 0, :instruction in1} {:close 1, :instruction exec_while} {:close 0, :instruction tagged_61} {:close 2, :instruction float_fromboolean} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 1, :instruction integer_mult} {:close 1, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_min} {:close 2, :instruction float_max} {:close 1, :instruction integer_swap} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_dup} {:close 0, :instruction float_max} {:close 0, :instruction float_dup} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 0, :instruction float_log2} {:close 1, :instruction float_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_swap} {:close 0, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_shove} {:close 0, :instruction float_negate} {:close 0, :instruction in1} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction float_min} {:close 0, :instruction float_floor} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_sub} {:close 1, :instruction float_ceiling} {:close 0, :instruction boolean_empty} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_empty} {:close 0, :instruction float_sqrt} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction float_gt} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_empty} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction in3} {:close 0, :instruction float_dec} {:close 0, :instruction in1} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_dup_times} {:close 1, :instruction float_inc} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction float_gte} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_dup} {:close 0, :instruction float_min} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 1, :instruction in1} {:close 0, :instruction float_max} {:close 1, :instruction integer_rot} {:close 0, :instruction float_dup_times} {:close 0, :instruction float_flush} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_gt} {:close 1, :instruction boolean_fromfloat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_dup} {:close 1, :instruction float_div} {:close 0, :instruction integer_sub} {:close 0, :instruction float_mod} {:close 1, :instruction float_eq} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_div} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction integer_dup} {:close 1, :instruction float_frominteger} {:close 0, :instruction in1} {:close 1, :instruction integer_lt} {:close 0, :instruction float_empty} {:close 0, :instruction float_log2} {:close 0, :instruction integer_min} {:close 1, :instruction float_deepdup} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 0, :instruction integer_abs} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_max} {:close 0, :instruction float_tan} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 1, :instruction 1.0} {:close 0, :instruction boolean_dup})
Best program: (integer_negate exec_do*count (float_cos) boolean_empty in2 integer_dup_items float_swap float_swap boolean_invert_second_then_and in2 in1 boolean_empty integer_yankdup integer_abs float_add float_frominteger 1.0 2.0 in1 float_min in2 float_empty in1 in3 float_sub 0.0 exec_while (integer_rot exec_if (tag_float_635 float_max in3 in2 2.0 float_floor float_log2) (in3 exec_do*count (float_log10 tagged_260 integer_dup exec_do*times (float_rot integer_sub) integer_stackdepth in1) integer_dec boolean_dup_times 2.0 in1 exec_rot () () (integer_sub integer_shove exec_y (exec_y (in2) float_min 0.0) integer_div boolean_yank float_ceiling) exec_y (exec_noop) in1 float_gte in2 float_sin integer_fromboolean exec_do*times (exec_y () in1 1.0 in1 exec_while () tagged_61 float_fromboolean)) exec_when (boolean_dup exec_s (integer_mult) (0.0) (1.0 float_min float_max)) integer_swap) integer_yankdup exec_swap (integer_lt) (integer_dup float_max float_dup in3 in2) float_stackdepth exec_do*count (exec_y (boolean_frominteger float_add) float_square in3 float_log2 float_dup_times) boolean_eq boolean_xor exec_swap (0.0 1.0 float_shove float_negate in1 boolean_xor) (boolean_frominteger float_min float_floor in2) exec_s (float_sub float_ceiling) (boolean_empty in2) (in1 in2 boolean_empty float_empty float_sqrt exec_eq) exec_dup (float_gt integer_dup in3 exec_do*count (boolean_empty in1 integer_shove exec_do*while (in3 float_dec in1 boolean_flush boolean_stackdepth exec_dup_times () float_inc) integer_pop exec_while (float_gte) exec_while (integer_eq boolean_invert_first_then_and exec_dup (float_min exec_noop integer_negate) exec_empty in3 in1) float_max integer_rot) float_dup_times float_flush exec_yank integer_gt) boolean_fromfloat integer_flush exec_dup () float_div integer_sub float_mod float_eq in1 boolean_invert_second_then_and float_mult integer_empty exec_empty integer_div exec_empty in3 float_min integer_dup float_frominteger in1 integer_lt float_empty float_log2 integer_min float_deepdup integer_abs boolean_not integer_abs boolean_swap in1 exec_dup_times () integer_max float_tan exec_eq exec_do*count (exec_when (1.0) boolean_dup))
Errors: [6.3 1.142 59.042 77.27 18.537 4.151 0.465 73.606 14.254 13.116 5.527 2.176 10.13 9.474 12.369 3.536 145.041 12.855 123.813 4.83 4.85 5.473 46.824 12.162 9.206 70.493 8.618 4.001 2.512 5.368 70.989 24.293 41.827 1.887 87.921 5.982 9.246 48.261 12.491 10.767 79.541 4.291 124.772 76.875 8.914 706.254 395.49 13.84 143.328 329.275 77.106 537.064 1.579 69.798 103.491 10.797 10.713 26.923 1.284 70.586 213.094 3596.603 177.037 4.005 48.112 1348.552 3.98 11.371 12.033 6.263 45.296 350.735 437.741 859.674 8.724 43.214 0.419 343.696 8.951 5.49 25.109 7.135 4.108 175.766 9.765 903.902 7.162 3.602 206.187 10.283 6.18 4.813 18.621 26.212 6.574 9.052 3.859 8.441 10.147 892.633 135.291 77.87 105.297 399.434 112.32 5.655 206.708 165.909 10.655 631.27 18.112 4.724 12.666 538.564 5.106 1.305 77.461 119.606 6.915 2.13 6.593 4.209 378.291 6.385 227.241 113.378 155.794 4.207 294.631 34.193 145.604 212.686 271.955 17.085 49.831 9.484 31.695 42.54 1.424 127.116 0.372 62.726 7.375 44.768 59.955 11.692 439.102 27.466 32.166 66.271 328.388 195.782 3.878 10.2 3.483 5.042 3.997 9.765 19.302 0.978 2.942 543.094 110.724 94.206 8.052 308.098 951.626 6.018 853.146 111.012 4.547 5.389 25.716 53.215 30.622 5.708 515.566 61.43 39.823 4.917 7.128 61.802 3.268 4.306 0.022 7.119 167.156 46.956 11.943 14.27 36.163 137.493 150.912 18.822 4.248 121.248 10.645 111.74 6.058 6.969]
Total: 24505.434
Mean: 122.52717
Genome size: 198
Size: 238
Percent parens: 0.168
Age: 1
--- Population Statistics ---
Average total errors in population: 3.391569839181476E12
Median total errors in population: 46738.092999999986
Error averages by case: (1.2082429852948805E10 5.000045636257784E9 2.1281648582002228E10 2.0439670444991016E10 1.6750091718207388E10 7.250053420344099E9 2.1804666232339394E10 1.7360152630392345E10 1.1107525425018555E10 1.27794271169035E10 1.1250131549609016E10 1.9768774779660168E10 1.9875751695600845E10 3.0000441305636983E9 1.6864235859214113E10 1.7795123575457645E10 1.8822728030335785E10 2.1760530789450256E10 1.0116571087785162E10 1.202790648287819E10 1.3881258044734419E10 1.4036468240217999E10 1.780560371398414E10 2.176163089895208E10 2.128994106837127E10 1.8289681775909225E10 1.6289326070186466E10 5.000052047333113E9 1.8770333742034878E10 9.718997112455496E9 1.920056590951676E10 2.2108676167909832E10 4.0251049479579268E9 3.000044058206732E9 1.8827960908560764E10 1.8769356924131413E10 1.876510571766665E10 1.7838908414910202E10 2.076103839341663E10 1.876336106628097E10 1.773958207221198E10 1.9768148080985672E10 2.4247477049205296E10 2.0195255477643665E10 1.979533085723168E10 2.070330553210771E10 2.1835986820496517E10 4.0001413072765355E9 1.797339776975412E10 2.2558541845766144E10 2.1424004755458153E10 1.9861484443893604E10 2.178161194503196E10 2.0375761091245274E10 1.9775049426317764E10 1.7316538229748203E10 2.1777351417564682E10 1.2210577916199091E10 1.4519325919568228E10 2.407289460836912E10 2.0509431325730164E10 2.9760099916245865E10 1.7027815884769146E10 1.8805793124121037E10 1.7824107665902077E10 2.055869711912464E10 1.4250099521518446E10 2.1559469197492325E10 1.6771120513086138E10 1.4251105983074892E10 1.877106586660016E10 1.6800754066888643E10 1.9918006729786407E10 1.8784971557224316E10 1.7633083382200535E10 1.7339150052417007E10 1.4316227320223919E10 2.0750296339373226E10 1.4286256732584719E10 7.309911270119904E9 1.7768791333750183E10 1.1306196669161455E10 7.250045431397523E9 2.2865990991589405E10 1.6250598063560867E10 2.3430833704529907E10 2.080139657302997E10 1.553966694756356E10 1.6827794434752928E10 1.937791447121584E10 1.2334272093221989E10 1.8774841194674683E10 1.8791981129852406E10 1.6312864219272219E10 5.000048041464107E9 1.5250299457656992E10 5.0001837891285305E9 1.726826501501293E10 1.876581982064863E10 2.3761541358885582E10 2.4416601609911003E10 1.461466066865632E10 2.1654480869222466E10 2.2761320087936943E10 1.777940778445564E10 1.0940774860980444E10 2.0819516161589474E10 1.788964052094398E10 1.5280393028725048E10 1.979303219777875E10 1.2788023112634594E10 7.260595520916506E9 2.176423483215399E10 2.1792355233811317E10 7.131721049921799E9 1.6768089101372818E10 1.0119025327169014E10 2.3432865488535362E10 2.177248127168195E10 6.001458255213885E9 2.0764928248112545E10 2.1782547986119053E10 2.376169231410767E10 1.4919674038508688E10 2.0009626815296616E10 2.517550785555256E10 1.827413393022813E10 7.879090823529908E9 2.0836338761516045E10 1.9795062970439304E10 2.0048288998475197E10 1.6799876932386372E10 1.5863766694390562E10 1.8835804548536335E10 1.6786711747018894E10 1.976484780109249E10 2.0770526504929295E10 1.9770268987855717E10 2.277803146512196E10 2.4457914298271297E10 1.6785373482764711E10 2.107533486480125E10 1.4277409829943316E10 1.5805847298006096E10 1.791433843848268E10 1.8761966499365562E10 2.0887870913968628E10 1.8768665100367344E10 1.9455821919276733E10 1.9295460160376305E10 2.60948498105054E10 2.0133409944828632E10 6.000370388915313E9 1.9763826137746536E10 3.0000779836812024E9 5.129000702775719E9 1.565250739691287E10 1.9764843391565506E10 1.6750466899284702E10 1.231724801546486E10 1.131087155469268E10 2.323793472089442E10 1.6804111240070583E10 1.8818226902501335E10 1.5262166230570436E10 1.7865568844580914E10 2.281969999935014E10 1.91228585425066E10 2.019868910135964E10 2.6542777348014553E10 2.4844407640631218E10 9.050820962757362E9 1.6792846473142414E10 1.234672048130557E10 1.5876702652183382E10 1.0250151219395088E10 2.676137045129421E10 1.877392452804488E10 2.166396283009482E10 1.3252514323566927E10 1.4274623030742823E10 2.2016936897023827E10 4.072593088301352E9 5.0576994987230625E9 5.07167066917409E9 1.4275811692606674E10 1.8906415896108128E10 1.7805716497024204E10 1.132245415497789E10 1.0183865867582869E10 2.0109196276249935E10 1.5831830351089092E10 1.883173845258686E10 2.077089185585008E10 8.252767040922005E9 1.9786501864654537E10 1.9773491980849697E10 2.313367986984824E10 1.8812640444337723E10 1.2313480684106184E10)
Error minima by case: (0.273 0.278 2.95 3.089 0.996 0.351 0.465 1.801 0.089 2.924 1.393 2.176 0.481 0.204 0.066 1.45 1.05 0.597 0.943 1.816 1.214 0.416 0.242 0.378 1.521 2.489 2.681 0.0 2.512 2.977 0.511 0.013 5.73 0.018 2.71 0.541 4.093 2.899 0.674 1.765 1.378 1.201 4.519 13.514 0.469 110.434 49.939 0.045 2.386 116.09 0.62 87.956 1.579 0.498 4.49 0.498 4.636 0.954 1.284 4.053 100.384 1000.4 1.598 0.843 0.618 26.449 0.02 0.743 4.771 6.143 4.398 18.83 64.157 21.214 1.365 3.385 0.419 151.528 0.261 0.438 1.236 1.61 0.079 35.533 0.761 42.7 0.188 1.021 4.552 0.657 4.966 1.079 0.219 2.317 0.037 4.691 0.277 0.619 0.159 123.297 0.4 0.699 1.114 134.0 4.393 0.855 3.018 1.231 3.051 29.663 1.784 0.824 0.085 55.072 0.22 1.305 0.039 0.497 1.091 0.174 3.092 0.398 139.648 0.56 44.339 2.047 0.544 0.161 2.796 5.326 21.375 5.758 2.728 8.219 32.455 0.209 2.272 0.216 1.424 0.087 0.284 1.677 1.131 6.808 5.23 3.678 48.586 1.924 0.209 0.35 23.394 20.586 0.041 0.42 0.026 0.864 3.997 0.144 6.151 0.978 2.942 65.432 0.594 1.09 0.652 3.011 177.093 0.061 58.495 11.421 0.043 0.826 8.446 0.178 9.584 3.911 20.602 0.415 0.04 1.438 1.597 0.361 0.23 1.752 0.008 0.159 29.279 21.584 2.111 0.049 2.514 0.457 18.682 1.565 0.176 1.404 0.222 13.317 0.287 0.785)
Average genome size in population (length): 135.748
Average program size in population (points): 157.518
Average percent parens in population: 0.129
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.511
Error (vector) diversity:			 0.513
Behavioral diversity:				 0.516
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 2000
Number of program executions (running on a single case counts as 1 execution): 400000
Number of point (instruction) evaluations so far: 209069089
--- Timings ---
Current time: 1745362216863 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Bouncing Balls problem report - generation 2
Test total error for best: 208140.98900000047
Test mean error for best: 104.07049
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 116.042
Correct output: 12.371 | Program output: 15.673
Correct output: 73.158 | Program output: 186.241
Correct output: 107.414 | Program output: 256.955
Correct output: 66.004 | Program output: 98.077
Correct output: 18.351 | Program output: 23.426
Correct output: 203.233 | Program output: 270.171
Correct output: 168.282 | Program output: 134.128
Correct output: 22.792 | Program output: 46.300
Correct output: 101.076 | Program output: 122.307
Correct output: 89.438 | Program output: 98.380
Correct output: 167.016 | Program output: 223.142
Correct output: 249.241 | Program output: 332.204
Correct output: 17.252 | Program output: 8.948
Correct output: 78.298 | Program output: 89.602
Correct output: 192.343 | Program output: 257.810
Correct output: 325.936 | Program output: 259.285
Correct output: 137.403 | Program output: 180.111
Correct output: 159.858 | Program output: 50.338
Correct output: 43.816 | Program output: 50.758
Correct output: 46.214 | Program output: 63.424
Correct output: 41.847 | Program output: 57.283
Correct output: 111.620 | Program output: 90.671
Correct output: 136.088 | Program output: 182.214
Correct output: 180.744 | Program output: 231.556
Correct output: 77.511 | Program output: 213.498
Correct output: 79.636 | Program output: 105.953
Correct output: 2.001 | Program output: 7.001
Correct output: 114.432 | Program output: 149.569
Correct output: 19.059 | Program output: 29.186
Correct output: 290.212 | Program output: 308.435
Correct output: 197.499 | Program output: 308.768
Correct output: 64.127 | Program output: 29.572
Correct output: 8.284 | Program output: 7.431
Correct output: 203.329 | Program output: 164.660
Correct output: 104.522 | Program output: 145.520
Correct output: 124.531 | Program output: 173.336
Correct output: 125.101 | Program output: 108.073
Correct output: 133.674 | Program output: 176.694
Correct output: 112.074 | Program output: 150.307
Correct output: 308.094 | Program output: 321.960
Correct output: 106.842 | Program output: 144.249
Correct output: 144.377 | Program output: 388.921
Correct output: 296.288 | Program output: 308.963
Correct output: 205.797 | Program output: 266.351
Correct output: 985.735 | Program output: 412.100
Correct output: 680.660 | Program output: 416.785
Correct output: 32.170 | Program output: 23.494
Correct output: 343.239 | Program output: 286.400
Correct output: 584.598 | Program output: 372.224
Correct output: 97.620 | Program output: 246.832
Correct output: 712.538 | Program output: 258.684
Correct output: 123.589 | Program output: 162.189
Correct output: 69.710 | Program output: 204.306
Correct output: 250.818 | Program output: 209.981
Correct output: 120.502 | Program output: 149.584
Correct output: 137.940 | Program output: 172.418
Correct output: 64.091 | Program output: 50.951
Correct output: 65.119 | Program output: 86.527
Correct output: 335.947 | Program output: 371.607
Correct output: 475.105 | Program output: 377.452
Correct output: 3999.600 | Program output: 600.995
Correct output: 279.985 | Program output: 150.530
Correct output: 201.372 | Program output: 266.309
Correct output: 189.382 | Program output: 197.776
Correct output: 1543.271 | Program output: 287.987
Correct output: 102.020 | Program output: 106.000
Correct output: 193.877 | Program output: 247.032
Correct output: 128.350 | Program output: 158.032
Correct output: 53.143 | Program output: 65.618
Correct output: 181.602 | Program output: 190.675
Correct output: 431.170 | Program output: 116.691
Correct output: 619.098 | Program output: 266.853
Correct output: 986.172 | Program output: 186.120
Correct output: 77.831 | Program output: 93.315
Correct output: 55.900 | Program output: 137.329
Correct output: 54.583 | Program output: 70.889
Correct output: 622.783 | Program output: 406.292
Correct output: 83.177 | Program output: 109.770
Correct output: 42.501 | Program output: 52.118
Correct output: 184.764 | Program output: 219.733
Correct output: 67.665 | Program output: 82.989
Correct output: 19.670 | Program output: 27.527
Correct output: 464.533 | Program output: 413.814
Correct output: 106.459 | Program output: 131.601
Correct output: 1108.353 | Program output: 301.268
Correct output: 56.702 | Program output: 89.309
Correct output: 53.970 | Program output: 73.334
Correct output: 259.503 | Program output: 76.285
Correct output: 101.480 | Program output: 132.430
Correct output: 56.812 | Program output: 68.673
Correct output: 75.112 | Program output: 102.318
Correct output: 104.689 | Program output: 118.107
Correct output: 27.529 | Program output: 74.952
Correct output: 3.963 | Program output: 12.111
Correct output: 83.268 | Program output: 107.101
Correct output: 11.973 | Program output: 16.778
Correct output: 76.197 | Program output: 98.944
Correct output: 99.025 | Program output: 135.576
Correct output: 1219.703 | Program output: 482.948
Correct output: 396.400 | Program output: 371.850
Correct output: 125.727 | Program output: 67.121
Correct output: 371.001 | Program output: 375.934
Correct output: 738.413 | Program output: 501.669
Correct output: 280.393 | Program output: 239.892
Correct output: 37.145 | Program output: 48.790
Correct output: 425.982 | Program output: 318.055
Correct output: 357.821 | Program output: 276.018
Correct output: 120.482 | Program output: 148.802
Correct output: 845.157 | Program output: 315.861
Correct output: 68.073 | Program output: 69.515
Correct output: 27.389 | Program output: 37.714
Correct output: 95.616 | Program output: 129.398
Correct output: 747.315 | Program output: 308.838
Correct output: 22.311 | Program output: 35.861
Correct output: 116.926 | Program output: 155.812
Correct output: 111.460 | Program output: 47.055
Correct output: 122.996 | Program output: 357.208
Correct output: 185.091 | Program output: 239.604
Correct output: 12.422 | Program output: 16.817
Correct output: 151.265 | Program output: 204.669
Correct output: 87.691 | Program output: 118.653
Correct output: 705.021 | Program output: 483.172
Correct output: 65.326 | Program output: 91.372
Correct output: 473.339 | Program output: 355.230
Correct output: 147.045 | Program output: 368.800
Correct output: 220.192 | Program output: 92.429
Correct output: 25.498 | Program output: 35.437
Correct output: 464.800 | Program output: 247.359
Correct output: 223.405 | Program output: 261.853
Correct output: 391.079 | Program output: 350.882
Correct output: 293.758 | Program output: 117.106
Correct output: 335.272 | Program output: 91.262
Correct output: 225.803 | Program output: 284.109
Correct output: 153.545 | Program output: 147.232
Correct output: 106.271 | Program output: 143.725
Correct output: 164.365 | Program output: 183.951
Correct output: 184.316 | Program output: 197.981
Correct output: 182.005 | Program output: 242.571
Correct output: 124.203 | Program output: 373.435
Correct output: 66.716 | Program output: 87.474
Correct output: 306.042 | Program output: 342.696
Correct output: 68.394 | Program output: 92.569
Correct output: 139.929 | Program output: 133.364
Correct output: 226.230 | Program output: 233.625
Correct output: 129.442 | Program output: 173.427
Correct output: 723.847 | Program output: 416.558
Correct output: 182.792 | Program output: 214.265
Correct output: 39.803 | Program output: 99.135
Correct output: 128.192 | Program output: 255.733
Correct output: 624.606 | Program output: 429.463
Correct output: 397.298 | Program output: 290.360
Correct output: 12.690 | Program output: 17.818
Correct output: 100.386 | Program output: 131.841
Correct output: 7.550 | Program output: 11.382
Correct output: 30.019 | Program output: 32.289
Correct output: 48.697 | Program output: 66.499
Correct output: 101.830 | Program output: 136.832
Correct output: 54.972 | Program output: 88.576
Correct output: 55.501 | Program output: 71.568
Correct output: 46.143 | Program output: 62.485
Correct output: 808.426 | Program output: 391.607
Correct output: 178.068 | Program output: 95.867
Correct output: 207.417 | Program output: 161.214
Correct output: 93.518 | Program output: 111.628
Correct output: 490.815 | Program output: 266.131
Correct output: 1247.817 | Program output: 437.730
Correct output: 160.740 | Program output: 207.826
Correct output: 1006.197 | Program output: 225.356
Correct output: 385.498 | Program output: 388.640
Correct output: 226.865 | Program output: 342.823
Correct output: 44.815 | Program output: 53.312
Correct output: 139.446 | Program output: 163.155
Correct output: 98.158 | Program output: 62.513
Correct output: 134.416 | Program output: 144.636
Correct output: 57.911 | Program output: 67.836
Correct output: 838.313 | Program output: 474.508
Correct output: 192.012 | Program output: 184.035
Correct output: 241.040 | Program output: 279.064
Correct output: 52.438 | Program output: 59.579
Correct output: 63.745 | Program output: 86.340
Correct output: 276.361 | Program output: 300.549
Correct output: 9.005 | Program output: 13.146
Correct output: 28.509 | Program output: 32.370
Correct output: 26.238 | Program output: 33.206
Correct output: 64.284 | Program output: 87.483
Correct output: 397.628 | Program output: 333.169
Correct output: 161.133 | Program output: 163.204
Correct output: 54.111 | Program output: 57.045
Correct output: 20.954 | Program output: 44.494
Correct output: 279.470 | Program output: 347.461
Correct output: 235.457 | Program output: 143.391
Correct output: 337.121 | Program output: 267.099
Correct output: 141.508 | Program output: 168.161
Correct output: 18.824 | Program output: 24.383
Correct output: 216.404 | Program output: 136.200
Correct output: 120.372 | Program output: 148.767
Correct output: 354.574 | Program output: 344.615
Correct output: 86.713 | Program output: 118.067
Correct output: 37.202 | Program output: 59.001
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 2 2 2 1 1 1 2 2 1 1 1 1 1 1 7 1 1 1 1 1 1 1 1 2 1 7 3 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 3 1 2 1 3 2 1 2 1 1 1 1 1 1 2 3 3 1 9 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 4 1 1 1 2 1 1 1 2 1 11 1 1 1 8 1 1 1 2 1 3 1 1 2 1 1 1 2 2 1 1 1 7 1 1 1 7 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 1 1)
Population mean number of elite cases: 0.30
Count of perfect (error zero) individuals by case: (0 0 2 2 2 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_sub} {:close 0, :instruction integer_negate} {:close 0, :instruction exec_do*count} {:close 2, :instruction float_cos} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction float_swap} {:close 0, :instruction float_swap} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_frominteger} {:close 1, :instruction 1.0} {:close 0, :instruction 2.0} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 0, :instruction 0.0} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction float_sub} {:close 0, :instruction exec_while} {:close 0, :instruction exec_if} {:close 0, :instruction tag_float_635} {:close 0, :instruction float_max} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction float_floor} {:close 1, :instruction float_log2} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_log10} {:close 0, :instruction tagged_260} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_shove} {:close 1, :instruction in2} {:close 0, :instruction integer_shove} {:close 0, :instruction float_min} {:close 1, :instruction 0.0} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_yank} {:close 1, :instruction float_ceiling} {:close 0, :instruction exec_y} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction float_gte} {:close 0, :instruction in2} {:close 0, :instruction float_sin} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction 2.0} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_dup_times} {:close 0, :instruction in1} {:close 0, :instruction 1.0} {:close 0, :instruction in1} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction exec_while} {:close 2, :instruction float_fromboolean} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 1, :instruction integer_mult} {:close 1, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_min} {:close 2, :instruction float_dup_items} {:close 1, :instruction integer_swap} {:close 0, :instruction float_dup_items} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_dup} {:close 0, :instruction float_max} {:close 0, :instruction float_dup} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 0, :instruction float_log2} {:close 1, :instruction float_dup_times} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_swap} {:close 0, :instruction 0.0} {:close 0, :instruction exec_swap} {:close 0, :instruction 1.0} {:close 0, :instruction float_shove} {:close 0, :instruction float_negate} {:close 0, :instruction in1} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction float_min} {:close 0, :instruction float_floor} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_sub} {:close 1, :instruction float_ceiling} {:close 0, :instruction boolean_empty} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction boolean_empty} {:close 2, :instruction in1} {:close 0, :instruction float_empty} {:close 0, :instruction float_sqrt} {:close 0, :instruction exec_dup} {:close 0, :instruction float_gt} {:close 0, :instruction float_dec} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_empty} {:close 1, :instruction float_ceiling} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction in3} {:close 0, :instruction float_dec} {:close 0, :instruction in1} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction float_inc} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction float_gte} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_dup} {:close 0, :instruction float_min} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 1, :instruction in1} {:close 0, :instruction float_max} {:close 1, :instruction integer_rot} {:close 0, :instruction float_dup_times} {:close 0, :instruction float_flush} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_gt} {:close 1, :instruction boolean_fromfloat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_dup} {:close 1, :instruction float_div} {:close 0, :instruction integer_sub} {:close 0, :instruction float_mod} {:close 1, :instruction float_eq} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction integer_dup} {:close 1, :instruction float_frominteger} {:close 0, :instruction in1} {:close 1, :instruction integer_lt} {:close 1, :instruction float_eq} {:close 0, :instruction float_empty} {:close 0, :instruction float_log2} {:close 0, :instruction integer_min} {:close 1, :instruction float_deepdup} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 0, :instruction integer_abs} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_max} {:close 0, :instruction float_tan} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 1, :instruction 1.0} {:close 0, :instruction boolean_dup})
Best program: (integer_sub integer_negate exec_do*count (float_cos) boolean_empty in2 integer_dup_items float_swap float_swap boolean_invert_second_then_and in2 in1 boolean_empty integer_yankdup integer_abs float_add float_frominteger 1.0 2.0 float_min in2 float_empty 0.0 in1 in3 float_sub exec_while (exec_if (tag_float_635 float_max in3 in2 float_floor float_log2) (in3 exec_do*count (float_log10 tagged_260 integer_dup exec_do*times (float_rot integer_stackdepth in1) integer_dec boolean_dup_times 2.0 in1 exec_rot () () (integer_sub integer_shove in2) integer_shove float_min 0.0) integer_div boolean_yank float_ceiling) exec_y (exec_noop) in1 float_gte in2 float_sin integer_fromboolean 2.0 exec_do*times (float_dup_times in1 1.0 in1 boolean_fromfloat) exec_while () float_fromboolean) exec_rot (exec_when (boolean_dup exec_s (integer_mult) (0.0) (1.0 float_min float_dup_items)) integer_swap) (float_dup_items integer_yankdup) (exec_swap (integer_lt) (integer_dup float_max float_dup in3 in2) float_stackdepth exec_do*count (exec_y (boolean_frominteger float_add) float_square in3 float_log2 float_dup_times) integer_pop) boolean_xor exec_do*while (exec_swap (0.0 exec_swap (1.0 float_shove float_negate in1 boolean_xor) (boolean_frominteger float_min float_floor in2) exec_s (float_sub float_ceiling) (boolean_empty in2) (in1 in2 boolean_empty in1)) (float_empty float_sqrt exec_dup (float_gt float_dec integer_dup in3 exec_do*count (boolean_empty float_ceiling) in1 integer_shove exec_do*while (in3 float_dec in1 boolean_flush boolean_stackdepth exec_dup_times () integer_stackdepth float_inc) integer_pop exec_while (float_gte) exec_while (integer_eq boolean_invert_first_then_and exec_dup (float_min boolean_shove exec_noop in2 exec_empty in3 in1) float_max integer_rot) float_dup_times float_flush exec_yank integer_gt) boolean_fromfloat) integer_flush exec_dup () float_div) integer_sub float_mod float_eq in1 boolean_invert_second_then_and float_mult integer_empty in2 exec_empty in1 in3 float_min integer_dup float_frominteger in1 integer_lt float_eq float_empty float_log2 integer_min float_deepdup integer_abs boolean_not integer_abs integer_gte boolean_swap in1 exec_dup_times () integer_max float_tan exec_eq in2 exec_do*count (exec_when (1.0) boolean_dup))
Errors: [11.445 3.302 113.083 149.54 32.073 5.075 66.938 34.154 23.508 21.231 8.942 56.126 82.964 8.304 11.304 65.467 66.651 42.708 109.52 6.942 17.21 15.436 20.949 46.126 50.812 135.987 26.317 5.0 35.137 10.127 18.223 111.269 34.555 0.853 38.669 40.998 48.805 17.029 43.021 38.233 13.865 37.407 244.544 12.675 60.554 573.635 263.876 8.676 56.839 212.374 149.212 453.854 38.599 134.596 40.836 29.083 34.478 13.139 21.408 35.661 97.652 3398.605 129.455 64.938 8.395 1255.284 3.98 53.155 29.682 12.476 9.073 314.479 352.245 800.052 15.484 81.428 16.305 216.491 26.594 9.617 34.969 15.324 7.858 50.719 25.142 807.085 32.607 19.364 183.218 30.95 11.861 27.207 13.418 47.424 8.148 23.833 4.804 22.747 36.551 736.754 24.551 58.607 4.933 236.744 40.501 11.645 107.927 81.804 28.32 529.297 1.442 10.325 33.782 438.477 13.55 38.886 64.405 234.212 54.513 4.396 53.404 30.962 221.849 26.046 118.109 221.755 127.763 9.939 217.44 38.448 40.197 176.652 244.01 58.305 6.312 37.455 19.586 13.665 60.566 249.232 20.759 36.654 24.175 6.564 7.395 43.985 307.289 31.473 59.332 127.542 195.143 106.938 5.129 31.455 3.832 2.27 17.802 35.002 33.604 16.067 16.342 416.819 82.2 46.203 18.11 224.684 810.087 47.086 780.841 3.142 115.958 8.496 23.709 35.645 10.22 9.925 363.804 7.977 38.024 7.141 22.595 24.188 4.141 3.861 6.968 23.199 64.459 2.071 2.933 23.54 67.991 92.067 70.022 26.653 5.559 80.204 28.394 9.959 31.354 21.798]
Total: 21925.508000000005
Mean: 109.62754
Genome size: 206
Size: 249
Percent parens: 0.173
Age: 2
--- Population Statistics ---
Average total errors in population: 3.681660703420039E12
Median total errors in population: 46279.38000000004
Error averages by case: (1.3250069791513308E10 8.000045011650399E9 2.3285861658941895E10 2.3352429669107647E10 1.7379266974412163E10 9.0001776861741E9 2.228936318377797E10 2.2048476336594296E10 1.5000099408425652E10 1.5299361934230156E10 1.2250033194017368E10 2.028591113143033E10 2.0771068666863056E10 9.000037709468328E9 2.1077946987754887E10 2.0283416125183346E10 2.1810349614158394E10 2.331282658371966E10 8.001744551980942E9 1.519157390184865E10 1.4045669071514988E10 1.6000807913237225E10 2.2071784128772686E10 2.330564818209414E10 2.228336703463235E10 2.3286877001179585E10 1.5584899529405178E10 9.000036624205389E9 1.930047737803894E10 8.528170615310956E9 1.977195993616372E10 1.8772513939771103E10 1.2000036834469723E10 7.000036624665134E9 1.905148418139133E10 2.0304068285586536E10 1.929816291440675E10 2.0060220066782963E10 2.331151834312701E10 1.8317911002877167E10 2.1771001225505096E10 2.3306993173146946E10 2.3766461939758984E10 2.0771884072522568E10 2.0306599003447487E10 2.1764894301686512E10 2.2765006988265152E10 9.00003272441074E9 2.1772638722525E10 2.3766858043136868E10 2.334831701296212E10 2.0773518008171356E10 2.1297453784671425E10 2.3056954749949295E10 2.1283662217490486E10 1.6975987669697721E10 2.229242315260636E10 8.13323813078312E9 1.850326417668062E10 2.37685144115496E10 2.076706679809833E10 2.276004138223474E10 2.0040400713744038E10 1.9302044378890594E10 2.0284541760801308E10 2.2771031447117496E10 1.2250036919320852E10 2.2285253527239857E10 2.1295788742025658E10 1.5250047721275345E10 2.028567719369592E10 2.305231753217785E10 2.277289762067309E10 2.2033995351415356E10 2.007637518792085E10 2.3064655257707027E10 1.7152722367360363E10 1.976552512263976E10 1.556408971481671E10 1.3014999286773577E10 2.0283366806306942E10 1.4252381249260483E10 1.0000263632456928E10 2.2765780591614838E10 1.4370171720344791E10 2.2770277944686447E10 1.8072908099539696E10 1.412447310351657E10 2.1080137015357494E10 1.9897614586392826E10 1.325003955313089E10 2.0332022970001423E10 2.2059873706484512E10 2.3086200345913174E10 1.1000037625634607E10 1.437109075231508E10 7.000157196001089E9 1.5373594827431967E10 1.932045131426246E10 2.1762738102964577E10 2.4767778185841084E10 1.86114189366437E10 2.1767859665927086E10 2.076217904123042E10 2.134166572119699E10 1.6000097981586578E10 2.0769881342373154E10 2.177326539358066E10 1.4571978300666918E10 1.9769281477117836E10 1.6335608456877436E10 1.301878661355336E10 1.833655623702648E10 1.976962451225742E10 7.000421828191505E9 1.9300564364077267E10 9.000498108135174E9 2.3767189508950672E10 2.22833279926633E10 8.000032717423732E9 2.3291023560342876E10 2.131959316719568E10 2.076265775391926E10 1.7593825296007298E10 2.1773823980790047E10 2.3768157500898075E10 1.9066642961748196E10 1.340600506750347E10 2.2690584932651184E10 2.03626309903111E10 2.076866614761983E10 2.1052622097147785E10 1.906682809147321E10 2.149839299526216E10 2.0045429172924824E10 1.9316778905057144E10 2.0294836405131386E10 2.2284687180459682E10 2.2283544100199863E10 2.276615171904883E10 2.0086604771718708E10 2.0769762022737972E10 1.5486764482059193E10 2.005075436284753E10 2.0292589490282745E10 2.1308357082804302E10 2.0764992100891483E10 2.1328797474730667E10 2.306862096334182E10 2.3283315834941242E10 2.376482649656026E10 2.1772050836314384E10 8.000190110029245E9 2.033605063284187E10 8.000036625004487E9 1.1000059224451824E10 1.3278497516100327E10 1.9323473103510933E10 1.7373590853253883E10 1.5183161508591745E10 1.2083150334807898E10 1.9765624862832832E10 2.0065561315732937E10 2.20499547376335E10 1.3724358739744211E10 2.177347583337052E10 2.0763971257411636E10 1.9286431303148144E10 2.321027975365779E10 2.276725554409219E10 1.8767671078167576E10 1.1200229389113495E10 1.9042191396202667E10 1.6330029979579792E10 1.9071530756035946E10 1.2250034194970522E10 1.976304060184837E10 2.1286214627067116E10 2.2775085002332832E10 1.4250034811557013E10 1.337036414853948E10 2.277276472146622E10 7.000035711973433E9 1.0000037952197048E10 1.2012044327775667E10 1.337607024856038E10 1.9769138906877575E10 1.9045932368555332E10 1.2012051400083967E10 1.4318453795320452E10 2.0768877503240337E10 2.0042216522846687E10 2.377416533146105E10 2.329217066810653E10 1.1000438571775118E10 2.004655390730028E10 2.1298771312144432E10 2.2769308249541016E10 1.9323306435934216E10 1.1033979505608082E10)
Error minima by case: (0.054 0.062 0.0 0.0 0.0 0.334 0.058 1.715 0.0 0.0 0.888 0.016 3.758 0.018 0.298 0.536 1.936 0.403 0.142 0.107 0.1 0.153 0.242 0.912 0.552 0.0 0.231 0.0 0.512 0.149 2.417 0.013 0.127 0.113 1.139 0.191 0.146 0.93 1.774 0.284 2.358 1.201 0.0 2.215 0.469 29.312 14.66 0.029 2.386 17.332 0.0 5.74 0.421 0.0 2.117 0.335 0.06 0.091 0.497 4.053 6.895 596.6 4.985 2.005 0.007 164.431 0.02 0.309 0.35 0.41 0.576 1.087 10.581 2.172 0.797 0.0 0.223 2.645 0.129 0.438 1.193 1.333 0.101 17.467 1.388 39.207 0.006 0.582 2.012 0.05 0.039 0.012 1.379 0.0 0.0 0.636 0.012 1.289 0.025 30.703 0.4 1.55 1.114 35.508 0.818 0.131 1.018 1.231 0.1 5.157 0.423 0.168 3.108 38.23 0.139 0.074 0.039 0.0 0.091 0.123 0.617 0.398 25.639 0.345 8.661 0.0 1.104 0.082 0.2 2.299 15.375 5.758 0.7 2.498 1.455 0.251 2.674 1.684 0.72 0.0 0.372 1.677 0.025 2.057 0.703 1.442 17.048 1.067 0.0 0.0 11.356 5.734 0.041 0.386 0.126 0.019 0.598 1.83 0.0 0.022 0.058 18.261 1.932 0.695 0.652 8.815 15.097 0.74 16.197 3.142 0.043 0.196 0.004 0.516 2.416 0.222 35.545 1.838 0.101 0.421 0.255 1.361 0.03 0.048 0.022 0.079 7.968 2.071 0.111 0.0 4.47 3.543 5.56 1.793 0.097 0.279 4.415 5.541 0.18 0.015)
Average genome size in population (length): 119.127
Average program size in population (points): 137.277
Average percent parens in population: 0.119
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.602
Error (vector) diversity:			 0.602
Behavioral diversity:				 0.604
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 3000
Number of program executions (running on a single case counts as 1 execution): 600000
Number of point (instruction) evaluations so far: 325902396
--- Timings ---
Current time: 1745362291122 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Bouncing Balls problem report - generation 3
Test total error for best: 207504.65500000046
Test mean error for best: 103.75233
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 115.042
Correct output: 12.371 | Program output: 14.673
Correct output: 73.158 | Program output: 185.241
Correct output: 107.414 | Program output: 255.955
Correct output: 66.004 | Program output: 97.077
Correct output: 18.351 | Program output: 22.426
Correct output: 203.233 | Program output: 269.171
Correct output: 168.282 | Program output: 133.128
Correct output: 22.792 | Program output: 45.300
Correct output: 101.076 | Program output: 121.307
Correct output: 89.438 | Program output: 97.380
Correct output: 167.016 | Program output: 222.142
Correct output: 249.241 | Program output: 331.204
Correct output: 17.252 | Program output: 7.948
Correct output: 78.298 | Program output: 88.602
Correct output: 192.343 | Program output: 256.810
Correct output: 325.936 | Program output: 258.285
Correct output: 137.403 | Program output: 179.111
Correct output: 159.858 | Program output: 49.338
Correct output: 43.816 | Program output: 49.758
Correct output: 46.214 | Program output: 62.424
Correct output: 41.847 | Program output: 56.283
Correct output: 111.620 | Program output: 89.671
Correct output: 136.088 | Program output: 181.214
Correct output: 180.744 | Program output: 230.556
Correct output: 77.511 | Program output: 212.498
Correct output: 79.636 | Program output: 104.953
Correct output: 2.001 | Program output: 6.001
Correct output: 114.432 | Program output: 148.569
Correct output: 19.059 | Program output: 28.186
Correct output: 290.212 | Program output: 307.435
Correct output: 197.499 | Program output: 307.768
Correct output: 64.127 | Program output: 28.572
Correct output: 8.284 | Program output: 6.431
Correct output: 203.329 | Program output: 163.660
Correct output: 104.522 | Program output: 144.520
Correct output: 124.531 | Program output: 172.336
Correct output: 125.101 | Program output: 107.073
Correct output: 133.674 | Program output: 175.694
Correct output: 112.074 | Program output: 149.307
Correct output: 308.094 | Program output: 320.960
Correct output: 106.842 | Program output: 143.249
Correct output: 144.377 | Program output: 387.921
Correct output: 296.288 | Program output: 307.963
Correct output: 205.797 | Program output: 265.351
Correct output: 985.735 | Program output: 411.100
Correct output: 680.660 | Program output: 415.785
Correct output: 32.170 | Program output: 22.494
Correct output: 343.239 | Program output: 285.400
Correct output: 584.598 | Program output: 371.224
Correct output: 97.620 | Program output: 245.832
Correct output: 712.538 | Program output: 257.684
Correct output: 123.589 | Program output: 161.189
Correct output: 69.710 | Program output: 203.306
Correct output: 250.818 | Program output: 208.981
Correct output: 120.502 | Program output: 148.584
Correct output: 137.940 | Program output: 171.418
Correct output: 64.091 | Program output: 49.951
Correct output: 65.119 | Program output: 85.527
Correct output: 335.947 | Program output: 370.607
Correct output: 475.105 | Program output: 376.452
Correct output: 3999.600 | Program output: 599.995
Correct output: 279.985 | Program output: 149.530
Correct output: 201.372 | Program output: 265.309
Correct output: 189.382 | Program output: 196.776
Correct output: 1543.271 | Program output: 286.987
Correct output: 102.020 | Program output: 105.000
Correct output: 193.877 | Program output: 246.032
Correct output: 128.350 | Program output: 157.032
Correct output: 53.143 | Program output: 64.618
Correct output: 181.602 | Program output: 189.675
Correct output: 431.170 | Program output: 115.691
Correct output: 619.098 | Program output: 265.853
Correct output: 986.172 | Program output: 185.120
Correct output: 77.831 | Program output: 92.315
Correct output: 55.900 | Program output: 136.329
Correct output: 54.583 | Program output: 69.889
Correct output: 622.783 | Program output: 405.292
Correct output: 83.177 | Program output: 108.770
Correct output: 42.501 | Program output: 51.118
Correct output: 184.764 | Program output: 218.733
Correct output: 67.665 | Program output: 81.989
Correct output: 19.670 | Program output: 26.527
Correct output: 464.533 | Program output: 412.814
Correct output: 106.459 | Program output: 130.601
Correct output: 1108.353 | Program output: 300.268
Correct output: 56.702 | Program output: 88.309
Correct output: 53.970 | Program output: 72.334
Correct output: 259.503 | Program output: 75.285
Correct output: 101.480 | Program output: 131.430
Correct output: 56.812 | Program output: 67.673
Correct output: 75.112 | Program output: 101.318
Correct output: 104.689 | Program output: 117.107
Correct output: 27.529 | Program output: 73.952
Correct output: 3.963 | Program output: 11.111
Correct output: 83.268 | Program output: 106.101
Correct output: 11.973 | Program output: 15.778
Correct output: 76.197 | Program output: 97.944
Correct output: 99.025 | Program output: 134.576
Correct output: 1219.703 | Program output: 481.948
Correct output: 396.400 | Program output: 370.850
Correct output: 125.727 | Program output: 66.121
Correct output: 371.001 | Program output: 374.934
Correct output: 738.413 | Program output: 500.669
Correct output: 280.393 | Program output: 238.892
Correct output: 37.145 | Program output: 47.790
Correct output: 425.982 | Program output: 317.055
Correct output: 357.821 | Program output: 275.018
Correct output: 120.482 | Program output: 147.802
Correct output: 845.157 | Program output: 314.861
Correct output: 68.073 | Program output: 68.515
Correct output: 27.389 | Program output: 36.714
Correct output: 95.616 | Program output: 128.398
Correct output: 747.315 | Program output: 307.838
Correct output: 22.311 | Program output: 34.861
Correct output: 116.926 | Program output: 154.812
Correct output: 111.460 | Program output: 46.055
Correct output: 122.996 | Program output: 356.208
Correct output: 185.091 | Program output: 238.604
Correct output: 12.422 | Program output: 15.817
Correct output: 151.265 | Program output: 203.669
Correct output: 87.691 | Program output: 117.653
Correct output: 705.021 | Program output: 482.172
Correct output: 65.326 | Program output: 90.372
Correct output: 473.339 | Program output: 354.230
Correct output: 147.045 | Program output: 367.800
Correct output: 220.192 | Program output: 91.429
Correct output: 25.498 | Program output: 34.437
Correct output: 464.800 | Program output: 246.359
Correct output: 223.405 | Program output: 260.853
Correct output: 391.079 | Program output: 349.882
Correct output: 293.758 | Program output: 116.106
Correct output: 335.272 | Program output: 90.262
Correct output: 225.803 | Program output: 283.109
Correct output: 153.545 | Program output: 146.232
Correct output: 106.271 | Program output: 142.725
Correct output: 164.365 | Program output: 182.951
Correct output: 184.316 | Program output: 196.981
Correct output: 182.005 | Program output: 241.571
Correct output: 124.203 | Program output: 372.435
Correct output: 66.716 | Program output: 86.474
Correct output: 306.042 | Program output: 341.696
Correct output: 68.394 | Program output: 91.569
Correct output: 139.929 | Program output: 132.364
Correct output: 226.230 | Program output: 232.625
Correct output: 129.442 | Program output: 172.427
Correct output: 723.847 | Program output: 415.558
Correct output: 182.792 | Program output: 213.265
Correct output: 39.803 | Program output: 98.135
Correct output: 128.192 | Program output: 254.733
Correct output: 624.606 | Program output: 428.463
Correct output: 397.298 | Program output: 289.360
Correct output: 12.690 | Program output: 16.818
Correct output: 100.386 | Program output: 130.841
Correct output: 7.550 | Program output: 10.382
Correct output: 30.019 | Program output: 31.289
Correct output: 48.697 | Program output: 65.499
Correct output: 101.830 | Program output: 135.832
Correct output: 54.972 | Program output: 87.576
Correct output: 55.501 | Program output: 70.568
Correct output: 46.143 | Program output: 61.485
Correct output: 808.426 | Program output: 390.607
Correct output: 178.068 | Program output: 94.867
Correct output: 207.417 | Program output: 160.214
Correct output: 93.518 | Program output: 110.628
Correct output: 490.815 | Program output: 265.131
Correct output: 1247.817 | Program output: 436.730
Correct output: 160.740 | Program output: 206.826
Correct output: 1006.197 | Program output: 224.356
Correct output: 385.498 | Program output: 387.640
Correct output: 226.865 | Program output: 341.823
Correct output: 44.815 | Program output: 52.312
Correct output: 139.446 | Program output: 162.155
Correct output: 98.158 | Program output: 61.513
Correct output: 134.416 | Program output: 143.636
Correct output: 57.911 | Program output: 66.836
Correct output: 838.313 | Program output: 473.508
Correct output: 192.012 | Program output: 183.035
Correct output: 241.040 | Program output: 278.064
Correct output: 52.438 | Program output: 58.579
Correct output: 63.745 | Program output: 85.340
Correct output: 276.361 | Program output: 299.549
Correct output: 9.005 | Program output: 12.146
Correct output: 28.509 | Program output: 31.370
Correct output: 26.238 | Program output: 32.206
Correct output: 64.284 | Program output: 86.483
Correct output: 397.628 | Program output: 332.169
Correct output: 161.133 | Program output: 162.204
Correct output: 54.111 | Program output: 56.045
Correct output: 20.954 | Program output: 43.494
Correct output: 279.470 | Program output: 346.461
Correct output: 235.457 | Program output: 142.391
Correct output: 337.121 | Program output: 266.099
Correct output: 141.508 | Program output: 167.161
Correct output: 18.824 | Program output: 23.383
Correct output: 216.404 | Program output: 135.200
Correct output: 120.372 | Program output: 147.767
Correct output: 354.574 | Program output: 343.615
Correct output: 86.713 | Program output: 117.067
Correct output: 37.202 | Program output: 58.001
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 21 22 22 1 3 1 21 21 1 1 1 1 2 2 9 2 1 1 1 1 1 1 1 22 2 25 1 2 1 2 1 1 1 2 1 1 1 1 2 1 22 1 2 1 1 1 1 1 22 1 1 22 1 2 1 1 1 1 1 1 1 1 1 1 4 1 1 1 2 1 1 1 1 22 1 1 1 1 1 2 1 1 2 1 1 1 1 2 1 1 1 22 22 1 3 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 22 1 2 1 1 1 1 1 22 1 1 1 1 1 1 10 1 1 4 1 1 1 22 1 3 2 1 1 2 1 1 21 21 1 1 1 7 1 2 1 1 22 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 2 1 1 2 1 1 1 21 1 1 1 1 1 1 1 1 1 1)
Population mean number of elite cases: 0.68
Count of perfect (error zero) individuals by case: (0 0 21 22 22 0 0 0 21 21 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 0 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 0 0 0 0 0 0 0 22 0 0 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 0 0 0 0 0 0 0 22 0 0 0 0 0 0 0 0 0 0 0 0 0 22 0 0 0 0 0 0 0 0 21 21 0 0 0 0 1 0 0 0 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 21 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.44
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_shove} {:close 0, :instruction in2} {:close 0, :instruction integer_dup} {:close 0, :instruction float_swap} {:close 0, :instruction in2} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_empty} {:close 0, :instruction in1} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_frominteger} {:close 0, :instruction tag_boolean_337} {:close 2, :instruction in1} {:close 0, :instruction boolean_not} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 0, :instruction in1} {:close 0, :instruction integer_abs} {:close 0, :instruction in3} {:close 0, :instruction float_sub} {:close 0, :instruction 0.0} {:close 0, :instruction exec_while} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction tag_float_635} {:close 0, :instruction float_floor} {:close 0, :instruction float_max} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction 2.0} {:close 1, :instruction float_log2} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_log10} {:close 1, :instruction 0.0} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_noop} {:close 1, :instruction in1} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction float_arcsin} {:close 0, :instruction exec_deepdup} {:close 0, :instruction 2.0} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction float_ceiling} {:close 0, :instruction exec_y} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction float_gte} {:close 0, :instruction float_sin} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 1, :instruction exec_while} {:close 2, :instruction float_fromboolean} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 0, :instruction integer_swap} {:close 1, :instruction 0.0} {:close 1, :instruction integer_mult} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction 0.0} {:close 1, :instruction in1} {:close 0, :instruction 1.0} {:close 1, :instruction tagged_824} {:close 0, :instruction float_min} {:close 2, :instruction float_max} {:close 1, :instruction integer_swap} {:close 2, :instruction in2} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_dup} {:close 0, :instruction float_max} {:close 0, :instruction exec_while} {:close 0, :instruction float_dup} {:close 0, :instruction in3} {:close 1, :instruction float_pow} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction float_empty} {:close 0, :instruction in3} {:close 0, :instruction float_log2} {:close 0, :instruction 0.0} {:close 1, :instruction float_dup_times} {:close 0, :instruction boolean_eq} {:close 1, :instruction float_gte} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_swap} {:close 0, :instruction float_dup_items} {:close 0, :instruction 0.0} {:close 0, :instruction float_shove} {:close 0, :instruction float_negate} {:close 0, :instruction in1} {:close 0, :instruction float_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction float_min} {:close 0, :instruction float_floor} {:close 1, :instruction 1.0} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_sub} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction float_fromboolean} {:close 0, :instruction exec_do*while} {:close 1, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_empty} {:close 1, :instruction in3} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction float_gt} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_mult} {:close 0, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_swap} {:close 0, :instruction integer_shove} {:close 0, :instruction in1} {:close 0, :instruction exec_do*while} {:close 0, :instruction in3} {:close 0, :instruction float_arccos} {:close 1, :instruction float_log10} {:close 0, :instruction float_dec} {:close 0, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_fromfloat} {:close 1, :instruction float_pop} {:close 1, :instruction float_inc} {:close 0, :instruction integer_fromfloat} {:close 1, :instruction float_gte} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 0, :instruction float_min} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction exec_dup_items} {:close 1, :instruction in1} {:close 0, :instruction 2.0} {:close 1, :instruction integer_rot} {:close 0, :instruction float_dup_times} {:close 0, :instruction float_flush} {:close 1, :instruction exec_do*while} {:close 1, :instruction integer_gt} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction tag_float_118} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_sub} {:close 0, :instruction float_mod} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction float_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_flush} {:close 0, :instruction float_min} {:close 0, :instruction integer_dup} {:close 1, :instruction float_frominteger} {:close 0, :instruction in1} {:close 1, :instruction float_lte} {:close 1, :instruction exec_do*while} {:close 0, :instruction float_empty} {:close 1, :instruction float_log10} {:close 1, :instruction integer_abs} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when})
Best program: (exec_do*count (boolean_empty boolean_shove) in2 integer_dup float_swap in2 integer_pop boolean_empty in1 integer_yankdup integer_abs float_add float_frominteger tag_boolean_337 in1 boolean_not in1 float_min in2 float_empty in1 integer_abs in3 float_sub 0.0 exec_while (integer_rot exec_if (tag_float_635 float_floor float_max in3 in2 2.0 float_log2) (exec_do*count (float_log10 0.0) exec_yank integer_dup exec_do*times (float_rot integer_stackdepth exec_noop in1) boolean_dup_times float_arcsin exec_deepdup 2.0 integer_stackdepth) in1 integer_sub integer_shove exec_y (exec_y (in2) float_min integer_div boolean_yankdup float_ceiling) exec_y (exec_noop) exec_stackdepth float_gte float_sin integer_fromboolean exec_do*times (in1 in1 in2 exec_while () float_fromboolean)) boolean_dup exec_s (integer_swap 0.0) (integer_mult) (boolean_frominteger 0.0) in1 1.0 tagged_824 float_min float_max integer_swap in2 integer_yankdup exec_swap (integer_lt) (integer_dup float_max exec_while (float_dup in3 float_pow) in2) float_stackdepth exec_y (boolean_frominteger float_add) float_square float_empty in3 float_log2 0.0 float_dup_times boolean_eq float_gte boolean_xor exec_swap (float_dup_items 0.0 float_shove float_negate in1 float_swap boolean_frominteger float_min float_floor 1.0) (in2) exec_s (float_sub boolean_empty boolean_invert_second_then_and float_fromboolean) (exec_do*while (in2) in2 boolean_empty float_empty in3) (exec_eq) exec_dup (float_gt integer_dup integer_mult) in3 in3 boolean_empty float_swap integer_shove in1 exec_do*while (in3 float_arccos float_log10) float_dec in1 boolean_stackdepth integer_fromfloat float_pop float_inc integer_fromfloat float_gte exec_while (integer_eq float_min integer_negate) exec_empty in3 exec_dup_items in1 2.0 integer_rot float_dup_times float_flush exec_do*while () integer_gt boolean_fromfloat tag_float_118 exec_dup () integer_sub float_mod boolean_invert_second_then_and integer_stackdepth float_mult integer_empty exec_empty exec_empty integer_flush float_min integer_dup float_frominteger in1 float_lte exec_do*while () float_empty float_log10 integer_abs boolean_swap in1 exec_dup_times () integer_eq integer_sub integer_max exec_eq exec_do*count (exec_when ()))
Errors: [10.445 2.302 112.083 148.54 31.073 4.075 65.938 35.154 22.508 20.231 7.942 55.126 81.964 9.304 10.304 64.467 67.651 41.708 110.52 5.942 16.21 14.436 21.949 45.126 49.812 134.987 25.317 4.0 34.137 9.127 17.223 110.269 35.555 1.853 39.669 39.998 47.805 18.029 42.021 37.233 12.865 36.407 243.544 11.675 59.554 574.635 264.876 9.676 57.839 213.374 148.212 454.854 37.599 133.596 41.836 28.083 33.478 14.139 20.408 34.661 98.652 3399.605 130.455 63.938 7.395 1256.284 2.98 52.155 28.682 11.476 8.073 315.479 353.245 801.052 14.484 80.428 15.305 217.491 25.594 8.617 33.969 14.324 6.858 51.719 24.142 808.085 31.607 18.364 184.218 29.95 10.861 26.207 12.418 46.424 7.148 22.833 3.804 21.747 35.551 737.754 25.551 59.607 3.933 237.744 41.501 10.645 108.927 82.804 27.32 530.297 0.442 9.325 32.782 439.477 12.55 37.886 65.405 233.212 53.513 3.396 52.404 29.962 222.849 25.046 119.109 220.755 128.763 8.939 218.44 37.448 41.197 177.652 245.01 57.305 7.312 36.455 18.586 12.665 59.566 248.232 19.759 35.654 23.175 7.564 6.395 42.985 308.289 30.473 58.332 126.542 196.143 107.938 4.129 30.455 2.832 1.27 16.802 34.002 32.604 15.067 15.342 417.819 83.2 47.203 17.11 225.684 811.087 46.086 781.841 2.142 114.958 7.496 22.709 36.645 9.22 8.925 364.804 8.977 37.024 6.141 21.595 23.188 3.141 2.861 5.968 22.199 65.459 1.071 1.933 22.54 66.991 93.067 71.022 25.653 4.559 81.204 27.394 10.959 30.354 20.798]
Total: 21853.508000000005
Mean: 109.26754
Genome size: 200
Size: 234
Percent parens: 0.145
Age: 3
--- Population Statistics ---
Average total errors in population: 3.2601002070446763E12
Median total errors in population: 46168.21500000001
Error averages by case: (1.3000201149486145E10 8.324981947808247E9 1.500003665147959E10 1.6000036836871778E10 1.2000053530691296E10 8.000122227464892E9 2.100004144087866E10 2.100003917070365E10 1.1058865055135439E10 1.1010661014227682E10 1.300003734806417E10 1.9000037400032837E10 1.8000042617791523E10 8.0000429318116045E9 1.800004295853248E10 2.000004317978517E10 1.8000040551660416E10 2.0000039364586227E10 1.2166341864179943E10 1.400003909942672E10 1.5016710107950445E10 1.5000355996592417E10 2.0000041585493927E10 2.0000039347363033E10 1.9000041509091476E10 1.6000036683114473E10 1.6012465429538515E10 5.000036560220801E9 1.5003375372956083E10 9.764015746121334E9 1.700003761413947E10 1.6000037080866314E10 1.2000042737244423E10 5.000122246460426E9 1.8280166810346786E10 1.800004206716462E10 1.800004215166054E10 1.900003713169342E10 2.0000041829804474E10 1.5000123407317469E10 1.8000042293424015E10 2.00000416776107E10 1.6000037139777155E10 2.0000041230750282E10 1.6003375697478056E10 1.9000042892798325E10 1.7000043941067657E10 1.1000038072557884E10 1.8000041155584515E10 1.8000044729470448E10 1.7000036756243378E10 1.9000045128523922E10 2.000004108106114E10 1.6000036629715586E10 2.0000040523854923E10 1.703272300709494E10 2.000004505594466E10 1.1132178193463787E10 1.7718012424003452E10 2.000003991901881E10 1.800004251097913E10 2.0000045898022514E10 1.6131206994606544E10 1.6000123701098297E10 2.200004178656892E10 2.0000042780523186E10 1.1000041610712397E10 2.2000039436833107E10 1.9000041870352802E10 1.5000045997590984E10 2.0000043662253452E10 2.0000042817767895E10 1.8000043523187626E10 2.0000041045644997E10 1.8000037104476902E10 1.5000036610669807E10 1.6002577824654202E10 1.9000045457084866E10 1.5011367106709528E10 1.4000041780638054E10 2.0000045743373745E10 1.2000886338253096E10 9.00337461839539E9 1.700004490988672E10 1.6000335468505514E10 2.0000042439498463E10 1.6000036568604362E10 1.4000584205435123E10 2.100004322909234E10 1.7809937813414375E10 1.300004010224141E10 1.4561328415962881E10 1.9000040353067852E10 1.4075358296319662E10 6.000036521877307E9 1.2000213726433268E10 6.067312452422086E9 1.500009544327248E10 1.8000042078743603E10 2.1000044747795525E10 1.9000040970178936E10 1.784275341503265E10 2.00000415243905E10 1.400337656104944E10 1.900004200507361E10 1.5000039669974495E10 1.9000038994515987E10 1.8000042135031307E10 1.4011786741802921E10 1.800004532314222E10 1.2273271765488905E10 1.501866484819748E10 1.4064145757038666E10 1.800003782448206E10 8.328594934123983E9 1.613023300321746E10 1.3067750729472301E10 1.600003692473427E10 2.2000042278474777E10 9.000038147638496E9 2.0000172812243385E10 2.0000041528828472E10 1.4003376463846088E10 1.4487194743738914E10 2.100004382158301E10 1.5000037188044573E10 1.900004458975901E10 1.3000785087458317E10 2.1000039480388332E10 1.9000037458404232E10 1.900004517843435E10 2.1000044265720375E10 2.100004178947399E10 2.0000043615603714E10 1.5003374709303526E10 1.9000038577910645E10 2.2000043265453194E10 1.8000044123565865E10 2.100004069917531E10 1.6000036924575209E10 1.3069099537878544E10 1.5003375924322895E10 1.6002912237430077E10 1.9000041788612038E10 2.200004187485909E10 1.900004094619942E10 1.900004553923093E10 2.2000043344190746E10 1.5000036545748596E10 1.6000037970888445E10 1.8000041255729298E10 2.0000041396160297E10 8.246644005378865E9 1.808097138297681E10 7.0000419375496435E9 1.0010418515397482E10 1.315146473648072E10 1.900004362406346E10 1.2000091376928932E10 1.600430542129512E10 1.6030477729984564E10 1.7000038068709787E10 2.0000040781648624E10 2.000340757749811E10 1.430848945610698E10 2.000004358749905E10 2.100004307519649E10 2.2000041849629005E10 1.9000040980944977E10 2.0000039964295513E10 1.600003696092985E10 1.0250326741990372E10 1.8574864467299866E10 1.6068049400460577E10 1.6130229979692331E10 1.000337450768414E10 1.7000038418393032E10 1.900004035064965E10 1.8000040626744507E10 1.3000040346885893E10 1.100371325271089E10 2.0000040811857048E10 9.000039451554512E9 9.000043569684864E9 1.4011949403354845E10 1.1001022753704279E10 1.5130231455286709E10 1.4114860590260378E10 1.1134658863082817E10 1.0318420013635311E10 1.800004256273554E10 1.5003381440881992E10 2.0000041950951954E10 2.100004941567528E10 1.2000043095468723E10 2.000004084788623E10 1.9000040302658215E10 2.000004222447903E10 2.100004167944471E10 1.0013210951055294E10)
Error minima by case: (0.155 0.131 0.0 0.0 0.0 0.021 0.465 5.065 0.0 0.0 0.181 0.984 0.287 0.204 0.298 0.921 1.936 0.072 1.214 0.184 0.15 0.153 0.858 1.821 1.256 0.0 0.769 0.0 0.488 0.012 1.308 0.013 0.127 0.038 0.154 0.559 0.146 0.278 0.226 0.034 0.095 1.201 0.0 0.29 0.469 23.789 3.34 0.045 5.061 18.402 0.0 10.643 0.224 0.0 2.806 0.655 1.878 0.122 0.042 6.053 10.321 1377.622 1.015 0.272 0.108 26.449 0.02 0.763 0.006 0.05 0.457 3.83 8.344 1.161 0.169 0.0 0.417 4.672 0.136 0.066 0.236 0.04 0.101 14.628 0.924 5.534 0.134 1.278 3.503 0.95 0.039 0.112 1.678 0.0 0.0 0.636 0.027 0.289 0.025 6.48 4.338 1.663 0.114 34.413 0.607 0.051 2.147 1.231 0.482 5.157 0.442 0.824 0.892 6.776 0.116 0.305 0.178 0.0 1.091 0.003 1.377 0.684 1.021 0.326 6.661 0.0 0.149 0.25 27.412 0.039 6.891 0.741 2.728 3.456 0.545 0.251 0.635 0.684 0.005 0.0 0.366 1.677 0.025 0.754 0.703 1.442 6.916 0.024 0.0 0.0 5.394 1.702 0.041 0.386 0.0 0.032 0.094 0.146 0.0 0.499 0.132 7.427 1.932 0.206 0.024 10.815 1.697 0.824 15.801 1.498 0.031 0.165 2.004 0.209 1.404 0.061 22.46 0.061 1.04 0.106 0.395 2.361 0.005 0.386 0.008 0.079 6.144 0.125 0.111 0.0 1.53 2.612 4.247 2.908 0.404 0.279 1.953 3.574 0.058 0.165)
Average genome size in population (length): 138.628
Average program size in population (points): 161.784
Average percent parens in population: 0.132
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.614
Error (vector) diversity:			 0.615
Behavioral diversity:				 0.624
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 4000
Number of program executions (running on a single case counts as 1 execution): 800000
Number of point (instruction) evaluations so far: 463524728
--- Timings ---
Current time: 1745362389737 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Bouncing Balls problem report - generation 4
Test total error for best: 216874.09199999965
Test mean error for best: 108.43705
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 112.469
Correct output: 12.371 | Program output: 13.593
Correct output: 73.158 | Program output: 158.220
Correct output: 107.414 | Program output: 219.819
Correct output: 66.004 | Program output: 90.309
Correct output: 18.351 | Program output: 21.964
Correct output: 203.233 | Program output: 235.935
Correct output: 168.282 | Program output: 113.402
Correct output: 22.792 | Program output: 40.673
Correct output: 101.076 | Program output: 117.249
Correct output: 89.438 | Program output: 95.673
Correct output: 167.016 | Program output: 195.168
Correct output: 249.241 | Program output: 284.657
Correct output: 17.252 | Program output: 7.645
Correct output: 78.298 | Program output: 76.766
Correct output: 192.343 | Program output: 225.845
Correct output: 325.936 | Program output: 219.090
Correct output: 137.403 | Program output: 164.185
Correct output: 159.858 | Program output: 42.192
Correct output: 43.816 | Program output: 48.702
Correct output: 46.214 | Program output: 56.244
Correct output: 41.847 | Program output: 51.301
Correct output: 111.620 | Program output: 76.734
Correct output: 136.088 | Program output: 164.232
Correct output: 180.744 | Program output: 200.547
Correct output: 77.511 | Program output: 179.751
Correct output: 79.636 | Program output: 96.103
Correct output: 2.001 | Program output: 6.001
Correct output: 114.432 | Program output: 129.745
Correct output: 19.059 | Program output: 25.806
Correct output: 290.212 | Program output: 262.829
Correct output: 197.499 | Program output: 264.280
Correct output: 64.127 | Program output: 24.936
Correct output: 8.284 | Program output: 6.365
Correct output: 203.329 | Program output: 139.034
Correct output: 104.522 | Program output: 127.013
Correct output: 124.531 | Program output: 152.557
Correct output: 125.101 | Program output: 91.457
Correct output: 133.674 | Program output: 160.429
Correct output: 112.074 | Program output: 135.574
Correct output: 308.094 | Program output: 274.257
Correct output: 106.842 | Program output: 126.691
Correct output: 144.377 | Program output: 328.035
Correct output: 296.288 | Program output: 263.189
Correct output: 205.797 | Program output: 230.617
Correct output: 985.735 | Program output: 344.791
Correct output: 680.660 | Program output: 349.977
Correct output: 32.170 | Program output: 19.912
Correct output: 343.239 | Program output: 242.155
Correct output: 584.598 | Program output: 312.774
Correct output: 97.620 | Program output: 209.779
Correct output: 712.538 | Program output: 216.079
Correct output: 123.589 | Program output: 141.100
Correct output: 69.710 | Program output: 170.907
Correct output: 250.818 | Program output: 177.654
Correct output: 120.502 | Program output: 139.442
Correct output: 137.940 | Program output: 148.823
Correct output: 64.091 | Program output: 43.059
Correct output: 65.119 | Program output: 75.465
Correct output: 335.947 | Program output: 317.484
Correct output: 475.105 | Program output: 318.731
Correct output: 3999.600 | Program output: 500.996
Correct output: 279.985 | Program output: 125.739
Correct output: 201.372 | Program output: 230.838
Correct output: 189.382 | Program output: 168.523
Correct output: 1543.271 | Program output: 240.353
Correct output: 102.020 | Program output: 105.000
Correct output: 193.877 | Program output: 213.769
Correct output: 128.350 | Program output: 136.174
Correct output: 53.143 | Program output: 61.512
Correct output: 181.602 | Program output: 162.491
Correct output: 431.170 | Program output: 97.563
Correct output: 619.098 | Program output: 223.105
Correct output: 986.172 | Program output: 155.309
Correct output: 77.831 | Program output: 80.211
Correct output: 55.900 | Program output: 117.221
Correct output: 54.583 | Program output: 61.526
Correct output: 622.783 | Program output: 341.690
Correct output: 83.177 | Program output: 99.949
Correct output: 42.501 | Program output: 49.055
Correct output: 184.764 | Program output: 188.694
Correct output: 67.665 | Program output: 77.894
Correct output: 19.670 | Program output: 24.653
Correct output: 464.533 | Program output: 350.291
Correct output: 106.459 | Program output: 122.912
Correct output: 1108.353 | Program output: 251.859
Correct output: 56.702 | Program output: 75.587
Correct output: 53.970 | Program output: 64.453
Correct output: 259.503 | Program output: 63.801
Correct output: 101.480 | Program output: 121.096
Correct output: 56.812 | Program output: 64.832
Correct output: 75.112 | Program output: 90.122
Correct output: 104.689 | Program output: 101.088
Correct output: 27.529 | Program output: 63.346
Correct output: 3.963 | Program output: 10.324
Correct output: 83.268 | Program output: 98.710
Correct output: 11.973 | Program output: 15.305
Correct output: 76.197 | Program output: 90.791
Correct output: 99.025 | Program output: 121.374
Correct output: 1219.703 | Program output: 404.009
Correct output: 396.400 | Program output: 315.480
Correct output: 125.727 | Program output: 56.489
Correct output: 371.001 | Program output: 319.819
Correct output: 738.413 | Program output: 419.324
Correct output: 280.393 | Program output: 202.983
Correct output: 37.145 | Program output: 44.795
Correct output: 425.982 | Program output: 267.665
Correct output: 357.821 | Program output: 232.965
Correct output: 120.482 | Program output: 138.969
Correct output: 845.157 | Program output: 263.874
Correct output: 68.073 | Program output: 58.737
Correct output: 27.389 | Program output: 33.914
Correct output: 95.616 | Program output: 117.840
Correct output: 747.315 | Program output: 257.794
Correct output: 22.311 | Program output: 30.639
Correct output: 116.926 | Program output: 136.022
Correct output: 111.460 | Program output: 39.527
Correct output: 122.996 | Program output: 298.905
Correct output: 185.091 | Program output: 207.890
Correct output: 12.422 | Program output: 14.684
Correct output: 151.265 | Program output: 180.264
Correct output: 87.691 | Program output: 104.277
Correct output: 705.021 | Program output: 403.951
Correct output: 65.326 | Program output: 80.542
Correct output: 473.339 | Program output: 299.664
Correct output: 147.045 | Program output: 313.611
Correct output: 220.192 | Program output: 77.414
Correct output: 25.498 | Program output: 31.571
Correct output: 464.800 | Program output: 207.764
Correct output: 223.405 | Program output: 224.533
Correct output: 391.079 | Program output: 297.178
Correct output: 293.758 | Program output: 98.089
Correct output: 335.272 | Program output: 76.289
Correct output: 225.803 | Program output: 245.413
Correct output: 153.545 | Program output: 124.473
Correct output: 106.271 | Program output: 128.740
Correct output: 164.365 | Program output: 157.310
Correct output: 184.316 | Program output: 168.879
Correct output: 182.005 | Program output: 212.000
Correct output: 124.203 | Program output: 311.377
Correct output: 66.716 | Program output: 75.909
Correct output: 306.042 | Program output: 292.006
Correct output: 68.394 | Program output: 83.169
Correct output: 139.929 | Program output: 113.263
Correct output: 226.230 | Program output: 198.951
Correct output: 129.442 | Program output: 156.280
Correct output: 723.847 | Program output: 349.652
Correct output: 182.792 | Program output: 183.795
Correct output: 39.803 | Program output: 84.552
Correct output: 128.192 | Program output: 224.098
Correct output: 624.606 | Program output: 361.840
Correct output: 397.298 | Program output: 244.938
Correct output: 12.690 | Program output: 16.193
Correct output: 100.386 | Program output: 120.214
Correct output: 7.550 | Program output: 10.207
Correct output: 30.019 | Program output: 27.633
Correct output: 48.697 | Program output: 58.597
Correct output: 101.830 | Program output: 123.213
Correct output: 54.972 | Program output: 80.425
Correct output: 55.501 | Program output: 62.046
Correct output: 46.143 | Program output: 54.786
Correct output: 808.426 | Program output: 327.470
Correct output: 178.068 | Program output: 80.605
Correct output: 207.417 | Program output: 136.212
Correct output: 93.518 | Program output: 105.599
Correct output: 490.815 | Program output: 223.424
Correct output: 1247.817 | Program output: 365.960
Correct output: 160.740 | Program output: 180.274
Correct output: 1006.197 | Program output: 188.204
Correct output: 385.498 | Program output: 330.563
Correct output: 226.865 | Program output: 286.118
Correct output: 44.815 | Program output: 50.758
Correct output: 139.446 | Program output: 137.442
Correct output: 98.158 | Program output: 52.728
Correct output: 134.416 | Program output: 123.215
Correct output: 57.911 | Program output: 64.727
Correct output: 838.313 | Program output: 397.628
Correct output: 192.012 | Program output: 156.308
Correct output: 241.040 | Program output: 239.140
Correct output: 52.438 | Program output: 57.467
Correct output: 63.745 | Program output: 77.607
Correct output: 276.361 | Program output: 256.553
Correct output: 9.005 | Program output: 11.709
Correct output: 28.509 | Program output: 27.287
Correct output: 26.238 | Program output: 28.733
Correct output: 64.284 | Program output: 78.443
Correct output: 397.628 | Program output: 280.820
Correct output: 161.133 | Program output: 137.690
Correct output: 54.111 | Program output: 48.607
Correct output: 20.954 | Program output: 38.859
Correct output: 279.470 | Program output: 294.384
Correct output: 235.457 | Program output: 119.678
Correct output: 337.121 | Program output: 225.654
Correct output: 141.508 | Program output: 144.423
Correct output: 18.824 | Program output: 22.728
Correct output: 216.404 | Program output: 114.678
Correct output: 120.372 | Program output: 128.247
Correct output: 354.574 | Program output: 292.724
Correct output: 86.713 | Program output: 104.419
Correct output: 37.202 | Program output: 50.586
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 1 33 36 35 1 2 1 32 32 1 1 1 1 1 1 7 1 1 3 2 1 1 1 1 34 1 40 1 2 1 2 1 1 1 1 1 1 1 1 1 1 32 1 1 1 1 1 1 1 36 1 1 34 1 3 1 1 1 1 1 1 3 1 1 2 7 1 1 1 1 1 1 1 1 34 1 1 2 1 1 1 1 1 4 1 1 1 1 2 1 1 1 33 36 4 5 1 1 1 1 1 1 1 1 1 1 2 3 1 1 3 4 1 1 1 10 34 1 1 1 1 1 1 1 32 1 1 1 2 1 1 1 1 2 1 1 1 1 32 2 5 1 2 1 1 1 2 32 34 1 2 2 1 1 1 1 2 32 2 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 5 1 1 2 1 2 1 1 1 2 1 1 1 2 32 3 1 1 1 2 1 1 1 1 1)
Population mean number of elite cases: 0.94
Count of perfect (error zero) individuals by case: (0 0 33 36 35 0 0 0 32 32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 34 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 36 0 0 34 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 34 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 34 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 32 34 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.68
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_negate} {:close 0, :instruction exec_do*count} {:close 2, :instruction float_cos} {:close 0, :instruction float_swap} {:close 0, :instruction float_swap} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_square} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction boolean_empty} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_abs} {:close 0, :instruction float_frominteger} {:close 1, :instruction 1.0} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction float_empty} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction float_sub} {:close 0, :instruction 0.0} {:close 0, :instruction exec_while} {:close 0, :instruction exec_if} {:close 0, :instruction tag_float_635} {:close 0, :instruction float_max} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in3} {:close 0, :instruction float_gt} {:close 0, :instruction in2} {:close 0, :instruction 2.0} {:close 0, :instruction float_arccos} {:close 0, :instruction float_floor} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_log10} {:close 0, :instruction tagged_260} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_do*times} {:close 1, :instruction integer_empty} {:close 0, :instruction float_rot} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_sub} {:close 1, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 0, :instruction integer_gte} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_k} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 1, :instruction boolean_not} {:close 1, :instruction 0.0} {:close 0, :instruction integer_div} {:close 1, :instruction float_ceiling} {:close 0, :instruction exec_y} {:close 0, :instruction in1} {:close 0, :instruction float_gte} {:close 0, :instruction in2} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_y} {:close 1, :instruction exec_while} {:close 0, :instruction tagged_61} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup} {:close 1, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction float_min} {:close 2, :instruction float_max} {:close 1, :instruction integer_yankdup} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_dup} {:close 0, :instruction float_mult} {:close 0, :instruction in2} {:close 0, :instruction float_dup} {:close 1, :instruction integer_pop} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 1, :instruction float_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_swap} {:close 0, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_negate} {:close 0, :instruction float_fromboolean} {:close 0, :instruction in1} {:close 1, :instruction boolean_xor} {:close 0, :instruction float_fromboolean} {:close 0, :instruction float_min} {:close 0, :instruction float_floor} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_sub} {:close 0, :instruction boolean_empty} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yank} {:close 0, :instruction float_empty} {:close 0, :instruction exec_dup} {:close 0, :instruction float_gt} {:close 0, :instruction boolean_yank} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction 2.0} {:close 0, :instruction boolean_empty} {:close 0, :instruction in1} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction float_gte} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction in1} {:close 0, :instruction float_max} {:close 1, :instruction integer_rot} {:close 0, :instruction float_flush} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_gt} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction float_div} {:close 0, :instruction integer_sub} {:close 0, :instruction float_mod} {:close 1, :instruction float_eq} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_div} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction integer_dup} {:close 1, :instruction float_frominteger} {:close 0, :instruction integer_div} {:close 1, :instruction integer_lt} {:close 0, :instruction float_empty} {:close 0, :instruction float_log2} {:close 1, :instruction float_deepdup} {:close 1, :instruction boolean_not} {:close 0, :instruction integer_abs} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_max} {:close 0, :instruction float_tan} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 1, :instruction 1.0} {:close 0, :instruction boolean_dup})
Best program: (integer_negate exec_do*count (float_cos) float_swap float_swap boolean_invert_second_then_and float_square in2 in1 boolean_empty exec_do*while () integer_yankdup integer_abs float_frominteger 1.0 in2 in1 float_empty in1 in3 float_sub 0.0 exec_while (exec_if (tag_float_635 float_max integer_fromfloat in3 float_gt in2 2.0 float_arccos float_floor in3 exec_do*count (float_log10 tagged_260 integer_dup boolean_frominteger) exec_do*times (integer_empty) float_rot boolean_yank integer_sub) (in1) integer_dec boolean_dup_times 2.0 in1 integer_gte exec_rot () () (integer_sub exec_k (integer_shove exec_y (exec_y (in2) float_min boolean_not) 0.0) (integer_div float_ceiling) exec_y (in1 float_gte in2 integer_fromboolean exec_do*times (exec_y () exec_while () tagged_61 exec_when (boolean_dup 0.0) 1.0 boolean_dup_times float_min float_max)) integer_yankdup) integer_lt) integer_dup float_mult in2 float_dup integer_pop float_stackdepth exec_do*count (boolean_empty exec_y (boolean_frominteger float_add) float_square in3 float_dup_times) boolean_eq boolean_dup boolean_xor exec_swap (0.0 1.0 float_negate float_fromboolean in1 boolean_xor) (float_fromboolean float_min float_floor in2) exec_s (float_sub boolean_empty in2) (in1 integer_fromboolean boolean_empty integer_yank float_empty exec_dup (float_gt boolean_yank in3 exec_do*count (2.0 boolean_empty in1 boolean_frominteger integer_shove exec_do*while (in3 in1 boolean_stackdepth exec_dup_times () integer_pop exec_while (float_gte) integer_yankdup) exec_while (boolean_invert_first_then_and boolean_invert_first_then_and exec_dup (boolean_yankdup in1) float_max integer_rot) float_flush exec_yank integer_gt) boolean_fromfloat) exec_dup () boolean_dup_items float_div) (integer_sub float_mod float_eq) in1 boolean_invert_second_then_and float_mult integer_empty exec_empty integer_div exec_empty in3 float_min integer_dup float_frominteger integer_div integer_lt float_empty float_log2 float_deepdup boolean_not integer_abs boolean_swap in1 integer_max float_tan exec_eq exec_do*count (exec_when (1.0) boolean_dup))
Errors: [7.872 1.222 85.062 112.405 24.305 3.613 32.702 54.88 17.881 16.173 6.235 28.151 35.417 9.607 1.532 33.502 106.846 26.781 117.666 4.886 10.03 9.454 34.887 28.144 19.803 102.24 16.468 4.0 15.313 6.747 27.383 66.781 39.191 1.919 64.295 22.49 28.025 33.645 26.756 23.5 33.838 19.849 183.658 33.1 24.82 640.944 330.683 12.258 101.083 271.825 112.159 496.459 17.51 101.197 73.164 18.94 10.882 21.031 10.346 18.463 156.373 3498.604 154.246 29.466 20.859 1302.918 2.98 19.892 7.825 8.369 19.112 333.607 395.993 830.863 2.38 61.321 6.943 281.093 16.772 6.554 3.93 10.229 4.983 114.242 16.453 856.493 18.884 10.483 195.703 19.617 8.02 15.01 3.602 35.818 6.361 15.442 3.332 14.594 22.349 815.694 80.921 69.238 51.182 319.089 77.41 7.65 158.318 124.856 18.488 581.283 9.335 6.524 22.224 489.521 8.328 19.095 71.933 175.909 22.799 2.263 28.998 16.586 301.07 15.216 173.675 166.566 142.778 6.073 257.036 1.127 93.9 195.669 258.982 19.61 29.072 22.469 7.055 15.438 29.995 187.174 9.193 14.036 14.775 26.666 27.28 26.838 374.195 1.004 44.749 95.906 262.765 152.36 3.503 19.828 2.657 2.386 9.899 21.383 25.453 6.545 8.642 480.956 97.462 71.205 12.081 267.391 881.856 19.534 817.993 54.935 59.252 5.943 2.004 45.43 11.201 6.816 440.685 35.704 1.899 5.029 13.862 19.807 2.705 1.222 2.495 14.159 116.807 23.442 5.505 17.905 14.914 115.78 111.467 2.915 3.903 101.726 7.875 61.85 17.706 13.384]
Total: 22609.149999999998
Mean: 113.04575
Genome size: 181
Size: 218
Percent parens: 0.170
Age: 4
--- Population Statistics ---
Average total errors in population: 3.750687920297898E12
Median total errors in population: 45642.31100000001
Error averages by case: (1.500005639856676E10 1.7010332483726505E10 1.9000030935015812E10 1.9000032004192127E10 1.6000056693541481E10 1.000003352415474E10 2.600003432257549E10 2.1000031284865288E10 1.700003091047299E10 1.6000031050945366E10 1.4000046011269873E10 1.9000047027844128E10 1.800003570944236E10 1.3000424616244764E10 1.800042467384442E10 2.1297205533373936E10 2.1000033542496487E10 2.0000030441792534E10 1.900009710619557E10 1.7000029246151848E10 2.1016699583432247E10 1.900002930332424E10 2.100003127230449E10 2.1000030417378895E10 2.1000033481757645E10 1.900003294090616E10 1.8006124835971176E10 1.5000030824809832E10 2.0000031456976967E10 1.3000031273915817E10 1.900004713658638E10 1.600003152222626E10 1.4000030242897179E10 1.0000032497604202E10 1.9000046960685463E10 1.8000028516894154E10 1.8000028630014584E10 1.9000046887157585E10 2.1000030548101997E10 1.5000032689147038E10 2.129720758631865E10 2.100003035654309E10 1.9000031082178234E10 2.2000982795352028E10 2.0000034596516125E10 2.129720611552182E10 1.800042524575969E10 1.4000046811399055E10 2.129720562111691E10 1.8000425157682354E10 1.9000031981442497E10 2.1010331722267483E10 2.600003216694799E10 1.9000033923781143E10 2.3000030372483047E10 2.1032102102346516E10 2.300003132178954E10 1.4000270699611197E10 1.8186744609482525E10 2.2000030581869923E10 2.129720571503657E10 2.4000035880854645E10 1.500220723289731E10 1.5000033816069098E10 2.300002958963033E10 2.4000035627687622E10 2.000003264041362E10 2.1000031416963108E10 2.1297205378148746E10 1.700004030841199E10 2.1010331298258972E10 2.100003149930968E10 1.8000425207523304E10 2.3000031931189747E10 1.8000046860293545E10 1.9000031904555916E10 2.0001271582236122E10 2.101033171977137E10 2.0308310430614017E10 1.829720431667535E10 2.1010332332628765E10 1.3000872707355366E10 1.3000029716478733E10 1.800042610436505E10 1.8000176575976448E10 2.4000033260953243E10 1.6000030294546167E10 1.7000688478761854E10 2.048106898180109E10 1.7669555804168095E10 1.4000045904673458E10 1.80000314090533E10 2.300003125040434E10 1.900003185290485E10 1.5000032827822285E10 1.4000141112515009E10 1.000003350996658E10 2.000008406235648E10 1.6000028457021654E10 2.248106989591074E10 2.2000033663550045E10 1.7164295122990961E10 2.110124332138807E10 2.000003105245015E10 2.1297205495997128E10 1.800002921732429E10 1.9000032333849087E10 2.1297205574375893E10 1.6057399345184824E10 2.101033185052216E10 1.2134204487112251E10 2.0481068904983734E10 1.500003140886729E10 1.9000047446271645E10 1.200003236300875E10 1.500220817555106E10 1.848119011735421E10 1.900003103443917E10 2.6000033263762547E10 1.500004680197875E10 2.0000037862001617E10 2.4000033480724373E10 2.0000031017671825E10 1.4320985422684055E10 2.248106926398022E10 1.900003209306756E10 2.0010331270993984E10 1.800003022478418E10 2.1000030532118748E10 1.900004705009592E10 2.1010331538245274E10 2.2481069016451477E10 2.200002963591586E10 2.1481069097545967E10 2.000003144392583E10 1.8000032091609E10 2.2481068974699936E10 1.8000424798859093E10 2.300003242444107E10 1.900003103530503E10 1.800003137772036E10 2.000003168861723E10 1.8483878885100903E10 2.029720535490473E10 2.200003225101534E10 2.1297205465405113E10 2.101033179957863E10 2.2481070008555435E10 1.900003087639462E10 1.900003105985418E10 2.2000033835357983E10 2.60000323832687E10 1.401033013753284E10 1.9010331302478672E10 1.2000028274480455E10 1.4000423663713593E10 1.6111464811344679E10 1.9010331291557007E10 1.6000112168720398E10 1.8002122082684315E10 2.1030456534991722E10 1.9000047523585327E10 1.9000034463960163E10 2.6000032173073643E10 1.561693275196093E10 2.1481069228310043E10 2.3000030508702637E10 2.4000029621338882E10 2.0000034042944122E10 2.2000030608592785E10 1.6000030499157482E10 1.2000034912402449E10 1.8000028832172073E10 1.9062916791955334E10 1.500220713940918E10 1.6000029642726122E10 1.9000047581394917E10 2.000003341938417E10 2.1000033530383503E10 1.9000030273588474E10 1.600036194779578E10 2.3000031474689693E10 1.300003192990498E10 1.200002830567697E10 1.5000029218250744E10 1.4000472838643034E10 1.5002207413823391E10 1.500004572675079E10 1.3006564593631674E10 1.5636788252521976E10 1.800003653442372E10 2.0000030494939754E10 2.1018930954787403E10 2.1000030594483467E10 1.5481068841509506E10 2.10000374887697E10 2.1000033378176186E10 2.2000030598551674E10 2.3000029524574486E10 1.2013203846171663E10)
Error minima by case: (0.273 0.054 0.0 0.0 0.0 0.021 0.465 0.718 0.0 0.0 0.112 0.176 7.13 0.237 0.216 0.536 1.936 0.072 1.858 0.184 0.309 0.063 1.097 0.821 0.113 0.0 0.093 0.0 0.488 0.012 3.417 0.013 0.778 0.018 1.957 0.441 0.025 0.037 0.774 0.725 0.095 0.517 0.0 0.785 0.469 9.253 10.249 0.157 0.239 7.352 0.0 1.115 0.165 0.0 0.493 0.345 5.748 0.744 0.056 0.053 0.853 525.183 1.015 1.005 0.603 16.729 0.02 0.168 1.381 0.156 0.457 6.789 12.103 6.313 1.035 0.0 0.186 2.783 0.129 0.427 3.93 0.04 0.048 2.533 0.076 2.259 0.413 0.278 4.497 0.05 0.339 0.112 0.311 0.0 0.0 0.338 0.027 0.289 0.099 3.491 6.118 2.683 3.937 5.08 0.393 0.009 0.982 5.821 0.177 8.157 0.073 0.076 0.108 3.102 0.116 0.695 2.942 0.0 1.642 0.003 1.188 0.678 5.021 0.555 1.125 0.0 4.808 0.082 6.451 0.262 1.537 0.527 0.7 2.197 0.545 0.501 0.635 0.809 0.005 0.0 0.372 1.677 0.959 0.071 3.703 0.289 8.743 0.017 0.0 0.0 18.697 1.702 0.041 0.017 0.026 0.014 0.303 0.17 0.0 0.067 0.058 7.427 5.328 3.388 0.024 5.185 4.077 1.786 14.197 4.421 0.043 0.165 0.554 2.944 0.908 0.401 2.313 0.193 0.04 0.067 0.395 0.361 0.005 0.314 0.022 0.284 0.968 2.196 0.111 0.0 1.53 2.543 1.694 0.912 0.063 1.82 0.372 3.691 0.803 0.446)
Average genome size in population (length): 144.885
Average program size in population (points): 168.925
Average percent parens in population: 0.134
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.598
Error (vector) diversity:			 0.598
Behavioral diversity:				 0.605
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 5000
Number of program executions (running on a single case counts as 1 execution): 1000000
Number of point (instruction) evaluations so far: 614570943
--- Timings ---
Current time: 1745362502476 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Bouncing Balls problem report - generation 5
Test total error for best: 212604.8489999995
Test mean error for best: 106.30242
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 120.469
Correct output: 12.371 | Program output: 21.593
Correct output: 73.158 | Program output: 106.179
Correct output: 107.414 | Program output: 149.549
Correct output: 66.004 | Program output: 78.772
Correct output: 18.351 | Program output: 27.502
Correct output: 203.233 | Program output: 243.935
Correct output: 168.282 | Program output: 121.402
Correct output: 22.792 | Program output: 33.419
Correct output: 101.076 | Program output: 111.134
Correct output: 89.438 | Program output: 103.673
Correct output: 167.016 | Program output: 203.168
Correct output: 249.241 | Program output: 242.110
Correct output: 17.252 | Program output: 16.645
Correct output: 78.298 | Program output: 84.766
Correct output: 192.343 | Program output: 233.845
Correct output: 325.936 | Program output: 227.090
Correct output: 137.403 | Program output: 172.185
Correct output: 159.858 | Program output: 51.192
Correct output: 43.816 | Program output: 56.702
Correct output: 46.214 | Program output: 64.244
Correct output: 41.847 | Program output: 59.301
Correct output: 111.620 | Program output: 84.734
Correct output: 136.088 | Program output: 172.232
Correct output: 180.744 | Program output: 208.547
Correct output: 77.511 | Program output: 116.258
Correct output: 79.636 | Program output: 104.103
Correct output: 2.001 | Program output: 8.001
Correct output: 114.432 | Program output: 117.920
Correct output: 19.059 | Program output: 24.048
Correct output: 290.212 | Program output: 270.829
Correct output: 197.499 | Program output: 180.303
Correct output: 64.127 | Program output: 33.936
Correct output: 8.284 | Program output: 13.298
Correct output: 203.329 | Program output: 147.034
Correct output: 104.522 | Program output: 113.505
Correct output: 124.531 | Program output: 136.777
Correct output: 125.101 | Program output: 99.457
Correct output: 133.674 | Program output: 168.429
Correct output: 112.074 | Program output: 127.841
Correct output: 308.094 | Program output: 282.257
Correct output: 106.842 | Program output: 134.691
Correct output: 144.377 | Program output: 210.263
Correct output: 296.288 | Program output: 271.189
Correct output: 205.797 | Program output: 202.883
Correct output: 985.735 | Program output: 352.791
Correct output: 680.660 | Program output: 357.977
Correct output: 32.170 | Program output: 27.912
Correct output: 343.239 | Program output: 250.155
Correct output: 584.598 | Program output: 320.774
Correct output: 97.620 | Program output: 139.673
Correct output: 712.538 | Program output: 224.079
Correct output: 123.589 | Program output: 149.100
Correct output: 69.710 | Program output: 108.109
Correct output: 250.818 | Program output: 185.654
Correct output: 120.502 | Program output: 147.442
Correct output: 137.940 | Program output: 156.823
Correct output: 64.091 | Program output: 51.059
Correct output: 65.119 | Program output: 83.465
Correct output: 335.947 | Program output: 325.484
Correct output: 475.105 | Program output: 326.731
Correct output: 3999.600 | Program output: 509.996
Correct output: 279.985 | Program output: 134.739
Correct output: 201.372 | Program output: 202.367
Correct output: 189.382 | Program output: 176.523
Correct output: 1543.271 | Program output: 248.353
Correct output: 102.020 | Program output: 113.000
Correct output: 193.877 | Program output: 221.769
Correct output: 128.350 | Program output: 144.174
Correct output: 53.143 | Program output: 69.512
Correct output: 181.602 | Program output: 170.491
Correct output: 431.170 | Program output: 106.563
Correct output: 619.098 | Program output: 231.105
Correct output: 986.172 | Program output: 164.309
Correct output: 77.831 | Program output: 88.211
Correct output: 55.900 | Program output: 81.007
Correct output: 54.583 | Program output: 69.526
Correct output: 622.783 | Program output: 349.690
Correct output: 83.177 | Program output: 107.949
Correct output: 42.501 | Program output: 57.055
Correct output: 184.764 | Program output: 196.694
Correct output: 67.665 | Program output: 77.800
Correct output: 19.670 | Program output: 29.778
Correct output: 464.533 | Program output: 358.291
Correct output: 106.459 | Program output: 130.912
Correct output: 1108.353 | Program output: 259.859
Correct output: 56.702 | Program output: 53.141
Correct output: 53.970 | Program output: 72.453
Correct output: 259.503 | Program output: 72.801
Correct output: 101.480 | Program output: 129.096
Correct output: 56.812 | Program output: 72.832
Correct output: 75.112 | Program output: 85.925
Correct output: 104.689 | Program output: 109.088
Correct output: 27.529 | Program output: 44.134
Correct output: 3.963 | Program output: 10.750
Correct output: 83.268 | Program output: 95.320
Correct output: 11.973 | Program output: 20.832
Correct output: 76.197 | Program output: 98.791
Correct output: 99.025 | Program output: 112.172
Correct output: 1219.703 | Program output: 412.009
Correct output: 396.400 | Program output: 323.480
Correct output: 125.727 | Program output: 64.489
Correct output: 371.001 | Program output: 327.819
Correct output: 738.413 | Program output: 344.980
Correct output: 280.393 | Program output: 210.983
Correct output: 37.145 | Program output: 52.795
Correct output: 425.982 | Program output: 275.665
Correct output: 357.821 | Program output: 240.965
Correct output: 120.482 | Program output: 146.969
Correct output: 845.157 | Program output: 271.874
Correct output: 68.073 | Program output: 54.960
Correct output: 27.389 | Program output: 41.914
Correct output: 95.616 | Program output: 99.724
Correct output: 747.315 | Program output: 265.794
Correct output: 22.311 | Program output: 25.195
Correct output: 116.926 | Program output: 144.022
Correct output: 111.460 | Program output: 48.527
Correct output: 122.996 | Program output: 186.299
Correct output: 185.091 | Program output: 215.890
Correct output: 12.422 | Program output: 22.684
Correct output: 151.265 | Program output: 188.264
Correct output: 87.691 | Program output: 112.277
Correct output: 705.021 | Program output: 332.730
Correct output: 65.326 | Program output: 74.711
Correct output: 473.339 | Program output: 307.664
Correct output: 147.045 | Program output: 207.234
Correct output: 220.192 | Program output: 85.414
Correct output: 25.498 | Program output: 39.571
Correct output: 464.800 | Program output: 215.764
Correct output: 223.405 | Program output: 232.533
Correct output: 391.079 | Program output: 305.178
Correct output: 293.758 | Program output: 106.089
Correct output: 335.272 | Program output: 85.289
Correct output: 225.803 | Program output: 253.413
Correct output: 153.545 | Program output: 109.714
Correct output: 106.271 | Program output: 136.740
Correct output: 164.365 | Program output: 165.310
Correct output: 184.316 | Program output: 176.879
Correct output: 182.005 | Program output: 220.000
Correct output: 124.203 | Program output: 191.261
Correct output: 66.716 | Program output: 72.344
Correct output: 306.042 | Program output: 249.316
Correct output: 68.394 | Program output: 91.169
Correct output: 139.929 | Program output: 121.263
Correct output: 226.230 | Program output: 206.951
Correct output: 129.442 | Program output: 164.280
Correct output: 723.847 | Program output: 357.652
Correct output: 182.792 | Program output: 191.795
Correct output: 39.803 | Program output: 59.386
Correct output: 128.192 | Program output: 164.827
Correct output: 624.606 | Program output: 369.840
Correct output: 397.298 | Program output: 252.938
Correct output: 12.690 | Program output: 24.193
Correct output: 100.386 | Program output: 128.214
Correct output: 7.550 | Program output: 14.032
Correct output: 30.019 | Program output: 35.633
Correct output: 48.697 | Program output: 66.597
Correct output: 101.830 | Program output: 131.213
Correct output: 54.972 | Program output: 68.123
Correct output: 55.501 | Program output: 70.046
Correct output: 46.143 | Program output: 62.786
Correct output: 808.426 | Program output: 335.470
Correct output: 178.068 | Program output: 88.605
Correct output: 207.417 | Program output: 144.212
Correct output: 93.518 | Program output: 113.599
Correct output: 490.815 | Program output: 231.424
Correct output: 1247.817 | Program output: 373.960
Correct output: 160.740 | Program output: 188.274
Correct output: 1006.197 | Program output: 196.204
Correct output: 385.498 | Program output: 338.563
Correct output: 226.865 | Program output: 177.707
Correct output: 44.815 | Program output: 50.650
Correct output: 139.446 | Program output: 116.730
Correct output: 98.158 | Program output: 60.728
Correct output: 134.416 | Program output: 131.215
Correct output: 57.911 | Program output: 69.619
Correct output: 838.313 | Program output: 405.628
Correct output: 192.012 | Program output: 164.308
Correct output: 241.040 | Program output: 247.140
Correct output: 52.438 | Program output: 65.467
Correct output: 63.745 | Program output: 76.874
Correct output: 276.361 | Program output: 264.553
Correct output: 9.005 | Program output: 19.709
Correct output: 28.509 | Program output: 28.203
Correct output: 26.238 | Program output: 36.733
Correct output: 64.284 | Program output: 76.403
Correct output: 397.628 | Program output: 288.820
Correct output: 161.133 | Program output: 119.177
Correct output: 54.111 | Program output: 56.607
Correct output: 20.954 | Program output: 31.589
Correct output: 279.470 | Program output: 246.308
Correct output: 235.457 | Program output: 104.965
Correct output: 337.121 | Program output: 233.654
Correct output: 141.508 | Program output: 152.423
Correct output: 18.824 | Program output: 30.728
Correct output: 216.404 | Program output: 122.678
Correct output: 120.372 | Program output: 136.247
Correct output: 354.574 | Program output: 300.724
Correct output: 86.713 | Program output: 112.419
Correct output: 37.202 | Program output: 38.757
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 1 46 44 47 1 4 1 46 46 3 1 1 1 1 1 6 1 1 1 1 1 1 1 1 46 1 62 2 3 1 1 1 1 1 1 1 1 1 1 2 1 46 2 1 1 1 1 1 1 44 1 1 46 1 1 1 2 1 1 1 1 1 1 2 1 5 1 1 1 2 1 1 1 1 47 4 1 1 1 1 3 1 1 5 1 2 1 1 1 1 1 1 45 56 4 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 1 1 1 1 43 1 2 2 1 1 1 1 47 1 1 1 1 1 1 2 1 1 2 1 1 1 46 4 2 2 1 2 1 1 1 45 47 2 1 2 1 2 1 1 1 44 1 1 1 1 1 3 1 1 1 1 1 1 1 2 1 2 1 1 1 1 4 1 1 2 1 4 1 1 1 3 46 1 1 1 1 2 1 1 1 1 1)
Population mean number of elite cases: 1.19
Count of perfect (error zero) individuals by case: (0 0 46 44 47 0 0 0 46 46 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 46 0 62 0 0 0 0 0 0 0 0 0 0 0 0 0 0 46 0 0 0 0 0 0 0 44 0 0 46 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 47 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 56 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 43 0 0 0 0 0 0 0 47 0 0 0 0 0 0 0 0 0 0 0 0 0 46 0 0 0 0 0 0 0 0 45 47 0 0 0 0 0 0 0 0 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 46 0 0 0 0 0 0 1 0 0 0)
Population mean number of perfect (error zero) cases: 0.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction 1.0} {:close 0, :instruction float_yankdup} {:close 0, :instruction in2} {:close 0, :instruction float_swap} {:close 0, :instruction 2.0} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_abs} {:close 1, :instruction in1} {:close 0, :instruction float_frominteger} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 0, :instruction in3} {:close 1, :instruction float_dec} {:close 0, :instruction float_sub} {:close 1, :instruction 2.0} {:close 0, :instruction float_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 0.0} {:close 0, :instruction float_yank} {:close 0, :instruction float_lte} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction float_max} {:close 0, :instruction in2} {:close 0, :instruction 2.0} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_inc} {:close 0, :instruction float_log10} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_floor} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction 1.0} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 2.0} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction float_div} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction float_min} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction 0.0} {:close 0, :instruction float_shove} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction float_sin} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_while} {:close 2, :instruction float_fromboolean} {:close 0, :instruction float_lte} {:close 0, :instruction float_fromboolean} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dup_items} {:close 1, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_yankdup} {:close 0, :instruction 0.0} {:close 2, :instruction float_max} {:close 0, :instruction integer_sub} {:close 0, :instruction float_stackdepth} {:close 1, :instruction integer_lt} {:close 0, :instruction in2} {:close 0, :instruction integer_dup} {:close 0, :instruction float_max} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_y} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction float_log2} {:close 0, :instruction float_gte} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_when} {:close 1, :instruction float_dup_times} {:close 0, :instruction tagged_383} {:close 0, :instruction boolean_eq} {:close 0, :instruction float_tan} {:close 0, :instruction boolean_xor} {:close 0, :instruction 1.0} {:close 0, :instruction float_shove} {:close 0, :instruction float_negate} {:close 1, :instruction float_sqrt} {:close 0, :instruction in1} {:close 0, :instruction integer_deepdup} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction float_min} {:close 1, :instruction tag_boolean_795} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_sub} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_do*while} {:close 1, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_sqrt} {:close 0, :instruction in1} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction in1} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction float_ceiling} {:close 0, :instruction float_arccos} {:close 0, :instruction float_shove} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction float_dec} {:close 1, :instruction float_dec} {:close 1, :instruction exec_dup_times} {:close 0, :instruction float_log10} {:close 1, :instruction float_inc} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction exec_swap} {:close 2, :instruction in3} {:close 2, :instruction integer_dup_items} {:close 1, :instruction float_gte} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 1, :instruction float_min} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction float_log2} {:close 0, :instruction boolean_deepdup} {:close 1, :instruction in1} {:close 0, :instruction float_max} {:close 0, :instruction float_add} {:close 0, :instruction boolean_or} {:close 0, :instruction 2.0} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction float_flush} {:close 1, :instruction integer_gt} {:close 0, :instruction float_dup_items} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction tag_float_118} {:close 0, :instruction float_sin} {:close 0, :instruction integer_flush} {:close 0, :instruction float_mod} {:close 1, :instruction float_eq} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction 2.0} {:close 1, :instruction exec_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_lt} {:close 0, :instruction float_log2} {:close 1, :instruction float_log10} {:close 0, :instruction float_log2} {:close 1, :instruction float_deepdup} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 0, :instruction boolean_swap} {:close 1, :instruction in2} {:close 0, :instruction boolean_not} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 1, :instruction 1.0})
Best program: (1.0 float_yankdup in2 float_swap 2.0 exec_dup_times (in2 integer_yankdup integer_abs in1) float_frominteger in1 float_min in2 float_empty in3 float_dec float_sub 2.0 float_dup_items in1 boolean_dup_times 0.0 float_yank float_lte integer_rot exec_if (float_max in2 2.0 integer_fromfloat in3 exec_do*count (float_inc float_log10 integer_dup boolean_dup_items exec_do*times (float_floor exec_stackdepth in3 integer_sub) 1.0 integer_stackdepth exec_empty integer_dec boolean_dup_times 2.0 2.0 in1 exec_rot () () (integer_sub float_div exec_y (in2) integer_fromfloat float_min boolean_stackdepth 0.0) float_shove integer_div boolean_yankdup boolean_yank exec_noop) in1 float_sin integer_fromboolean integer_dup exec_while () float_fromboolean) () float_lte float_fromboolean exec_s (integer_dup_items 0.0) (1.0 float_yankdup 0.0 float_max) () integer_sub float_stackdepth integer_lt in2 integer_dup float_max integer_fromboolean in3 in3 integer_min float_stackdepth exec_do*count (exec_y (float_add) float_square in3 in2 float_log2 float_gte integer_fromboolean exec_when (float_dup_times) tagged_383 boolean_eq float_tan boolean_xor 1.0 float_shove float_negate float_sqrt) in1 integer_deepdup boolean_xor boolean_frominteger float_min tag_boolean_795 in2 exec_s (float_sub boolean_invert_second_then_and exec_do*while (in2) in2 exec_do*range (boolean_empty float_sqrt in1 exec_eq) integer_dup integer_deepdup in3 exec_do*count (boolean_invert_first_then_and) in1 exec_eq integer_shove exec_do*while (float_ceiling float_arccos float_shove integer_fromfloat float_dec float_dec) exec_dup_times () float_log10 float_inc) (integer_fromfloat exec_swap (in3) () integer_dup_items) () float_gte integer_eq boolean_invert_first_then_and exec_noop integer_negate float_min exec_empty in3 float_log2 boolean_deepdup in1 float_max float_add boolean_or 2.0 integer_rot integer_sub float_flush integer_gt float_dup_items boolean_fromfloat tag_float_118 float_sin integer_flush float_mod float_eq in1 boolean_invert_second_then_and in2 integer_empty boolean_invert_first_then_and exec_empty in3 float_min 2.0 exec_yank integer_dup integer_lt float_log2 float_log10 float_log2 float_deepdup integer_abs boolean_not boolean_swap in2 boolean_not exec_dup_times () integer_max exec_eq exec_do*count (exec_when (1.0)))
Errors: [15.872 9.222 33.021 42.135 12.768 9.151 40.702 46.88 10.627 10.058 14.235 36.151 7.13 0.607 6.468 41.502 98.846 34.781 108.666 12.886 18.03 17.454 26.887 36.144 27.803 38.747 24.468 6.0 3.488 4.988 19.383 17.195 30.191 5.014 56.295 8.982 12.246 25.645 34.756 15.767 25.838 27.849 65.886 25.1 2.914 632.944 322.683 4.258 93.083 263.825 42.053 488.459 25.51 38.399 65.164 26.94 18.882 13.031 18.346 10.463 148.373 3489.604 145.246 0.995 12.859 1294.918 10.98 27.892 15.825 16.369 11.112 324.607 387.993 821.863 10.38 25.107 14.943 273.093 24.772 14.554 11.93 10.135 10.108 106.242 24.453 848.493 3.561 18.483 186.703 27.617 16.02 10.813 4.398 16.606 6.787 12.052 8.859 22.594 13.147 807.694 72.921 61.238 43.182 393.434 69.41 15.65 150.318 116.856 26.488 573.283 13.112 14.524 4.108 481.521 2.884 27.095 62.933 63.303 30.799 10.263 36.998 24.586 372.291 9.385 165.675 60.189 134.778 14.073 249.036 9.127 85.9 187.669 249.982 27.61 43.831 30.469 0.945 7.438 37.995 67.058 5.628 56.726 22.775 18.666 19.28 34.838 366.195 9.004 19.583 36.635 254.765 144.36 11.503 27.828 6.483 5.614 17.899 29.383 13.151 14.545 16.642 472.956 89.462 63.205 20.081 259.391 873.856 27.534 809.993 46.935 49.158 5.835 22.716 37.43 3.201 11.708 432.685 27.704 6.101 13.029 13.128 11.807 10.705 0.306 10.495 12.119 108.807 41.956 2.495 10.635 33.163 130.493 103.467 10.915 11.903 93.726 15.875 53.85 25.706 1.554]
Total: 21626.94299999999
Mean: 108.13471
Genome size: 202
Size: 232
Percent parens: 0.129
Age: 5
--- Population Statistics ---
Average total errors in population: 3.447537534736439E12
Median total errors in population: 44389.99800000001
Error averages by case: (1.900004605246141E10 1.4672989087599857E10 1.9000034382096664E10 1.900003360873948E10 1.8000041601043076E10 1.2000029374516554E10 2.0000035915784897E10 1.8000031537200684E10 1.7000042124829174E10 1.7010658772134823E10 1.6000051624608528E10 1.8016250169597523E10 1.9000033359347042E10 1.0000516356621233E10 1.5000516395042133E10 1.5529866736037285E10 1.80687507889348E10 1.800003371024988E10 1.7000210815737503E10 1.8000033490982735E10 1.6016696795873713E10 1.6000348284259493E10 1.9000029457990322E10 1.8000031673725533E10 1.806875158150203E10 1.9000033437842926E10 1.7000032482594202E10 1.4000032235244028E10 1.900002944656376E10 1.2527987694460285E10 1.9000050985535698E10 2.000003058077026E10 1.5000030428626326E10 1.0000030311512669E10 1.900083534300573E10 2.0000035385273945E10 1.9000034166740997E10 1.800005033936516E10 1.900003165014421E10 1.7000030487257387E10 1.4474527085091074E10 1.9000029526816242E10 2.1000036496691013E10 2.000003168747134E10 1.9000029531091347E10 1.5388162467170412E10 1.6000519621908068E10 1.4000050267492842E10 1.4422037101411083E10 1.7000515876273144E10 2.000003355971354E10 1.5023115635090343E10 1.900003375576878E10 1.9000033391571434E10 1.9000033669017227E10 1.9000035871263374E10 1.900003095857447E10 1.6056514427679157E10 1.400002937122036E10 1.7000032846005728E10 1.4388163088394651E10 1.900003586989082E10 2.0000032500495575E10 1.7000028771682505E10 1.8000031057427513E10 1.800003363231913E10 1.6000033669335917E10 1.8000030676992077E10 1.6388161834479036E10 1.7000042614135607E10 1.5023158170657911E10 2.0000029677449226E10 1.800052609560492E10 1.8000033224045036E10 1.8000049315402935E10 2.000003429974745E10 1.8000029432281258E10 1.6023114617827713E10 1.6388161730674158E10 1.4388161732172083E10 1.502321155662969E10 1.600087741854045E10 1.3000032015919247E10 1.6000518812883024E10 1.700003158473667E10 2.000003226050662E10 1.7000029333361145E10 1.6000516384405457E10 1.4000030466810911E10 1.688988574834799E10 1.6000052337196419E10 1.800003035057721E10 1.800003055474278E10 1.9000033247295967E10 1.3000032237788212E10 1.7000090479663836E10 1.100015184877003E10 1.800003159916335E10 1.900003514548652E10 1.5000031402364737E10 1.806875193940151E10 1.5675498477100975E10 1.9000031842515438E10 1.800003101043324E10 1.5405475761558743E10 1.7000032055095703E10 2.40000345904952E10 1.7414092751024E10 1.6023113310491692E10 1.602311374711E10 1.6134201272626307E10 1.2037272751860182E10 1.7000029471734312E10 1.9000050907252678E10 1.3000385469740755E10 2.1000031442756226E10 1.3000087300415026E10 2.1000036443388367E10 2.0000034852723858E10 1.4000051260165546E10 1.9000030621762753E10 2.0000033515732464E10 1.9000029941083908E10 1.7160512579200516E10 1.6000030752765968E10 2.000003451412418E10 1.6023114196646694E10 1.6001520052864943E10 1.900003178657225E10 1.801260630328692E10 1.6023113446035152E10 1.7000029510344212E10 1.9000032081943836E10 1.7000033108254665E10 1.800003043691206E10 2.1000035352403835E10 1.500003179761268E10 1.600051669513081E10 1.7000033740129562E10 1.9000035443951553E10 1.8000029302998367E10 1.9000030616095146E10 1.4000030435180914E10 1.5388162685872627E10 2.0000031245546223E10 1.4388162832720583E10 1.602311469299903E10 1.6000032855794912E10 1.9000036269134342E10 2.000003372052718E10 1.906875350607511E10 1.9000034954991253E10 1.5023113063816298E10 1.502311323538656E10 1.3000031992524729E10 1.4000534137646393E10 1.4151912676895418E10 1.4023113219174253E10 1.800006207391873E10 1.9000032394974346E10 1.8030452276098488E10 1.800005100170237E10 2.0000031468774117E10 2.0000033763111042E10 1.8308485274763634E10 1.5000031724931572E10 1.9000030944142776E10 1.8000031078585686E10 1.9068750273047966E10 1.8000032881680885E10 1.9000030552324265E10 1.5000031367098124E10 2.0000033095999657E10 1.6057991913720915E10 2.000003138979642E10 1.5000029572030113E10 1.8000051090292027E10 1.80687508918005E10 2.106875179388222E10 1.8000032567904022E10 1.7000196112687914E10 1.8000032777391697E10 1.60000331938938E10 1.3000033088175228E10 1.7000037560845953E10 1.600046863234526E10 2.000003411577009E10 1.8000028444231903E10 1.700439085782051E10 1.4955174064493515E10 1.9000032366508205E10 1.800002943955314E10 2.0000030205924442E10 2.0000029581606636E10 1.4000030311835356E10 2.0000030534615715E10 1.906875061815372E10 2.100002978267416E10 1.7000029976600561E10 1.6013141087322527E10)
Error minima by case: (0.273 0.035 0.0 0.0 0.0 0.132 0.465 0.559 0.0 0.0 0.112 0.015 1.31 0.035 0.532 0.316 1.936 0.937 1.715 0.184 0.116 0.063 0.785 0.821 0.256 0.0 0.093 0.0 0.488 0.012 0.76 0.013 0.08 0.014 0.139 0.383 4.458 0.343 0.242 0.033 0.095 0.195 0.0 0.785 0.086 12.333 2.354 0.084 2.962 4.651 0.0 0.516 0.421 0.0 4.21 0.192 0.626 0.091 0.159 5.947 0.853 202.873 1.015 0.005 0.603 61.271 0.02 0.178 2.713 0.05 0.457 3.83 0.646 14.172 0.696 0.0 0.419 9.743 0.129 0.019 0.529 0.04 0.048 15.249 0.076 3.074 0.188 0.026 0.086 0.05 0.024 0.112 0.371 0.0 0.0 0.338 0.027 0.289 0.025 0.297 0.338 0.687 0.937 7.099 0.393 0.267 0.982 3.653 0.126 13.953 0.447 0.017 0.108 9.043 0.035 0.305 0.946 0.0 1.805 0.003 1.265 0.192 16.247 0.503 3.957 0.0 0.192 0.25 0.8 0.127 7.382 1.441 0.3 1.085 0.273 0.501 0.535 0.474 0.424 0.0 0.372 1.677 0.025 0.073 0.703 0.455 4.153 0.004 0.0 0.0 5.394 6.796 0.001 0.017 0.041 0.019 0.048 0.134 0.0 0.022 0.019 0.302 1.004 1.417 0.024 0.815 4.077 2.018 41.133 1.498 0.137 0.012 0.554 1.478 0.908 0.165 23.062 0.27 0.299 0.194 0.395 3.525 0.041 0.004 0.022 0.035 1.225 0.196 0.111 0.0 1.53 2.654 1.121 0.178 0.063 0.949 0.0 2.6 1.146 0.446)
Average genome size in population (length): 161.535
Average program size in population (points): 188.707
Average percent parens in population: 0.139
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.602
Error (vector) diversity:			 0.602
Behavioral diversity:				 0.615
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 6000
Number of program executions (running on a single case counts as 1 execution): 1200000
Number of point (instruction) evaluations so far: 786813393
--- Timings ---
Current time: 1745362638170 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Bouncing Balls problem report - generation 6
Test total error for best: 200971.73699999982
Test mean error for best: 100.48587
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 119.203
Correct output: 12.371 | Program output: 18.834
Correct output: 73.158 | Program output: 131.280
Correct output: 107.414 | Program output: 183.765
Correct output: 66.004 | Program output: 83.621
Correct output: 18.351 | Program output: 26.047
Correct output: 203.233 | Program output: 273.333
Correct output: 168.282 | Program output: 137.289
Correct output: 22.792 | Program output: 36.127
Correct output: 101.076 | Program output: 113.272
Correct output: 89.438 | Program output: 101.542
Correct output: 167.016 | Program output: 226.304
Correct output: 249.241 | Program output: 334.285
Correct output: 17.252 | Program output: 13.239
Correct output: 78.298 | Program output: 92.763
Correct output: 192.343 | Program output: 260.971
Correct output: 325.936 | Program output: 262.446
Correct output: 137.403 | Program output: 183.272
Correct output: 159.858 | Program output: 53.499
Correct output: 43.816 | Program output: 53.919
Correct output: 46.214 | Program output: 66.585
Correct output: 41.847 | Program output: 60.444
Correct output: 111.620 | Program output: 93.833
Correct output: 136.088 | Program output: 185.375
Correct output: 180.744 | Program output: 234.717
Correct output: 77.511 | Program output: 147.085
Correct output: 79.636 | Program output: 109.114
Correct output: 2.001 | Program output: 7.081
Correct output: 114.432 | Program output: 152.730
Correct output: 19.059 | Program output: 27.887
Correct output: 290.212 | Program output: 311.597
Correct output: 197.499 | Program output: 266.360
Correct output: 64.127 | Program output: 32.733
Correct output: 8.284 | Program output: 11.854
Correct output: 203.329 | Program output: 167.821
Correct output: 104.522 | Program output: 147.601
Correct output: 124.531 | Program output: 175.417
Correct output: 125.101 | Program output: 111.234
Correct output: 133.674 | Program output: 179.856
Correct output: 112.074 | Program output: 152.928
Correct output: 308.094 | Program output: 325.121
Correct output: 106.842 | Program output: 147.410
Correct output: 144.377 | Program output: 268.230
Correct output: 296.288 | Program output: 312.124
Correct output: 205.797 | Program output: 269.512
Correct output: 985.735 | Program output: 415.261
Correct output: 680.660 | Program output: 419.946
Correct output: 32.170 | Program output: 26.655
Correct output: 343.239 | Program output: 289.561
Correct output: 584.598 | Program output: 375.386
Correct output: 97.620 | Program output: 173.807
Correct output: 712.538 | Program output: 261.845
Correct output: 123.589 | Program output: 165.350
Correct output: 69.710 | Program output: 138.589
Correct output: 250.818 | Program output: 213.143
Correct output: 120.502 | Program output: 152.746
Correct output: 137.940 | Program output: 175.579
Correct output: 64.091 | Program output: 54.112
Correct output: 65.119 | Program output: 89.689
Correct output: 335.947 | Program output: 374.769
Correct output: 475.105 | Program output: 380.613
Correct output: 3999.600 | Program output: 604.156
Correct output: 279.985 | Program output: 153.692
Correct output: 201.372 | Program output: 268.930
Correct output: 189.382 | Program output: 200.938
Correct output: 1543.271 | Program output: 291.148
Correct output: 102.020 | Program output: 109.161
Correct output: 193.877 | Program output: 250.193
Correct output: 128.350 | Program output: 161.193
Correct output: 53.143 | Program output: 68.780
Correct output: 181.602 | Program output: 193.836
Correct output: 431.170 | Program output: 119.852
Correct output: 619.098 | Program output: 270.014
Correct output: 986.172 | Program output: 189.281
Correct output: 77.831 | Program output: 96.476
Correct output: 55.900 | Program output: 98.195
Correct output: 54.583 | Program output: 74.050
Correct output: 622.783 | Program output: 409.454
Correct output: 83.177 | Program output: 112.931
Correct output: 42.501 | Program output: 55.280
Correct output: 184.764 | Program output: 222.894
Correct output: 67.665 | Program output: 85.069
Correct output: 19.670 | Program output: 30.689
Correct output: 464.533 | Program output: 416.975
Correct output: 106.459 | Program output: 134.763
Correct output: 1108.353 | Program output: 304.429
Correct output: 56.702 | Program output: 77.667
Correct output: 53.970 | Program output: 76.495
Correct output: 259.503 | Program output: 79.446
Correct output: 101.480 | Program output: 135.591
Correct output: 56.812 | Program output: 71.834
Correct output: 75.112 | Program output: 105.480
Correct output: 104.689 | Program output: 121.268
Correct output: 27.529 | Program output: 52.821
Correct output: 3.963 | Program output: 9.618
Correct output: 83.268 | Program output: 109.181
Correct output: 11.973 | Program output: 19.399
Correct output: 76.197 | Program output: 102.105
Correct output: 99.025 | Program output: 137.656
Correct output: 1219.703 | Program output: 486.109
Correct output: 396.400 | Program output: 375.011
Correct output: 125.727 | Program output: 70.282
Correct output: 371.001 | Program output: 379.095
Correct output: 738.413 | Program output: 504.830
Correct output: 280.393 | Program output: 243.053
Correct output: 37.145 | Program output: 51.951
Correct output: 425.982 | Program output: 321.216
Correct output: 357.821 | Program output: 279.179
Correct output: 120.482 | Program output: 151.963
Correct output: 845.157 | Program output: 319.022
Correct output: 68.073 | Program output: 72.136
Correct output: 27.389 | Program output: 40.875
Correct output: 95.616 | Program output: 119.920
Correct output: 747.315 | Program output: 311.999
Correct output: 22.311 | Program output: 32.720
Correct output: 116.926 | Program output: 158.973
Correct output: 111.460 | Program output: 50.216
Correct output: 122.996 | Program output: 241.682
Correct output: 185.091 | Program output: 242.765
Correct output: 12.422 | Program output: 19.979
Correct output: 151.265 | Program output: 207.830
Correct output: 87.691 | Program output: 121.815
Correct output: 705.021 | Program output: 486.333
Correct output: 65.326 | Program output: 93.453
Correct output: 473.339 | Program output: 358.392
Correct output: 147.045 | Program output: 259.503
Correct output: 220.192 | Program output: 95.591
Correct output: 25.498 | Program output: 38.599
Correct output: 464.800 | Program output: 250.520
Correct output: 223.405 | Program output: 265.014
Correct output: 391.079 | Program output: 354.044
Correct output: 293.758 | Program output: 120.268
Correct output: 335.272 | Program output: 94.423
Correct output: 225.803 | Program output: 287.270
Correct output: 153.545 | Program output: 150.393
Correct output: 106.271 | Program output: 146.886
Correct output: 164.365 | Program output: 187.112
Correct output: 184.316 | Program output: 201.143
Correct output: 182.005 | Program output: 245.732
Correct output: 124.203 | Program output: 250.400
Correct output: 66.716 | Program output: 90.635
Correct output: 306.042 | Program output: 345.857
Correct output: 68.394 | Program output: 95.730
Correct output: 139.929 | Program output: 136.526
Correct output: 226.230 | Program output: 236.786
Correct output: 129.442 | Program output: 176.588
Correct output: 723.847 | Program output: 419.719
Correct output: 182.792 | Program output: 217.426
Correct output: 39.803 | Program output: 71.050
Correct output: 128.192 | Program output: 193.543
Correct output: 624.606 | Program output: 432.624
Correct output: 397.298 | Program output: 293.521
Correct output: 12.690 | Program output: 20.980
Correct output: 100.386 | Program output: 135.002
Correct output: 7.550 | Program output: 13.462
Correct output: 30.019 | Program output: 35.450
Correct output: 48.697 | Program output: 69.660
Correct output: 101.830 | Program output: 139.993
Correct output: 54.972 | Program output: 73.355
Correct output: 55.501 | Program output: 74.729
Correct output: 46.143 | Program output: 65.647
Correct output: 808.426 | Program output: 394.769
Correct output: 178.068 | Program output: 99.028
Correct output: 207.417 | Program output: 164.375
Correct output: 93.518 | Program output: 114.789
Correct output: 490.815 | Program output: 269.292
Correct output: 1247.817 | Program output: 440.891
Correct output: 160.740 | Program output: 210.987
Correct output: 1006.197 | Program output: 228.518
Correct output: 385.498 | Program output: 391.801
Correct output: 226.865 | Program output: 288.198
Correct output: 44.815 | Program output: 52.838
Correct output: 139.446 | Program output: 165.235
Correct output: 98.158 | Program output: 65.674
Correct output: 134.416 | Program output: 147.797
Correct output: 57.911 | Program output: 70.997
Correct output: 838.313 | Program output: 477.670
Correct output: 192.012 | Program output: 187.196
Correct output: 241.040 | Program output: 282.225
Correct output: 52.438 | Program output: 62.740
Correct output: 63.745 | Program output: 89.501
Correct output: 276.361 | Program output: 303.710
Correct output: 9.005 | Program output: 16.307
Correct output: 28.509 | Program output: 34.451
Correct output: 26.238 | Program output: 36.367
Correct output: 64.284 | Program output: 90.104
Correct output: 397.628 | Program output: 336.330
Correct output: 161.133 | Program output: 165.825
Correct output: 54.111 | Program output: 60.206
Correct output: 20.954 | Program output: 34.305
Correct output: 279.470 | Program output: 349.542
Correct output: 235.457 | Program output: 146.552
Correct output: 337.121 | Program output: 270.260
Correct output: 141.508 | Program output: 171.322
Correct output: 18.824 | Program output: 27.544
Correct output: 216.404 | Program output: 139.361
Correct output: 120.372 | Program output: 151.928
Correct output: 354.574 | Program output: 347.776
Correct output: 86.713 | Program output: 121.228
Correct output: 37.202 | Program output: 52.667
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 32 31 32 1 2 1 31 31 1 4 1 1 1 1 1 2 1 1 1 1 1 1 1 32 1 37 1 1 1 1 1 5 2 1 1 2 1 2 3 1 31 1 1 1 7 1 1 1 31 1 1 32 1 1 1 1 3 1 1 1 1 2 3 1 1 1 1 1 3 1 1 1 1 32 1 1 3 1 2 1 1 2 1 1 3 2 1 2 1 1 1 31 34 1 2 1 1 1 1 1 1 1 1 1 7 1 1 1 1 2 1 1 4 1 1 32 1 2 1 1 1 1 1 32 1 1 1 3 1 1 1 1 1 1 1 1 1 32 1 2 1 2 1 1 1 2 32 32 1 1 1 2 1 3 1 1 31 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 31 1 1 1 1 1 1 1 1 1 1)
Population mean number of elite cases: 0.88
Count of perfect (error zero) individuals by case: (0 0 32 31 32 0 0 0 31 31 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 31 0 0 0 0 0 0 0 31 0 0 32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 31 34 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 32 32 0 0 0 0 0 0 0 0 31 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 31 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction 1.0} {:close 2, :instruction float_cos} {:close 0, :instruction float_yankdup} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup_items} {:close 0, :instruction float_dup} {:close 0, :instruction 2.0} {:close 0, :instruction in2} {:close 0, :instruction integer_yankdup} {:close 1, :instruction float_add} {:close 0, :instruction float_frominteger} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction float_sub} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction tag_float_635} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_flush} {:close 0, :instruction in2} {:close 0, :instruction float_floor} {:close 0, :instruction in3} {:close 0, :instruction float_cos} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction float_sin} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 2.0} {:close 0, :instruction 2.0} {:close 2, :instruction exec_rot} {:close 0, :instruction float_ceiling} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 0, :instruction integer_div} {:close 0, :instruction integer_div} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction integer_dup} {:close 0, :instruction in1} {:close 1, :instruction exec_while} {:close 1, :instruction 1.0} {:close 2, :instruction float_fromboolean} {:close 0, :instruction exec_when} {:close 0, :instruction 0.0} {:close 0, :instruction in1} {:close 1, :instruction integer_mult} {:close 1, :instruction 0.0} {:close 0, :instruction integer_sub} {:close 0, :instruction 1.0} {:close 0, :instruction float_min} {:close 1, :instruction boolean_eq} {:close 2, :instruction float_max} {:close 0, :instruction in3} {:close 1, :instruction integer_swap} {:close 0, :instruction float_inc} {:close 0, :instruction 0.0} {:close 0, :instruction boolean_deepdup} {:close 1, :instruction float_tan} {:close 1, :instruction float_dup_items} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction float_dup} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_flush} {:close 2, :instruction in1} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 0, :instruction in3} {:close 0, :instruction float_log2} {:close 0, :instruction float_arcsin} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction 1.0} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction float_shove} {:close 0, :instruction in1} {:close 0, :instruction exec_flush} {:close 0, :instruction float_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_sqrt} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_dup} {:close 1, :instruction float_arcsin} {:close 0, :instruction float_gt} {:close 0, :instruction integer_deepdup} {:close 1, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction float_arccos} {:close 1, :instruction in2} {:close 0, :instruction float_dec} {:close 0, :instruction boolean_flush} {:close 1, :instruction float_inc} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 0, :instruction integer_fromfloat} {:close 1, :instruction exec_noop} {:close 2, :instruction integer_dup_items} {:close 1, :instruction float_gte} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction float_min} {:close 0, :instruction float_div} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction float_sub} {:close 0, :instruction float_shove} {:close 1, :instruction in1} {:close 0, :instruction boolean_eq} {:close 0, :instruction 2.0} {:close 1, :instruction integer_rot} {:close 0, :instruction float_flush} {:close 0, :instruction exec_yank} {:close 1, :instruction tagged_239} {:close 0, :instruction in1} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_flush} {:close 1, :instruction float_div} {:close 0, :instruction float_mod} {:close 0, :instruction in1} {:close 0, :instruction float_ceiling} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction 2.0} {:close 0, :instruction 1.0} {:close 0, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction integer_empty} {:close 1, :instruction integer_deepdup} {:close 0, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction integer_dup} {:close 1, :instruction float_frominteger} {:close 0, :instruction in1} {:close 1, :instruction integer_lt} {:close 0, :instruction float_empty} {:close 0, :instruction float_log2} {:close 0, :instruction float_tan} {:close 1, :instruction float_log10} {:close 0, :instruction float_tan} {:close 1, :instruction float_deepdup} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 1, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction boolean_swap} {:close 0, :instruction float_mult} {:close 0, :instruction in1} {:close 0, :instruction integer_max} {:close 0, :instruction exec_when})
Best program: (boolean_stackdepth 1.0 float_cos float_yankdup boolean_empty in2 integer_dup integer_min integer_dup_items float_dup 2.0 in2 integer_yankdup float_add float_frominteger 2.0 in1 float_min in2 float_empty integer_fromfloat float_sub exec_while (boolean_yank exec_if (integer_fromboolean) (tag_float_635 integer_mult integer_flush in2 float_floor in3 float_cos exec_do*count (boolean_dup_items exec_do*times (float_rot integer_stackdepth integer_gt in1) float_sin boolean_dup_times 2.0 2.0 exec_rot () () (float_ceiling integer_sub boolean_flush exec_y (exec_y (in2) float_min integer_div integer_div in1 in1 integer_dup in1 exec_while () 1.0) float_fromboolean)) exec_when (0.0 in1 integer_mult) 0.0) integer_sub 1.0 float_min boolean_eq) float_max in3 integer_swap float_inc 0.0 boolean_deepdup float_tan float_dup_items integer_dup integer_fromboolean float_dup in3 in2 float_stackdepth boolean_yankdup boolean_stackdepth integer_flush in1 exec_y (boolean_frominteger float_add) in3 float_log2 float_arcsin boolean_eq boolean_xor boolean_invert_second_then_and boolean_stackdepth 1.0 exec_stackdepth float_shove in1 exec_flush float_min boolean_frominteger in3 boolean_pop in2 exec_s (boolean_invert_second_then_and exec_do*while (boolean_empty float_sqrt exec_eq) exec_dup (float_arcsin) float_gt integer_deepdup in3) (in3 boolean_empty exec_do*while (float_arccos in2) float_dec boolean_flush float_inc) (integer_pop exec_while (integer_fromfloat exec_noop) integer_dup_items) float_gte exec_noop integer_eq boolean_invert_first_then_and float_min float_div boolean_yankdup exec_noop integer_negate exec_empty in3 float_sub float_shove in1 boolean_eq 2.0 integer_rot float_flush exec_yank tagged_239 in1 boolean_and integer_flush float_div float_mod in1 float_ceiling boolean_invert_second_then_and float_mult 2.0 1.0 in2 in2 integer_empty integer_deepdup in3 in3 integer_dup float_frominteger in1 integer_lt float_empty float_log2 float_tan float_log10 float_tan float_deepdup integer_abs boolean_not integer_dup in3 boolean_swap float_mult in1 integer_max exec_when ())
Errors: [14.606 6.463 58.122 76.351 17.617 7.696 70.099 30.993 13.335 12.196 12.103 59.287 85.044 4.013 14.465 68.628 63.49 45.869 106.359 10.103 20.371 18.597 17.788 49.288 53.974 69.574 29.479 5.08 38.298 8.828 21.385 68.861 31.394 3.57 35.507 43.078 50.885 13.867 46.182 40.854 17.026 40.568 123.853 15.836 63.715 570.474 260.714 5.514 53.678 209.213 76.187 450.693 41.761 68.879 37.675 32.244 37.639 9.978 24.57 38.822 94.491 3395.443 126.294 67.558 11.556 1252.122 7.141 56.316 32.844 15.637 12.234 311.318 349.084 796.89 18.645 42.295 19.467 213.33 29.755 12.778 38.13 17.404 11.019 47.557 28.304 803.923 20.965 22.525 180.057 34.111 15.022 30.368 16.579 25.292 5.655 25.913 7.425 25.908 38.631 733.593 21.389 55.445 8.094 233.583 37.34 14.806 104.766 78.643 31.481 526.135 4.063 13.486 24.305 435.316 10.409 42.047 61.244 118.687 57.674 7.557 56.565 34.124 218.688 28.126 114.948 112.458 124.602 13.1 214.279 41.609 37.035 173.491 240.849 61.466 3.151 40.616 22.747 16.826 63.727 126.197 23.92 39.815 27.337 3.403 10.556 47.146 304.127 34.634 31.246 65.351 191.981 103.777 8.29 34.616 5.913 5.431 20.963 38.163 18.383 19.228 19.504 413.658 79.039 43.042 21.271 221.523 806.926 50.247 777.679 6.303 61.333 8.023 25.79 32.484 13.381 13.086 360.643 4.816 41.185 10.302 25.756 27.349 7.302 5.942 10.129 25.82 61.297 4.692 6.094 13.351 70.072 88.905 66.86 29.814 8.72 77.043 31.556 6.798 34.515 15.464]
Total: 20909.38500000001
Mean: 104.54693
Genome size: 188
Size: 210
Percent parens: 0.105
Age: 6
--- Population Statistics ---
Average total errors in population: 4.48406838755305E12
Median total errors in population: 42570.837999999996
Error averages by case: (1.900003539722241E10 1.800002107501531E10 2.6444003313159225E10 2.68652969867584E10 2.2146920707308285E10 1.8000022072569942E10 2.3020263735241707E10 2.3000023156093422E10 2.1114284330216774E10 2.2213168834036606E10 2.000002254147349E10 2.0000287228847157E10 3.5000018437204834E10 1.700006210941995E10 2.2000064187289085E10 2.003015205117214E10 2.200002261095194E10 2.300002271259909E10 1.9938098876344448E10 2.3000021378195534E10 2.0016688627027363E10 2.100033815791507E10 2.2467469812040382E10 2.3000022875619694E10 2.1002183672235054E10 2.7015943055478046E10 2.200150002971393E10 1.4000022039470383E10 2.2936753316375156E10 2.014341261691782E10 2.1000022528037003E10 3.0000020356092346E10 1.9807330340572365E10 1.4000021568009216E10 2.0000074119925175E10 3.3146286561412075E10 3.4000020053903137E10 2.0000022353709805E10 2.300002450446119E10 2.500002330159879E10 2.1025959924574013E10 2.252444237950147E10 2.849017548395817E10 2.3001499256934357E10 2.2351900806084934E10 2.0913025298125534E10 2.3000064837318375E10 1.700002317262363E10 2.0254479503286743E10 2.2144414396557846E10 2.7024752321164352E10 2.100002173598595E10 2.2960893788661392E10 2.6196359244566643E10 2.500541275316384E10 2.30000244605663E10 2.5000035142092457E10 1.561154334706787E10 2.0000025143722935E10 2.4000022813778393E10 2.045453220487281E10 2.3000027886301304E10 2.1000502084691563E10 2.504765463188186E10 2.400066330494437E10 2.3000025554112762E10 1.8000022552945446E10 2.3010327650073624E10 2.0025963470077538E10 2.4000032420477436E10 2.0000326350897533E10 2.238561143349299E10 2.3000064691764515E10 2.50019072111855E10 2.0000022235393005E10 2.63486791790499E10 2.252608908427695E10 2.100002178285896E10 2.0025959667138412E10 1.8365904880044914E10 2.0002227957971333E10 2.9000862569660458E10 2.100002082446044E10 2.271650055138439E10 2.100149913934941E10 2.3000025182091274E10 2.7000021147670704E10 2.100006417825257E10 2.100003918849421E10 2.0000022363049522E10 1.9000026250513256E10 2.3000020182105885E10 2.500002250141318E10 2.8157038249459927E10 1.6000022046847197E10 2.9261026314042503E10 1.7000082823193377E10 2.400002241536096E10 3.4000018246503605E10 2.1000025285211437E10 2.2000022785203518E10 2.367548834390569E10 2.300149936823189E10 2.3668619439072136E10 1.988793663813157E10 2.200002193059709E10 2.0845285051240593E10 2.1025959889550602E10 2.000002139948654E10 2.100002188120368E10 2.4303249828069153E10 1.7055889221144135E10 2.7519312623936672E10 2.100002284613513E10 1.9000234096515736E10 2.1000025196289818E10 1.6000165963634695E10 2.7444248980775562E10 2.2079649758837536E10 1.800002216480761E10 2.3000045618703968E10 2.2000024382577408E10 2.3339472580390457E10 3.1429305440821423E10 2.1000024612292343E10 2.9228656706580143E10 2.000002127521299E10 2.3002255599132584E10 2.3830606491303665E10 2.017162652274886E10 2.1000021586645126E10 2.0000024819297062E10 2.500002435964381E10 2.04450505464631E10 2.2614046828749584E10 1.926068624944678E10 2.000012889209691E10 2.138639641705309E10 2.5001617832133472E10 2.8112914193240356E10 2.400002013290121E10 2.4000020546910362E10 2.0000024190492496E10 2.00848399991011E10 2.4027447778209644E10 1.933472320561734E10 2.100002186396689E10 2.0001510862592934E10 2.8000028160607857E10 2.7920153088917503E10 2.200002297486033E10 2.4000024547677322E10 1.7000166091991444E10 2.000002130873057E10 2.020694864365627E10 1.8157096695101875E10 2.0023768464539932E10 2.000002130642807E10 2.3003315783758606E10 2.2001499918338203E10 2.168040506009579E10 2.100002294312122E10 2.2001500031136414E10 2.3000057903881493E10 1.769983976994287E10 2.100002454171711E10 2.5000024263776676E10 2.4000221125096813E10 2.115281143551852E10 2.4000021846550247E10 2.8053653553756653E10 2.300072560692078E10 3.3691267616685993E10 2.305798663143367E10 2.1000027575431442E10 2.06039912340539E10 2.1000023076074062E10 2.1000245528973816E10 2.2000022617639343E10 2.4799673464410408E10 2.1908883854485355E10 2.5596706037849037E10 1.5257148665322756E10 2.2968425063537846E10 2.000598284673998E10 2.2012350483091644E10 2.2000042828075695E10 2.60000710856265E10 2.0004314768889137E10 2.1636784593745667E10 3.5000018426949196E10 2.2269941697655636E10 2.3940044302870857E10 2.2226662673072018E10 1.8000024088848175E10 2.200150204723705E10 2.100002392420749E10 2.4000023577693794E10 2.31322698834695E10 2.3122303816878815E10)
Error minima by case: (0.144 0.019 0.0 0.0 0.0 0.047 0.465 0.938 0.0 0.0 0.085 0.176 0.087 0.135 0.216 0.447 1.722 0.072 2.142 0.174 0.15 0.49 1.034 0.58 1.286 0.0 0.081 0.0 0.241 0.012 2.529 0.013 0.528 0.014 0.139 0.076 1.146 0.278 0.121 0.033 0.095 0.266 0.0 0.17 0.469 3.214 2.354 0.022 1.961 9.244 0.0 1.944 0.086 0.0 3.075 0.195 0.097 0.202 0.159 0.053 0.075 0.38 1.015 0.005 0.397 43.271 0.01 0.558 1.903 0.156 0.457 4.283 11.439 2.172 0.032 0.0 0.023 2.105 0.129 0.171 2.389 0.04 0.033 14.628 0.066 3.719 0.413 0.03 6.638 0.05 0.023 0.813 0.055 0.0 0.0 0.202 0.027 0.171 0.055 0.297 6.891 3.428 6.438 24.767 0.607 0.34 8.147 1.905 0.177 9.038 0.073 0.076 0.099 5.31 0.116 0.052 0.532 0.0 0.022 0.003 1.557 0.209 14.47 0.154 0.641 0.0 0.761 0.119 6.991 0.127 0.939 2.929 1.781 0.432 0.041 0.499 0.148 0.271 0.148 0.0 0.246 1.677 0.025 0.071 0.199 0.314 3.847 0.004 0.0 0.0 12.606 1.298 0.122 0.386 0.039 0.032 0.003 0.006 0.0 0.022 0.018 10.173 3.67 0.163 0.005 8.417 4.077 1.018 8.803 3.519 0.043 0.1 0.004 0.056 0.479 0.304 5.838 0.491 0.299 0.083 0.167 0.334 0.005 0.001 0.022 0.079 1.485 0.664 0.029 0.0 1.391 2.236 0.315 0.088 0.063 0.404 0.924 2.691 0.951 0.023)
Average genome size in population (length): 173.904
Average program size in population (points): 203.854
Average percent parens in population: 0.144
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.618
Error (vector) diversity:			 0.618
Behavioral diversity:				 0.628
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 7000
Number of program executions (running on a single case counts as 1 execution): 1400000
Number of point (instruction) evaluations so far: 973556692
--- Timings ---
Current time: 1745362788622 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Bouncing Balls problem report - generation 7
Test total error for best: 206091.79200000034
Test mean error for best: 103.04590
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 117.042
Correct output: 12.371 | Program output: 16.673
Correct output: 73.158 | Program output: 28.021
Correct output: 107.414 | Program output: 37.135
Correct output: 66.004 | Program output: 7.768
Correct output: 18.351 | Program output: 24.426
Correct output: 203.233 | Program output: 271.171
Correct output: 168.282 | Program output: 135.128
Correct output: 22.792 | Program output: 5.627
Correct output: 101.076 | Program output: 5.058
Correct output: 89.438 | Program output: 99.380
Correct output: 167.016 | Program output: 224.142
Correct output: 249.241 | Program output: 333.204
Correct output: 17.252 | Program output: 9.948
Correct output: 78.298 | Program output: 90.602
Correct output: 192.343 | Program output: 258.810
Correct output: 325.936 | Program output: 260.285
Correct output: 137.403 | Program output: 181.111
Correct output: 159.858 | Program output: 51.338
Correct output: 43.816 | Program output: 51.758
Correct output: 46.214 | Program output: 64.424
Correct output: 41.847 | Program output: 58.283
Correct output: 111.620 | Program output: 91.671
Correct output: 136.088 | Program output: 183.214
Correct output: 180.744 | Program output: 232.556
Correct output: 77.511 | Program output: 33.747
Correct output: 79.636 | Program output: 106.953
Correct output: 2.001 | Program output: 1.000
Correct output: 114.432 | Program output: 150.569
Correct output: 19.059 | Program output: 3.379
Correct output: 290.212 | Program output: 309.435
Correct output: 197.499 | Program output: 44.488
Correct output: 64.127 | Program output: 30.572
Correct output: 8.284 | Program output: 8.431
Correct output: 203.329 | Program output: 165.660
Correct output: 104.522 | Program output: 146.520
Correct output: 124.531 | Program output: 174.336
Correct output: 125.101 | Program output: 109.073
Correct output: 133.674 | Program output: 177.694
Correct output: 112.074 | Program output: 151.307
Correct output: 308.094 | Program output: 322.960
Correct output: 106.842 | Program output: 145.249
Correct output: 144.377 | Program output: 60.886
Correct output: 296.288 | Program output: 309.963
Correct output: 205.797 | Program output: 267.351
Correct output: 985.735 | Program output: 413.100
Correct output: 680.660 | Program output: 417.785
Correct output: 32.170 | Program output: 24.494
Correct output: 343.239 | Program output: 287.400
Correct output: 584.598 | Program output: 373.224
Correct output: 97.620 | Program output: 37.053
Correct output: 712.538 | Program output: 259.684
Correct output: 123.589 | Program output: 163.189
Correct output: 69.710 | Program output: 33.399
Correct output: 250.818 | Program output: 210.981
Correct output: 120.502 | Program output: 150.584
Correct output: 137.940 | Program output: 173.418
Correct output: 64.091 | Program output: 51.951
Correct output: 65.119 | Program output: 87.527
Correct output: 335.947 | Program output: 372.607
Correct output: 475.105 | Program output: 378.452
Correct output: 3999.600 | Program output: 601.995
Correct output: 279.985 | Program output: 151.530
Correct output: 201.372 | Program output: 267.309
Correct output: 189.382 | Program output: 198.776
Correct output: 1543.271 | Program output: 288.987
Correct output: 102.020 | Program output: 107.000
Correct output: 193.877 | Program output: 248.032
Correct output: 128.350 | Program output: 159.032
Correct output: 53.143 | Program output: 66.618
Correct output: 181.602 | Program output: 191.675
Correct output: 431.170 | Program output: 117.691
Correct output: 619.098 | Program output: 267.853
Correct output: 986.172 | Program output: 187.120
Correct output: 77.831 | Program output: 94.315
Correct output: 55.900 | Program output: 20.107
Correct output: 54.583 | Program output: 71.889
Correct output: 622.783 | Program output: 407.292
Correct output: 83.177 | Program output: 110.770
Correct output: 42.501 | Program output: 53.118
Correct output: 184.764 | Program output: 220.733
Correct output: 67.665 | Program output: 83.989
Correct output: 19.670 | Program output: 28.527
Correct output: 464.533 | Program output: 414.814
Correct output: 106.459 | Program output: 132.601
Correct output: 1108.353 | Program output: 302.268
Correct output: 56.702 | Program output: 13.723
Correct output: 53.970 | Program output: 74.334
Correct output: 259.503 | Program output: 77.285
Correct output: 101.480 | Program output: 133.430
Correct output: 56.812 | Program output: 69.673
Correct output: 75.112 | Program output: 103.318
Correct output: 104.689 | Program output: 119.107
Correct output: 27.529 | Program output: 11.606
Correct output: 3.963 | Program output: 1.787
Correct output: 83.268 | Program output: 108.101
Correct output: 11.973 | Program output: 17.778
Correct output: 76.197 | Program output: 99.944
Correct output: 99.025 | Program output: 136.576
Correct output: 1219.703 | Program output: 483.948
Correct output: 396.400 | Program output: 372.850
Correct output: 125.727 | Program output: 68.121
Correct output: 371.001 | Program output: 376.934
Correct output: 738.413 | Program output: 502.669
Correct output: 280.393 | Program output: 240.892
Correct output: 37.145 | Program output: 49.790
Correct output: 425.982 | Program output: 319.055
Correct output: 357.821 | Program output: 277.018
Correct output: 120.482 | Program output: 149.802
Correct output: 845.157 | Program output: 316.861
Correct output: 68.073 | Program output: 70.515
Correct output: 27.389 | Program output: 38.714
Correct output: 95.616 | Program output: 11.558
Correct output: 747.315 | Program output: 309.838
Correct output: 22.311 | Program output: 5.222
Correct output: 116.926 | Program output: 156.812
Correct output: 111.460 | Program output: 48.055
Correct output: 122.996 | Program output: 58.303
Correct output: 185.091 | Program output: 240.604
Correct output: 12.422 | Program output: 17.817
Correct output: 151.265 | Program output: 205.669
Correct output: 87.691 | Program output: 119.653
Correct output: 705.021 | Program output: 484.172
Correct output: 65.326 | Program output: 92.372
Correct output: 473.339 | Program output: 356.230
Correct output: 147.045 | Program output: 55.189
Correct output: 220.192 | Program output: 93.429
Correct output: 25.498 | Program output: 36.437
Correct output: 464.800 | Program output: 248.359
Correct output: 223.405 | Program output: 262.853
Correct output: 391.079 | Program output: 351.882
Correct output: 293.758 | Program output: 118.106
Correct output: 335.272 | Program output: 92.262
Correct output: 225.803 | Program output: 285.109
Correct output: 153.545 | Program output: 148.232
Correct output: 106.271 | Program output: 144.725
Correct output: 164.365 | Program output: 184.951
Correct output: 184.316 | Program output: 198.981
Correct output: 182.005 | Program output: 243.571
Correct output: 124.203 | Program output: 62.058
Correct output: 66.716 | Program output: 88.474
Correct output: 306.042 | Program output: 343.696
Correct output: 68.394 | Program output: 93.569
Correct output: 139.929 | Program output: 134.364
Correct output: 226.230 | Program output: 234.625
Correct output: 129.442 | Program output: 174.427
Correct output: 723.847 | Program output: 417.558
Correct output: 182.792 | Program output: 215.265
Correct output: 39.803 | Program output: 14.583
Correct output: 128.192 | Program output: 31.635
Correct output: 624.606 | Program output: 430.463
Correct output: 397.298 | Program output: 291.360
Correct output: 12.690 | Program output: 18.818
Correct output: 100.386 | Program output: 132.841
Correct output: 7.550 | Program output: 12.382
Correct output: 30.019 | Program output: 33.289
Correct output: 48.697 | Program output: 67.499
Correct output: 101.830 | Program output: 137.832
Correct output: 54.972 | Program output: 8.151
Correct output: 55.501 | Program output: 72.568
Correct output: 46.143 | Program output: 63.485
Correct output: 808.426 | Program output: 392.607
Correct output: 178.068 | Program output: 96.867
Correct output: 207.417 | Program output: 162.214
Correct output: 93.518 | Program output: 112.628
Correct output: 490.815 | Program output: 267.131
Correct output: 1247.817 | Program output: 438.730
Correct output: 160.740 | Program output: 208.826
Correct output: 1006.197 | Program output: 226.356
Correct output: 385.498 | Program output: 389.640
Correct output: 226.865 | Program output: 56.705
Correct output: 44.815 | Program output: 2.554
Correct output: 139.446 | Program output: 164.155
Correct output: 98.158 | Program output: 63.513
Correct output: 134.416 | Program output: 145.636
Correct output: 57.911 | Program output: 68.836
Correct output: 838.313 | Program output: 475.508
Correct output: 192.012 | Program output: 185.035
Correct output: 241.040 | Program output: 280.064
Correct output: 52.438 | Program output: 60.579
Correct output: 63.745 | Program output: 87.340
Correct output: 276.361 | Program output: 301.549
Correct output: 9.005 | Program output: 14.146
Correct output: 28.509 | Program output: 33.370
Correct output: 26.238 | Program output: 34.206
Correct output: 64.284 | Program output: 88.483
Correct output: 397.628 | Program output: 334.169
Correct output: 161.133 | Program output: 164.204
Correct output: 54.111 | Program output: 58.045
Correct output: 20.954 | Program output: 5.635
Correct output: 279.470 | Program output: 348.461
Correct output: 235.457 | Program output: 144.391
Correct output: 337.121 | Program output: 268.099
Correct output: 141.508 | Program output: 169.161
Correct output: 18.824 | Program output: 25.383
Correct output: 216.404 | Program output: 137.200
Correct output: 120.372 | Program output: 149.767
Correct output: 354.574 | Program output: 345.615
Correct output: 86.713 | Program output: 119.067
Correct output: 37.202 | Program output: 8.415
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 39 38 40 1 1 2 41 40 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 39 1 44 1 2 1 1 1 1 2 1 1 1 1 1 1 1 39 1 1 1 1 1 1 1 39 1 1 39 1 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 1 1 1 40 1 1 1 2 1 2 1 1 4 1 1 1 1 1 2 1 1 40 40 1 4 3 1 1 1 1 1 1 1 1 1 1 4 1 2 5 1 1 1 1 2 39 1 3 1 1 1 1 1 40 1 1 2 1 1 1 3 1 1 2 1 1 1 40 1 2 1 1 1 1 1 1 39 38 1 1 1 1 1 1 1 1 40 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 40 1 1 2 1 4 1 1 1 1 1)
Population mean number of elite cases: 1.02
Count of perfect (error zero) individuals by case: (0 0 39 38 40 0 0 0 41 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 0 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 0 0 0 0 0 0 0 39 0 0 39 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 39 38 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction float_yankdup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction float_dup_times} {:close 0, :instruction float_yankdup} {:close 1, :instruction integer_pow} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_frominteger} {:close 0, :instruction 2.0} {:close 1, :instruction float_lte} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction float_arcsin} {:close 0, :instruction in1} {:close 0, :instruction float_sub} {:close 0, :instruction exec_while} {:close 0, :instruction float_gt} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction float_sqrt} {:close 0, :instruction float_arctan} {:close 0, :instruction tag_float_635} {:close 0, :instruction in2} {:close 0, :instruction float_floor} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction exec_y} {:close 0, :instruction integer_pow} {:close 0, :instruction in2} {:close 0, :instruction tagged_251} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_log10} {:close 0, :instruction float_gt} {:close 1, :instruction in1} {:close 0, :instruction integer_dup} {:close 0, :instruction in2} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction float_frominteger} {:close 0, :instruction float_rot} {:close 0, :instruction integer_rot} {:close 0, :instruction float_sin} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 0, :instruction 2.0} {:close 0, :instruction integer_add} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 0, :instruction integer_div} {:close 1, :instruction float_ceiling} {:close 1, :instruction tag_float_824} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction in1} {:close 1, :instruction 0.0} {:close 1, :instruction exec_while} {:close 2, :instruction float_fromboolean} {:close 0, :instruction float_sqrt} {:close 0, :instruction float_min} {:close 2, :instruction float_max} {:close 1, :instruction integer_swap} {:close 0, :instruction boolean_deepdup} {:close 1, :instruction integer_lt} {:close 0, :instruction float_sqrt} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction float_dup} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction in2} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_rot} {:close 0, :instruction 2.0} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_rot} {:close 0, :instruction float_empty} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction exec_do*range} {:close 0, :instruction in3} {:close 0, :instruction float_log2} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_dec} {:close 1, :instruction float_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_xor} {:close 0, :instruction float_cos} {:close 0, :instruction 1.0} {:close 1, :instruction boolean_xor} {:close 0, :instruction in1} {:close 0, :instruction float_pow} {:close 0, :instruction float_min} {:close 0, :instruction exec_when} {:close 0, :instruction float_floor} {:close 1, :instruction in2} {:close 0, :instruction 1.0} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_do*while} {:close 1, :instruction in2} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_empty} {:close 1, :instruction float_empty} {:close 0, :instruction float_sqrt} {:close 0, :instruction exec_dup} {:close 0, :instruction float_div} {:close 0, :instruction float_gt} {:close 0, :instruction float_sqrt} {:close 0, :instruction in1} {:close 0, :instruction integer_deepdup} {:close 0, :instruction exec_flush} {:close 0, :instruction float_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction integer_fromfloat} {:close 0, :instruction float_arccos} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction float_dec} {:close 0, :instruction in1} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_times} {:close 1, :instruction float_inc} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 0, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction integer_fromfloat} {:close 1, :instruction float_dec} {:close 1, :instruction float_gte} {:close 0, :instruction integer_eq} {:close 0, :instruction float_min} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_shove} {:close 0, :instruction in2} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_empty} {:close 0, :instruction float_dec} {:close 0, :instruction 2.0} {:close 0, :instruction in3} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_gt} {:close 0, :instruction integer_gt} {:close 1, :instruction float_log2} {:close 0, :instruction tagged_258} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction tag_float_118} {:close 0, :instruction float_arccos} {:close 1, :instruction in3} {:close 1, :instruction 0.0} {:close 0, :instruction in1} {:close 1, :instruction float_div} {:close 0, :instruction boolean_pop} {:close 0, :instruction float_ceiling} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction 1.0} {:close 0, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction float_gte} {:close 0, :instruction in3} {:close 0, :instruction integer_dup} {:close 1, :instruction float_frominteger} {:close 0, :instruction exec_do*count} {:close 0, :instruction in1} {:close 1, :instruction integer_lt} {:close 0, :instruction float_empty} {:close 0, :instruction integer_pow} {:close 1, :instruction float_deepdup} {:close 1, :instruction integer_abs} {:close 1, :instruction exec_shove} {:close 1, :instruction boolean_not} {:close 0, :instruction 2.0} {:close 0, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction float_sin} {:close 0, :instruction in1} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction tagged_385} {:close 0, :instruction exec_when} {:close 1, :instruction 1.0})
Best program: (float_yankdup boolean_stackdepth float_dup_times float_yankdup integer_pow in1 in2 in2 integer_dup_items exec_do*while (in3 in2 boolean_stackdepth) integer_yankdup integer_abs float_add float_frominteger 2.0 float_lte in1 boolean_dup in2 integer_fromfloat float_arcsin in1 float_sub exec_while (float_gt integer_rot exec_if (float_sqrt float_arctan tag_float_635 in2 float_floor integer_fromfloat exec_y (integer_pow in2 tagged_251 in3 exec_do*count (float_log10 float_gt in1) integer_dup in2 integer_gt boolean_frominteger exec_do*times (boolean_dup_items float_frominteger float_rot integer_rot float_sin integer_dec boolean_dup 2.0 integer_add integer_sub exec_y (exec_y (in2) in2) float_min integer_div float_ceiling) tag_float_824) in1 in1 in1 boolean_shove exec_swap (exec_yankdup integer_dup in1 0.0) (exec_while () float_fromboolean)) (float_sqrt float_min float_max)) integer_swap boolean_deepdup integer_lt float_sqrt integer_dup integer_fromboolean float_dup in3 in2 float_stackdepth in2 exec_do*count (integer_rot 2.0 float_stackdepth exec_y (boolean_rot float_empty boolean_empty boolean_frominteger float_add) float_square exec_do*range (in3 float_log2 boolean_not integer_dec float_dup_times) boolean_eq boolean_xor float_cos 1.0 boolean_xor) in1 float_pow float_min exec_when (float_floor in2) 1.0 integer_swap boolean_empty exec_dup_items boolean_invert_second_then_and exec_do*while (in2) exec_while (boolean_empty float_empty float_empty) float_sqrt exec_dup (float_div float_gt float_sqrt in1 integer_deepdup exec_flush float_stackdepth in1 integer_fromfloat) float_arccos in2 in3 float_dec in1 boolean_flush exec_dup_times () float_inc integer_pop exec_while (in3 in3 integer_fromfloat float_dec) float_gte integer_eq float_min exec_noop integer_shove in2 integer_negate exec_empty float_dec 2.0 in3 exec_yank integer_gt integer_gt float_log2 tagged_258 boolean_fromfloat tag_float_118 float_arccos in3 0.0 in1 float_div boolean_pop float_ceiling boolean_invert_second_then_and float_mult 1.0 in2 in2 float_gte in3 integer_dup float_frominteger exec_do*count (in1 integer_lt) float_empty integer_pow float_deepdup integer_abs exec_shove () boolean_not 2.0 integer_yankdup in3 boolean_swap exec_swap (float_sin in1 integer_max boolean_deepdup exec_do*count (tagged_385 exec_when (1.0))) ())
Errors: [12.445 4.302 45.137 70.279 58.236 6.075 67.938 33.154 17.165 96.018 9.942 57.126 83.964 7.304 12.304 66.467 65.651 43.708 108.52 7.942 18.21 16.436 19.949 47.126 51.812 43.764 27.317 1.001 36.137 15.68 19.223 153.011 33.555 0.147 37.669 41.998 49.805 16.029 44.021 39.233 14.865 38.407 83.491 13.675 61.554 572.635 262.876 7.676 55.839 211.374 60.567 452.854 39.599 36.311 39.836 30.083 35.478 12.139 22.408 36.661 96.652 3397.605 128.455 65.938 9.395 1254.284 4.98 54.155 30.682 13.476 10.073 313.479 351.245 799.052 16.484 35.793 17.305 215.491 27.594 10.617 35.969 16.324 8.858 49.719 26.142 806.085 42.98 20.364 182.218 31.95 12.861 28.207 14.418 15.923 2.176 24.833 5.804 23.747 37.551 735.754 23.551 57.607 5.933 235.744 39.501 12.645 106.927 80.804 29.32 528.297 2.442 11.325 84.058 437.477 17.089 39.886 63.405 64.693 55.513 5.396 54.404 31.962 220.849 27.046 117.109 91.856 126.763 10.939 216.44 39.448 39.197 175.652 243.01 59.305 5.312 38.455 20.586 14.665 61.566 62.145 21.759 37.654 25.175 5.564 8.395 44.985 306.289 32.473 25.221 96.556 194.143 105.938 6.129 32.455 4.832 3.27 18.802 36.002 46.821 17.067 17.342 415.819 81.2 45.203 19.11 223.684 809.087 48.086 779.841 4.142 170.16 42.261 24.709 34.645 11.22 10.925 362.804 6.977 39.024 8.141 23.595 25.188 5.141 4.861 7.968 24.199 63.459 3.071 3.933 15.319 68.991 91.067 69.022 27.653 6.559 79.204 29.394 8.959 32.354 28.788]
Total: 21049.723000000016
Mean: 105.24861
Genome size: 213
Size: 241
Percent parens: 0.116
Age: 7
--- Population Statistics ---
Average total errors in population: 4.257832419371697E12
Median total errors in population: 42861.86499999999
Error averages by case: (1.9010314688465458E10 1.840830062725551E10 2.3022999935941685E10 2.4467035556759563E10 2.1017270053020836E10 1.9154984907182995E10 1.9070953297722515E10 2.105909508857725E10 2.10616848008639E10 2.001049113367883E10 1.7028113157552362E10 2.0025440586585052E10 2.9000023388898563E10 1.5696855813277943E10 2.004095558609861E10 2.201291387481575E10 2.3583481701615734E10 2.0022753725930172E10 1.9770766047018013E10 1.7057970243305836E10 1.9077991313640472E10 1.7142021432001724E10 1.9050070510505188E10 2.1024193209897728E10 2.243926572912452E10 2.506611683411099E10 1.803981472508815E10 1.8332249282125843E10 2.1020248463260292E10 1.9949563391207253E10 2.1023071945122482E10 2.502309360816669E10 1.7186036973133736E10 1.923640793149469E10 1.904891317186731E10 2.600002428462585E10 2.8000028618820053E10 1.9072516544251755E10 2.001062527765779E10 2.302827443950562E10 2.3002156646376217E10 2.0018059545550972E10 2.5012004789433136E10 1.9023186770691433E10 2.2183013671649387E10 2.400344020671969E10 2.2012240709396626E10 1.6353839678172548E10 2.2005608066718864E10 2.2013526708482937E10 2.444428362180857E10 2.2036183901550823E10 1.90179763396764E10 2.4061546932862114E10 2.10373224854241E10 1.7026281842327349E10 2.201877957977672E10 1.814911564935238E10 2.2780226341759712E10 2.301863376604469E10 2.2002096952679615E10 2.30162126256897E10 2.206369891635874E10 2.416486726423455E10 1.9021748744809616E10 2.303329573781027E10 2.1019830296311863E10 2.005551052948847E10 2.00109832452693E10 2.0022712896848522E10 2.1038039225100616E10 1.9049900612426018E10 2.1021232758320545E10 2.403787408518266E10 1.9069781805177876E10 2.402796893386083E10 1.904336006234939E10 2.3020446489257095E10 2.2006785973595066E10 1.901795861501688E10 2.0036112202763077E10 2.60004900211889E10 2.1082515745616432E10 2.2010513384537346E10 1.802693437787241E10 2.30308949501738E10 2.409172329302152E10 2.0035809747563168E10 2.1839534855798332E10 2.0030108337605404E10 1.804751524147202E10 2.1024815041077744E10 2.2031269063699512E10 2.3062830945035988E10 1.745958485223955E10 2.500007952939577E10 1.8244506332105145E10 2.2017543550119125E10 2.800002323967984E10 2.3733690616954205E10 2.2671316329213192E10 2.012852407700242E10 2.0019342905462406E10 2.301505155822274E10 2.0395633781584305E10 1.807935664777414E10 2.1840313548407482E10 2.2006761484475975E10 2.0023530943557644E10 2.3029436084461918E10 2.125947703882479E10 1.9832658270604744E10 2.403466126577277E10 2.0030880711126446E10 2.020979696632043E10 2.203636636947509E10 2.0081267960309513E10 2.5015484165475056E10 2.002309202539845E10 1.634649011281858E10 2.101234356380678E10 2.1044729008248245E10 2.301476207605194E10 2.7160501681936844E10 2.373749195660767E10 2.501091505745292E10 2.0099477898680782E10 2.0066220294845245E10 2.2865552281820595E10 1.9540167289612167E10 2.4021527845626175E10 2.1792780118594128E10 1.9064964467516403E10 2.2071504456031387E10 2.1030873351121056E10 2.101477470532392E10 2.375231281894321E10 1.802116638161488E10 2.3016087160829617E10 2.5016117852294147E10 2.1034929293856262E10 2.3011688962548985E10 2.1763172625990402E10 2.2021421422568237E10 1.9099180765192924E10 2.200156165849104E10 2.3020522578387623E10 2.2750105657067383E10 2.5039677263302788E10 2.3020391345851437E10 2.4570465648682E10 2.3016094722607494E10 1.628077395171539E10 2.0030657362324432E10 2.5000022035916897E10 1.6128480182729298E10 1.9038488231068447E10 2.003205886185698E10 2.2021627830872005E10 1.7084036113876503E10 1.9043535606408955E10 2.2023577790766994E10 1.909024650684046E10 1.802853572359398E10 1.909335627065984E10 2.2747396172049877E10 2.2012871049375324E10 2.0015099449839123E10 2.2096731281813053E10 2.201875374147699E10 2.4028725859614864E10 2.1063563777651913E10 2.600018812033851E10 2.007946427512914E10 2.1050066724364582E10 2.001951702942874E10 2.0018787753971394E10 2.250615458239365E10 2.4427548622076946E10 1.802085078497173E10 2.00240180176714E10 2.40125965738309E10 1.620147182182062E10 2.600046303329604E10 1.719385286377165E10 2.205098313589134E10 2.3024732254646545E10 2.204931870845175E10 2.112901914440147E10 2.138730294164493E10 3.100002338115793E10 2.104203618345277E10 2.201701384996143E10 2.0020701753273018E10 1.8854473468848186E10 1.6061712691820293E10 2.0764578885470615E10 2.2011911500444542E10 2.002051104991296E10 2.2120497709355637E10)
Error minima by case: (0.155 0.019 0.0 0.0 0.0 0.023 0.007 0.062 0.0 0.0 0.023 0.046 0.538 0.053 0.102 0.296 0.813 0.081 0.142 0.015 0.15 0.103 0.014 1.197 1.256 0.0 0.231 0.0 0.27 0.012 0.714 0.013 0.832 0.004 0.053 0.43 1.194 0.101 0.226 0.034 0.025 0.248 0.0 0.352 0.469 0.778 1.568 0.01 0.352 6.352 0.0 2.654 0.421 0.0 3.469 0.126 0.403 0.236 0.119 3.034 2.147 0.38 1.511 0.027 0.346 3.271 0.01 0.178 0.164 0.039 0.457 2.066 4.711 2.172 0.409 0.0 0.057 1.331 0.129 0.171 0.803 0.04 0.005 8.288 0.076 2.719 0.089 0.03 2.497 0.05 0.023 0.033 0.268 0.0 0.0 0.107 0.027 0.171 0.055 6.48 0.338 0.204 0.937 9.001 0.09 0.235 4.32 0.347 0.177 9.199 0.073 0.076 0.107 5.975 0.005 0.061 2.054 0.0 0.371 0.003 0.735 0.071 14.872 0.445 14.876 0.0 0.761 0.03 0.2 0.127 2.073 1.465 2.728 0.787 0.977 1.374 0.588 0.271 0.117 0.0 0.254 1.677 0.041 1.078 0.206 0.094 6.743 0.004 0.0 0.0 5.394 3.858 0.047 0.054 0.097 0.032 0.003 0.006 0.0 0.01 0.019 10.173 1.408 0.867 0.024 6.185 2.959 0.74 30.701 0.242 0.453 0.033 0.004 0.105 0.799 0.339 13.942 0.27 0.005 0.083 0.151 1.639 0.045 0.041 0.022 0.086 6.853 1.071 0.013 0.0 0.158 2.114 1.306 0.44 0.063 0.547 0.924 0.691 0.397 0.067)
Average genome size in population (length): 186.221
Average program size in population (points): 217.562
Average percent parens in population: 0.141
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.653
Error (vector) diversity:			 0.653
Behavioral diversity:				 0.66
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 8000
Number of program executions (running on a single case counts as 1 execution): 1600000
Number of point (instruction) evaluations so far: 1173661073
--- Timings ---
Current time: 1745363148899 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Bouncing Balls problem report - generation 8
Test total error for best: 188304.1080000001
Test mean error for best: 94.15205
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 27.007
Correct output: 12.371 | Program output: 16.561
Correct output: 73.158 | Program output: 198.146
Correct output: 107.414 | Program output: 261.945
Correct output: 66.004 | Program output: 56.378
Correct output: 18.351 | Program output: 12.237
Correct output: 203.233 | Program output: 241.655
Correct output: 168.282 | Program output: 147.081
Correct output: 22.792 | Program output: 41.389
Correct output: 101.076 | Program output: 37.404
Correct output: 89.438 | Program output: 20.953
Correct output: 167.016 | Program output: 197.824
Correct output: 249.241 | Program output: 334.829
Correct output: 17.252 | Program output: 11.118
Correct output: 78.298 | Program output: 91.853
Correct output: 192.343 | Program output: 225.755
Correct output: 325.936 | Program output: 283.364
Correct output: 137.403 | Program output: 113.485
Correct output: 159.858 | Program output: 59.023
Correct output: 43.816 | Program output: 16.391
Correct output: 46.214 | Program output: 52.261
Correct output: 41.847 | Program output: 43.870
Correct output: 111.620 | Program output: 99.564
Correct output: 136.088 | Program output: 127.876
Correct output: 180.744 | Program output: 219.064
Correct output: 77.511 | Program output: 238.227
Correct output: 79.636 | Program output: 70.947
Correct output: 2.001 | Program output: 9.000
Correct output: 114.432 | Program output: 140.770
Correct output: 19.059 | Program output: 25.656
Correct output: 290.212 | Program output: 321.242
Correct output: 197.499 | Program output: 313.416
Correct output: 64.127 | Program output: 34.452
Correct output: 8.284 | Program output: 9.465
Correct output: 203.329 | Program output: 181.382
Correct output: 104.522 | Program output: 131.554
Correct output: 124.531 | Program output: 147.457
Correct output: 125.101 | Program output: 118.314
Correct output: 133.674 | Program output: 115.855
Correct output: 112.074 | Program output: 105.132
Correct output: 308.094 | Program output: 335.920
Correct output: 106.842 | Program output: 124.903
Correct output: 144.377 | Program output: 428.202
Correct output: 296.288 | Program output: 322.423
Correct output: 205.797 | Program output: 252.139
Correct output: 985.735 | Program output: 473.166
Correct output: 680.660 | Program output: 469.651
Correct output: 32.170 | Program output: 27.074
Correct output: 343.239 | Program output: 311.710
Correct output: 584.598 | Program output: 418.155
Correct output: 97.620 | Program output: 261.371
Correct output: 712.538 | Program output: 300.236
Correct output: 123.589 | Program output: 149.624
Correct output: 69.710 | Program output: 235.793
Correct output: 250.818 | Program output: 228.294
Correct output: 120.502 | Program output: 72.999
Correct output: 137.940 | Program output: 167.168
Correct output: 64.091 | Program output: 57.245
Correct output: 65.119 | Program output: 79.437
Correct output: 335.947 | Program output: 380.862
Correct output: 475.105 | Program output: 413.047
Correct output: 3999.600 | Program output: 701.993
Correct output: 279.985 | Program output: 175.539
Correct output: 201.372 | Program output: 250.298
Correct output: 189.382 | Program output: 206.774
Correct output: 1543.271 | Program output: 335.438
Correct output: 102.020 | Program output: 9.000
Correct output: 193.877 | Program output: 234.839
Correct output: 128.350 | Program output: 155.005
Correct output: 53.143 | Program output: 30.745
Correct output: 181.602 | Program output: 199.291
Correct output: 431.170 | Program output: 135.894
Correct output: 619.098 | Program output: 308.234
Correct output: 986.172 | Program output: 217.679
Correct output: 77.831 | Program output: 93.727
Correct output: 55.900 | Program output: 142.750
Correct output: 54.583 | Program output: 67.535
Correct output: 622.783 | Program output: 454.217
Correct output: 83.177 | Program output: 70.750
Correct output: 42.501 | Program output: 23.445
Correct output: 184.764 | Program output: 219.274
Correct output: 67.665 | Program output: 37.662
Correct output: 19.670 | Program output: 22.124
Correct output: 464.533 | Program output: 446.664
Correct output: 106.459 | Program output: 62.822
Correct output: 1108.353 | Program output: 347.862
Correct output: 56.702 | Program output: 98.059
Correct output: 53.970 | Program output: 64.165
Correct output: 259.503 | Program output: 89.392
Correct output: 101.480 | Program output: 81.333
Correct output: 56.812 | Program output: 28.885
Correct output: 75.112 | Program output: 87.378
Correct output: 104.689 | Program output: 121.135
Correct output: 27.529 | Program output: 83.242
Correct output: 3.963 | Program output: 14.509
Correct output: 83.268 | Program output: 60.733
Correct output: 11.973 | Program output: 12.309
Correct output: 76.197 | Program output: 59.068
Correct output: 99.025 | Program output: 101.413
Correct output: 1219.703 | Program output: 554.574
Correct output: 396.400 | Program output: 396.590
Correct output: 125.727 | Program output: 76.422
Correct output: 371.001 | Program output: 394.803
Correct output: 738.413 | Program output: 578.412
Correct output: 280.393 | Program output: 260.365
Correct output: 37.145 | Program output: 29.965
Correct output: 425.982 | Program output: 354.731
Correct output: 357.821 | Program output: 303.368
Correct output: 120.482 | Program output: 70.827
Correct output: 845.157 | Program output: 365.908
Correct output: 68.073 | Program output: 77.441
Correct output: 27.389 | Program output: 28.601
Correct output: 95.616 | Program output: 82.906
Correct output: 747.315 | Program output: 359.303
Correct output: 22.311 | Program output: 38.554
Correct output: 116.926 | Program output: 140.534
Correct output: 111.460 | Program output: 54.695
Correct output: 122.996 | Program output: 410.122
Correct output: 185.091 | Program output: 223.997
Correct output: 12.422 | Program output: 16.931
Correct output: 151.265 | Program output: 172.837
Correct output: 87.691 | Program output: 102.637
Correct output: 705.021 | Program output: 556.548
Correct output: 65.326 | Program output: 77.812
Correct output: 473.339 | Program output: 390.963
Correct output: 147.045 | Program output: 388.322
Correct output: 220.192 | Program output: 107.109
Correct output: 25.498 | Program output: 29.062
Correct output: 464.800 | Program output: 279.167
Correct output: 223.405 | Program output: 263.242
Correct output: 391.079 | Program output: 377.927
Correct output: 293.758 | Program output: 135.119
Correct output: 335.272 | Program output: 106.806
Correct output: 225.803 | Program output: 272.866
Correct output: 153.545 | Program output: 161.315
Correct output: 106.271 | Program output: 106.896
Correct output: 164.365 | Program output: 188.484
Correct output: 184.316 | Program output: 205.719
Correct output: 182.005 | Program output: 215.998
Correct output: 124.203 | Program output: 436.406
Correct output: 66.716 | Program output: 82.958
Correct output: 306.042 | Program output: 356.829
Correct output: 68.394 | Program output: 67.802
Correct output: 139.929 | Program output: 142.713
Correct output: 226.230 | Program output: 244.723
Correct output: 129.442 | Program output: 122.027
Correct output: 723.847 | Program output: 470.347
Correct output: 182.792 | Program output: 215.285
Correct output: 39.803 | Program output: 104.080
Correct output: 128.192 | Program output: 223.448
Correct output: 624.606 | Program output: 475.359
Correct output: 397.298 | Program output: 319.954
Correct output: 12.690 | Program output: 13.378
Correct output: 100.386 | Program output: 83.391
Correct output: 7.550 | Program output: 10.223
Correct output: 30.019 | Program output: 34.591
Correct output: 48.697 | Program output: 57.318
Correct output: 101.830 | Program output: 97.330
Correct output: 54.972 | Program output: 59.057
Correct output: 55.501 | Program output: 68.657
Correct output: 46.143 | Program output: 55.900
Correct output: 808.426 | Program output: 450.963
Correct output: 178.068 | Program output: 108.832
Correct output: 207.417 | Program output: 177.012
Correct output: 93.518 | Program output: 44.202
Correct output: 490.815 | Program output: 300.951
Correct output: 1247.817 | Program output: 504.386
Correct output: 160.740 | Program output: 194.863
Correct output: 1006.197 | Program output: 262.069
Correct output: 385.498 | Program output: 408.540
Correct output: 226.865 | Program output: 398.938
Correct output: 44.815 | Program output: 19.877
Correct output: 139.446 | Program output: 181.989
Correct output: 98.158 | Program output: 70.494
Correct output: 134.416 | Program output: 151.948
Correct output: 57.911 | Program output: 23.760
Correct output: 838.313 | Program output: 540.165
Correct output: 192.012 | Program output: 196.085
Correct output: 241.040 | Program output: 281.463
Correct output: 52.438 | Program output: 16.782
Correct output: 63.745 | Program output: 63.133
Correct output: 276.361 | Program output: 309.966
Correct output: 9.005 | Program output: 12.054
Correct output: 28.509 | Program output: 37.584
Correct output: 26.238 | Program output: 33.308
Correct output: 64.284 | Program output: 65.280
Correct output: 397.628 | Program output: 368.440
Correct output: 161.133 | Program output: 180.594
Correct output: 54.111 | Program output: 61.066
Correct output: 20.954 | Program output: 41.445
Correct output: 279.470 | Program output: 373.537
Correct output: 235.457 | Program output: 167.991
Correct output: 337.121 | Program output: 292.115
Correct output: 141.508 | Program output: 168.165
Correct output: 18.824 | Program output: 13.588
Correct output: 216.404 | Program output: 152.654
Correct output: 120.372 | Program output: 145.638
Correct output: 354.574 | Program output: 365.236
Correct output: 86.713 | Program output: 97.537
Correct output: 37.202 | Program output: 60.902
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 30 30 30 1 1 1 30 30 1 1 1 1 3 1 1 1 1 5 1 1 1 1 1 30 1 35 1 1 1 1 1 1 1 1 1 1 1 2 1 1 30 1 1 1 1 1 1 1 30 1 1 30 1 4 1 1 1 1 1 3 1 1 1 1 10 1 1 1 1 1 1 1 1 30 1 1 2 1 1 6 1 1 1 3 2 1 1 2 1 1 1 30 31 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 1 1 1 1 1 30 1 1 1 1 1 1 1 30 1 1 1 2 1 1 1 1 1 1 1 1 1 30 1 1 1 1 1 1 1 2 30 30 1 1 1 3 1 1 1 1 30 4 1 1 1 1 6 1 1 1 1 1 1 3 2 1 1 1 1 1 1 7 1 1 1 2 1 1 1 1 1 30 1 1 1 1 1 1 1 1 1 2)
Population mean number of elite cases: 0.84
Count of perfect (error zero) individuals by case: (0 0 30 30 30 0 0 0 30 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 35 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 30 0 0 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 31 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 0 30 30 0 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.61
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction 1.0} {:close 1, :instruction integer_lt} {:close 0, :instruction in2} {:close 0, :instruction 2.0} {:close 2, :instruction float_mult} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 2, :instruction 0.0} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_when} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_frominteger} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 0, :instruction exec_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_if} {:close 0, :instruction float_max} {:close 0, :instruction float_frominteger} {:close 0, :instruction in2} {:close 0, :instruction 2.0} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_inc} {:close 0, :instruction float_log10} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction float_dec} {:close 0, :instruction in2} {:close 0, :instruction float_lte} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_yankdup} {:close 0, :instruction 2.0} {:close 0, :instruction float_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_eq} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 1, :instruction 0.0} {:close 0, :instruction float_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_div} {:close 0, :instruction in1} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction float_arctan} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_yankdup} {:close 2, :instruction float_fromboolean} {:close 0, :instruction exec_s} {:close 0, :instruction float_rot} {:close 0, :instruction in2} {:close 1, :instruction 0.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_yankdup} {:close 0, :instruction in2} {:close 0, :instruction 0.0} {:close 2, :instruction float_max} {:close 0, :instruction integer_sub} {:close 0, :instruction float_div} {:close 0, :instruction float_stackdepth} {:close 1, :instruction integer_lt} {:close 0, :instruction in2} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_dup} {:close 0, :instruction float_max} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in3} {:close 1, :instruction exec_swap} {:close 0, :instruction in3} {:close 0, :instruction 1.0} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_y} {:close 0, :instruction integer_gt} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_deepdup} {:close 0, :instruction exec_when} {:close 0, :instruction in1} {:close 1, :instruction float_sin} {:close 1, :instruction float_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_xor} {:close 0, :instruction 1.0} {:close 0, :instruction float_shove} {:close 1, :instruction float_sqrt} {:close 0, :instruction integer_deepdup} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction float_min} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_arcsin} {:close 0, :instruction float_sub} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_do*while} {:close 1, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction float_flush} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_do*range} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in3} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_shove} {:close 0, :instruction float_shove} {:close 0, :instruction float_dec} {:close 0, :instruction float_yank} {:close 0, :instruction integer_fromfloat} {:close 1, :instruction exec_dup_times} {:close 0, :instruction float_arccos} {:close 0, :instruction float_log10} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_pop} {:close 2, :instruction 0.0} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction exec_swap} {:close 2, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction float_min} {:close 2, :instruction integer_dup_items} {:close 1, :instruction float_gte} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction float_min} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 1, :instruction float_min} {:close 0, :instruction in3} {:close 0, :instruction float_log10} {:close 0, :instruction float_log2} {:close 0, :instruction boolean_deepdup} {:close 1, :instruction in1} {:close 3, :instruction float_ceiling} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_rot} {:close 0, :instruction float_sub} {:close 0, :instruction float_flush} {:close 1, :instruction integer_gt} {:close 1, :instruction float_square} {:close 0, :instruction float_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_float_118} {:close 1, :instruction float_fromboolean} {:close 0, :instruction float_sin} {:close 1, :instruction float_eq} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_empty} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction 2.0} {:close 1, :instruction exec_yank} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_add} {:close 0, :instruction float_log2} {:close 0, :instruction integer_gte} {:close 1, :instruction float_deepdup} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_not} {:close 0, :instruction float_dup} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 1, :instruction 1.0})
Best program: (1.0 integer_lt in2 2.0 float_mult exec_dup_times (in2 0.0) integer_yankdup exec_when (integer_abs float_add) float_frominteger in1 float_min in2 float_empty exec_yankdup in3 boolean_dup_times exec_if (float_max float_frominteger in2 2.0 integer_fromfloat in3 exec_do*count (float_inc float_log10 integer_dup boolean_pop) exec_do*times (exec_stackdepth exec_do*times () float_rot in3 exec_noop integer_sub) integer_stackdepth float_dec in2 float_lte integer_dec integer_yankdup 2.0 float_sub in1 integer_eq exec_rot () () (integer_sub exec_y (exec_y (in2) float_min 0.0) float_shove boolean_swap integer_div in1 boolean_yankdup float_arctan boolean_yank integer_shove exec_noop) integer_dup boolean_yankdup float_fromboolean) () exec_s (float_rot in2 0.0) (1.0 float_yankdup in2 0.0 float_max) () integer_sub float_div float_stackdepth integer_lt in2 integer_stackdepth integer_dup float_max integer_fromboolean in3 exec_swap () (in3 1.0 in2) float_stackdepth exec_do*count (exec_y (integer_gt float_add) float_square in3 in2 integer_fromboolean integer_deepdup exec_when (in1 float_sin) float_dup_times) boolean_eq boolean_xor 1.0 float_shove float_sqrt integer_deepdup boolean_xor boolean_frominteger float_min in2 exec_s (float_arcsin float_sub boolean_invert_second_then_and exec_do*while (in2) in2 float_flush integer_lte exec_do*range (exec_eq) integer_dup integer_deepdup in3 boolean_invert_first_then_and) (in3 in1 boolean_invert_first_then_and exec_eq integer_shove float_shove float_dec float_yank integer_fromfloat exec_dup_times () float_arccos float_log10 integer_yankdup integer_pop 0.0) () integer_fromfloat exec_swap (in3) () boolean_eq float_min integer_dup_items float_gte boolean_invert_first_then_and float_min exec_noop integer_negate float_min in3 float_log10 float_log2 boolean_deepdup in1 float_ceiling boolean_or integer_rot float_sub float_flush integer_gt float_square float_dup_items integer_min tag_float_118 float_fromboolean float_sin float_eq in1 boolean_invert_second_then_and in2 integer_empty boolean_invert_first_then_and exec_empty in3 float_min 2.0 exec_yank integer_lt exec_do*while (integer_add float_log2 integer_gte float_deepdup) integer_abs boolean_not in2 in2 boolean_not float_dup exec_eq exec_do*count (exec_when (1.0)))
Errors: [77.59 4.19 124.988 154.531 9.626 6.115 38.422 21.202 18.597 63.672 68.485 30.808 85.589 6.134 13.555 33.412 42.572 23.918 100.835 27.425 6.047 2.023 12.057 8.212 38.32 160.716 8.688 6.999 26.338 6.597 31.029 115.918 29.674 1.181 21.946 27.032 22.925 6.788 17.818 6.942 27.825 18.061 283.825 26.135 46.342 512.569 211.009 5.095 31.528 166.443 163.751 412.302 26.034 166.083 22.524 47.503 29.228 6.846 14.318 44.915 62.058 3297.607 104.447 48.927 17.393 1207.833 93.02 40.963 26.656 22.398 17.689 295.276 310.864 768.493 15.897 86.85 12.952 168.567 12.427 19.056 34.51 30.003 2.454 17.869 43.637 760.491 41.356 10.195 170.112 20.147 27.927 12.266 16.445 55.713 10.546 22.535 0.335 17.129 2.388 665.129 0.19 49.305 23.802 160.001 20.028 7.18 71.252 54.453 49.655 479.25 9.369 1.212 12.71 388.012 16.242 23.607 56.765 287.126 38.906 4.51 21.572 14.945 148.473 12.486 82.376 241.277 113.084 3.563 185.632 39.837 13.152 158.639 228.466 47.062 7.77 0.626 24.119 21.402 33.993 312.203 16.242 50.787 0.591 2.784 18.493 7.415 253.5 32.494 64.277 95.256 149.246 77.345 0.689 16.995 2.673 4.572 8.621 4.5 4.085 13.156 9.757 357.463 69.235 30.405 49.316 189.864 743.43 34.123 744.128 23.042 172.073 24.939 42.543 27.664 17.532 34.151 298.148 4.073 40.423 35.656 0.613 33.606 3.049 9.075 7.07 0.995 29.188 19.461 6.955 20.491 94.067 67.466 45.005 26.657 5.237 63.75 25.265 10.662 10.825 23.7]
Total: 20100.88700000001
Mean: 100.50443
Genome size: 201
Size: 233
Percent parens: 0.137
Age: 8
--- Population Statistics ---
Average total errors in population: 3.365846554543009E12
Median total errors in population: 42506.170999999995
Error averages by case: (1.6000032448066671E10 1.3003510814406448E10 1.8001263019704716E10 1.9213983934949917E10 1.9022451418415268E10 1.7000726957519392E10 1.7000113880232431E10 2.000002120669932E10 1.9000023158417023E10 2.100002328541483E10 1.5000018507088364E10 1.500001742786961E10 1.8000020470693462E10 1.3000151241442116E10 1.7000152330050058E10 1.9000106016477436E10 1.7000021506462992E10 1.900002255933201E10 1.2000329136714128E10 1.5000022175345451E10 1.7021760757247583E10 1.5000416972827982E10 1.7000021295619616E10 2.000002351023719E10 1.800002150179909E10 1.8000908047757656E10 1.5006111659004261E10 1.3000023010105345E10 1.800343971475124E10 1.2764001157479712E10 1.6000016526555302E10 1.7000021394119654E10 1.4000021095482664E10 1.400002301279712E10 1.4000016240701666E10 1.5006725523483791E10 1.7162875745820055E10 1.7000016143529375E10 1.600010081600467E10 1.9531602007803474E10 1.9000062779819035E10 1.6000032750516504E10 2.100002243185122E10 1.8000018573112885E10 2.0000018459053116E10 2.0000047970615917E10 1.700015306471727E10 1.2000016040973913E10 1.8005776184837547E10 1.6000151938505308E10 1.8035640371743824E10 1.6003511481713184E10 1.7000031005174095E10 1.9000144682343178E10 1.6000018365774925E10 1.6016150247106537E10 1.6000018320975925E10 1.310520934413803E10 1.9352853002577816E10 1.9000021753475853E10 2.0000063822368942E10 1.8000122948787144E10 1.700002250281125E10 2.0000024410382828E10 1.6000020308943323E10 1.7000028142692596E10 1.5000120576512781E10 2.0000022496022E10 1.8000020446797333E10 1.4000024411099329E10 1.5003510070830112E10 1.6000020545678373E10 1.5000151846882994E10 1.6000018887492855E10 1.600001612029297E10 1.900012686116401E10 1.6001263728391151E10 1.7003510592685045E10 1.8000029074875923E10 1.700001783258159E10 1.5004177881091106E10 1.601582060851519E10 1.6000019800534908E10 1.6000152977788462E10 1.6000164478865831E10 1.800003013091478E10 1.7000022434384127E10 1.7000152324334435E10 1.9000015229009426E10 1.7000017312766075E10 1.3000020395379688E10 1.7000384059794247E10 1.6000019184901243E10 1.9000022115888615E10 1.700002401379017E10 1.6076367319781746E10 1.6016952830634254E10 1.5000046174545158E10 1.6064043610688253E10 1.90000163619025E10 1.800002177518839E10 1.9082153566637684E10 1.7000019734426058E10 1.9000017984415962E10 1.9000025117650192E10 1.7000021799628803E10 1.5142627196470928E10 1.9000028392664837E10 1.5003510255325878E10 1.6003510634944304E10 1.900002409714175E10 1.6018636836869467E10 1.7226587277105915E10 1.5000016773558588E10 1.300020048133211E10 1.70138115812474E10 1.6000126405597319E10 1.9085106930317905E10 1.6000064579328749E10 1.4000018033299515E10 1.6000066888936325E10 1.8000025653140907E10 1.9000018934117374E10 1.700013972165382E10 2.000001568167492E10 2.000002244597259E10 1.6003509973278065E10 1.3000762884059944E10 1.9000021509705765E10 1.6000017435154232E10 1.6003510407198553E10 1.9000015273356655E10 1.6000021289204695E10 2.0000015549946117E10 1.7000055624375515E10 1.613796268632119E10 1.900001629651889E10 1.6000151515012897E10 1.7000018560467138E10 1.7048431171988045E10 1.9000029410153366E10 1.9000018571978607E10 1.7001420673551107E10 2.0000016217576054E10 1.50000195164419E10 2.0000073903050335E10 1.7003510665318232E10 1.9000016554634758E10 1.900002545072682E10 2.0000023379866505E10 1.9000019960554134E10 1.7000104129256977E10 1.3003654832324894E10 1.7003510104418806E10 1.3000019019224863E10 1.4000169804185585E10 1.7204190381039135E10 1.700351008560075E10 1.8001883720269424E10 1.6002107837091629E10 1.5042254582092905E10 1.600001689897138E10 1.7000020178257153E10 1.6000023830701756E10 1.633230936358475E10 1.900001656265842E10 1.6000020307924303E10 1.60000193729664E10 1.7000020941603985E10 2.0000022769410427E10 1.5022722670346228E10 1.4000319236280018E10 1.6000073860638315E10 1.5127399443452349E10 1.6000147147828318E10 1.600519809091124E10 1.6000017038295189E10 1.700002033004462E10 1.9000020571954403E10 1.4000019231967716E10 1.7000539862866278E10 1.6000018580107147E10 1.4000019026125055E10 1.3000020122710499E10 1.4005977532528107E10 1.7000494754938335E10 1.821955392478002E10 1.7000097920030636E10 1.700774797621786E10 1.6636780437025776E10 1.8000019453416763E10 1.9000019227843807E10 1.5000033517297365E10 1.6000026803705471E10 1.7000015065299562E10 1.7000019238032654E10 1.800002028276252E10 1.7000071818391134E10 1.600001922591539E10 1.6000082900367735E10)
Error minima by case: (0.106 0.019 0.0 0.0 0.0 0.226 0.005 0.062 0.0 0.0 0.023 0.06 0.834 0.003 0.216 0.102 0.813 0.007 2.165 0.226 0.221 0.001 0.034 0.145 0.286 0.0 0.069 0.0 0.659 0.003 1.032 0.013 1.208 0.004 0.053 0.35 0.742 0.004 0.204 0.034 0.814 0.95 0.0 0.124 0.469 8.225 2.056 0.021 1.972 1.273 0.0 2.621 0.043 0.0 1.075 0.345 0.309 0.203 0.141 0.471 1.853 0.38 0.199 0.005 0.306 125.916 0.02 0.097 0.043 0.039 0.237 0.031 10.21 2.172 0.032 0.0 0.066 2.669 0.129 0.336 0.197 0.04 0.003 0.787 0.019 5.534 0.243 0.03 3.808 0.05 0.13 0.033 0.269 0.0 0.0 0.275 0.025 0.289 0.055 0.732 0.19 0.204 0.223 9.88 2.565 0.056 0.212 2.114 0.169 16.205 0.298 0.076 0.057 1.889 0.056 0.099 0.199 0.0 0.274 0.003 0.1 0.209 1.658 0.342 3.737 0.0 2.755 0.341 2.438 0.127 0.406 0.531 0.822 0.616 0.804 0.263 0.365 1.809 0.199 0.0 0.372 0.097 0.025 0.122 0.297 0.314 0.257 0.004 0.0 0.0 0.515 3.688 0.001 0.054 0.076 0.084 0.094 0.146 0.0 0.067 0.058 3.43 5.338 1.388 0.024 0.855 9.398 1.293 6.452 0.242 0.015 0.033 0.004 0.252 1.873 0.062 5.009 0.2 0.101 0.194 0.218 1.235 0.005 0.004 0.022 0.079 6.853 0.071 0.111 0.0 0.74 1.142 0.812 0.178 0.063 0.404 1.205 0.309 0.236 0.14)
Average genome size in population (length): 190.769
Average program size in population (points): 223.041
Average percent parens in population: 0.142
Minimum age in population: 8.0
Maximum age in population: 8.0
Average age in population: 8.0
Median age in population: 8.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.671
Error (vector) diversity:			 0.671
Behavioral diversity:				 0.68
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 9000
Number of program executions (running on a single case counts as 1 execution): 1800000
Number of point (instruction) evaluations so far: 1371207579
--- Timings ---
Current time: 1745363309545 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Bouncing Balls problem report - generation 9
Test total error for best: 189733.93799999973
Test mean error for best: 94.86697
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 21.325
Correct output: 12.371 | Program output: 11.923
Correct output: 73.158 | Program output: 116.377
Correct output: 107.414 | Program output: 153.634
Correct output: 66.004 | Program output: 32.860
Correct output: 18.351 | Program output: 7.983
Correct output: 203.233 | Program output: 209.270
Correct output: 168.282 | Program output: 126.907
Correct output: 22.792 | Program output: 23.880
Correct output: 101.076 | Program output: 21.480
Correct output: 89.438 | Program output: 15.891
Correct output: 167.016 | Program output: 171.138
Correct output: 249.241 | Program output: 290.178
Correct output: 17.252 | Program output: 6.957
Correct output: 78.298 | Program output: 78.600
Correct output: 192.343 | Program output: 195.444
Correct output: 325.936 | Program output: 245.509
Correct output: 137.403 | Program output: 97.549
Correct output: 159.858 | Program output: 49.731
Correct output: 43.816 | Program output: 11.769
Correct output: 46.214 | Program output: 43.760
Correct output: 41.847 | Program output: 36.334
Correct output: 111.620 | Program output: 85.359
Correct output: 136.088 | Program output: 110.134
Correct output: 180.744 | Program output: 189.623
Correct output: 77.511 | Program output: 139.796
Correct output: 79.636 | Program output: 60.236
Correct output: 2.001 | Program output: 4.000
Correct output: 114.432 | Program output: 121.398
Correct output: 19.059 | Program output: 17.735
Correct output: 290.212 | Program output: 278.389
Correct output: 197.499 | Program output: 228.110
Correct output: 64.127 | Program output: 27.969
Correct output: 8.284 | Program output: 5.431
Correct output: 203.329 | Program output: 156.819
Correct output: 104.522 | Program output: 113.349
Correct output: 124.531 | Program output: 127.236
Correct output: 125.101 | Program output: 101.774
Correct output: 133.674 | Program output: 99.623
Correct output: 112.074 | Program output: 90.237
Correct output: 308.094 | Program output: 291.124
Correct output: 106.842 | Program output: 107.536
Correct output: 144.377 | Program output: 250.347
Correct output: 296.288 | Program output: 279.414
Correct output: 205.797 | Program output: 218.382
Correct output: 985.735 | Program output: 410.060
Correct output: 680.660 | Program output: 407.018
Correct output: 32.170 | Program output: 21.385
Correct output: 343.239 | Program output: 270.118
Correct output: 584.598 | Program output: 362.415
Correct output: 97.620 | Program output: 153.299
Correct output: 712.538 | Program output: 260.158
Correct output: 123.589 | Program output: 129.127
Correct output: 69.710 | Program output: 138.375
Correct output: 250.818 | Program output: 197.652
Correct output: 120.502 | Program output: 62.041
Correct output: 137.940 | Program output: 144.430
Correct output: 64.091 | Program output: 48.162
Correct output: 65.119 | Program output: 67.701
Correct output: 335.947 | Program output: 330.096
Correct output: 475.105 | Program output: 357.989
Correct output: 3999.600 | Program output: 607.994
Correct output: 279.985 | Program output: 151.726
Correct output: 201.372 | Program output: 216.783
Correct output: 189.382 | Program output: 178.930
Correct output: 1543.271 | Program output: 290.706
Correct output: 102.020 | Program output: 5.000
Correct output: 193.877 | Program output: 203.344
Correct output: 128.350 | Program output: 133.823
Correct output: 53.143 | Program output: 24.665
Correct output: 181.602 | Program output: 172.416
Correct output: 431.170 | Program output: 117.140
Correct output: 619.098 | Program output: 267.100
Correct output: 986.172 | Program output: 188.418
Correct output: 77.831 | Program output: 80.243
Correct output: 55.900 | Program output: 83.913
Correct output: 54.583 | Program output: 57.233
Correct output: 622.783 | Program output: 393.652
Correct output: 83.177 | Program output: 60.062
Correct output: 42.501 | Program output: 18.132
Correct output: 184.764 | Program output: 189.806
Correct output: 67.665 | Program output: 30.824
Correct output: 19.670 | Program output: 16.945
Correct output: 464.533 | Program output: 387.111
Correct output: 106.459 | Program output: 53.081
Correct output: 1108.353 | Program output: 301.482
Correct output: 56.702 | Program output: 71.318
Correct output: 53.970 | Program output: 54.264
Correct output: 259.503 | Program output: 76.440
Correct output: 101.480 | Program output: 69.366
Correct output: 56.812 | Program output: 23.004
Correct output: 75.112 | Program output: 74.674
Correct output: 104.689 | Program output: 104.241
Correct output: 27.529 | Program output: 48.831
Correct output: 3.963 | Program output: 7.485
Correct output: 83.268 | Program output: 51.239
Correct output: 11.973 | Program output: 8.050
Correct output: 76.197 | Program output: 49.771
Correct output: 99.025 | Program output: 86.979
Correct output: 1219.703 | Program output: 480.519
Correct output: 396.400 | Program output: 343.728
Correct output: 125.727 | Program output: 65.051
Correct output: 371.001 | Program output: 342.180
Correct output: 738.413 | Program output: 501.142
Correct output: 280.393 | Program output: 225.531
Correct output: 37.145 | Program output: 23.968
Correct output: 425.982 | Program output: 307.439
Correct output: 357.821 | Program output: 262.877
Correct output: 120.482 | Program output: 60.130
Correct output: 845.157 | Program output: 317.131
Correct output: 68.073 | Program output: 65.947
Correct output: 27.389 | Program output: 22.750
Correct output: 95.616 | Program output: 60.190
Correct output: 747.315 | Program output: 311.404
Correct output: 22.311 | Program output: 27.395
Correct output: 116.926 | Program output: 121.192
Correct output: 111.460 | Program output: 45.910
Correct output: 122.996 | Program output: 239.848
Correct output: 185.091 | Program output: 193.915
Correct output: 12.422 | Program output: 12.259
Correct output: 151.265 | Program output: 149.372
Correct output: 87.691 | Program output: 88.052
Correct output: 705.021 | Program output: 482.227
Correct output: 65.326 | Program output: 66.273
Correct output: 473.339 | Program output: 338.851
Correct output: 147.045 | Program output: 227.184
Correct output: 220.192 | Program output: 91.968
Correct output: 25.498 | Program output: 23.162
Correct output: 464.800 | Program output: 241.865
Correct output: 223.405 | Program output: 228.031
Correct output: 391.079 | Program output: 327.551
Correct output: 293.758 | Program output: 116.463
Correct output: 335.272 | Program output: 91.703
Correct output: 225.803 | Program output: 236.391
Correct output: 153.545 | Program output: 139.326
Correct output: 106.271 | Program output: 91.782
Correct output: 164.365 | Program output: 163.005
Correct output: 184.316 | Program output: 178.011
Correct output: 182.005 | Program output: 186.956
Correct output: 124.203 | Program output: 255.110
Correct output: 66.716 | Program output: 70.793
Correct output: 306.042 | Program output: 309.259
Correct output: 68.394 | Program output: 57.468
Correct output: 139.929 | Program output: 123.094
Correct output: 226.230 | Program output: 211.937
Correct output: 129.442 | Program output: 105.021
Correct output: 723.847 | Program output: 407.620
Correct output: 182.792 | Program output: 186.336
Correct output: 39.803 | Program output: 61.150
Correct output: 128.192 | Program output: 131.166
Correct output: 624.606 | Program output: 411.960
Correct output: 397.298 | Program output: 277.271
Correct output: 12.690 | Program output: 9.028
Correct output: 100.386 | Program output: 71.174
Correct output: 7.550 | Program output: 6.132
Correct output: 30.019 | Program output: 28.093
Correct output: 48.697 | Program output: 48.227
Correct output: 101.830 | Program output: 83.402
Correct output: 54.972 | Program output: 34.459
Correct output: 55.501 | Program output: 58.221
Correct output: 46.143 | Program output: 46.975
Correct output: 808.426 | Program output: 390.834
Correct output: 178.068 | Program output: 93.477
Correct output: 207.417 | Program output: 153.010
Correct output: 93.518 | Program output: 36.628
Correct output: 490.815 | Program output: 260.779
Correct output: 1247.817 | Program output: 437.089
Correct output: 160.740 | Program output: 168.561
Correct output: 1006.197 | Program output: 227.012
Correct output: 385.498 | Program output: 354.084
Correct output: 226.865 | Program output: 290.057
Correct output: 44.815 | Program output: 13.367
Correct output: 139.446 | Program output: 157.347
Correct output: 98.158 | Program output: 59.837
Correct output: 134.416 | Program output: 131.155
Correct output: 57.911 | Program output: 18.415
Correct output: 838.313 | Program output: 468.053
Correct output: 192.012 | Program output: 169.624
Correct output: 241.040 | Program output: 243.858
Correct output: 52.438 | Program output: 12.123
Correct output: 63.745 | Program output: 53.355
Correct output: 276.361 | Program output: 268.604
Correct output: 9.005 | Program output: 7.816
Correct output: 28.509 | Program output: 30.755
Correct output: 26.238 | Program output: 26.950
Correct output: 64.284 | Program output: 55.246
Correct output: 397.628 | Program output: 319.326
Correct output: 161.133 | Program output: 156.131
Correct output: 54.111 | Program output: 51.533
Correct output: 20.954 | Program output: 23.914
Correct output: 279.470 | Program output: 323.746
Correct output: 235.457 | Program output: 145.148
Correct output: 337.121 | Program output: 253.108
Correct output: 141.508 | Program output: 145.299
Correct output: 18.824 | Program output: 9.219
Correct output: 216.404 | Program output: 131.771
Correct output: 120.372 | Program output: 125.648
Correct output: 354.574 | Program output: 316.548
Correct output: 86.713 | Program output: 83.584
Correct output: 37.202 | Program output: 43.974
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 38 38 36 1 1 1 37 37 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 38 2 44 1 1 1 1 1 1 1 1 1 1 2 2 2 1 37 1 1 2 6 1 1 1 37 1 1 38 1 1 1 1 1 1 1 4 1 2 1 1 15 2 1 2 1 1 1 1 1 37 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 36 36 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 4 1 1 37 1 4 1 1 1 1 1 37 2 1 1 1 1 1 1 1 1 1 1 1 1 38 1 1 3 1 2 1 1 3 38 37 1 1 2 1 4 3 2 1 37 2 1 1 1 1 1 1 1 1 1 1 2 11 1 1 1 1 1 2 1 4 1 1 1 1 1 3 1 1 1 37 1 1 1 1 2 1 1 1 1 1)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0 0 38 38 36 0 0 0 37 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 37 0 0 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 36 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 38 37 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.75
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_negate} {:close 2, :instruction float_cos} {:close 0, :instruction in3} {:close 0, :instruction integer_pow} {:close 0, :instruction float_swap} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_arccos} {:close 1, :instruction tagged_866} {:close 0, :instruction float_swap} {:close 1, :instruction float_fromboolean} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 1, :instruction float_gt} {:close 1, :instruction float_swap} {:close 1, :instruction float_dec} {:close 0, :instruction exec_when} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_abs} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_sub} {:close 0, :instruction float_rot} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_dup} {:close 1, :instruction 1.0} {:close 1, :instruction float_add} {:close 0, :instruction float_deepdup} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 2, :instruction integer_add} {:close 0, :instruction 0.0} {:close 0, :instruction in3} {:close 0, :instruction float_arctan} {:close 0, :instruction exec_while} {:close 0, :instruction exec_if} {:close 0, :instruction tag_float_635} {:close 0, :instruction float_max} {:close 0, :instruction 0.0} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 1, :instruction float_log2} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_flush} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction float_log10} {:close 0, :instruction tagged_260} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 1, :instruction 0.0} {:close 1, :instruction float_ceiling} {:close 0, :instruction 0.0} {:close 0, :instruction exec_y} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction integer_sub} {:close 0, :instruction float_sin} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_y} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction tagged_61} {:close 0, :instruction 1.0} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction float_div} {:close 0, :instruction float_lte} {:close 0, :instruction boolean_eq} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 2, :instruction float_max} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_swap} {:close 0, :instruction float_sqrt} {:close 0, :instruction integer_pow} {:close 1, :instruction integer_lt} {:close 0, :instruction in1} {:close 0, :instruction float_mult} {:close 0, :instruction float_max} {:close 0, :instruction float_dup} {:close 0, :instruction float_dup_items} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_y} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_xor} {:close 0, :instruction float_square} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup} {:close 0, :instruction float_frominteger} {:close 0, :instruction float_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction 0.0} {:close 0, :instruction float_lt} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction in2} {:close 0, :instruction 1.0} {:close 0, :instruction float_negate} {:close 1, :instruction float_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_pow} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction float_fromboolean} {:close 0, :instruction float_min} {:close 0, :instruction float_floor} {:close 0, :instruction in1} {:close 1, :instruction in2} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction float_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in1} {:close 0, :instruction float_sub} {:close 0, :instruction float_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_div} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction float_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_while} {:close 1, :instruction float_gte} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 1, :instruction in1} {:close 0, :instruction float_max} {:close 1, :instruction integer_rot} {:close 0, :instruction 2.0} {:close 1, :instruction integer_shove} {:close 0, :instruction in3} {:close 1, :instruction integer_fromfloat} {:close 0, :instruction 1.0} {:close 0, :instruction float_flush} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_yank} {:close 2, :instruction boolean_dup} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction float_div} {:close 0, :instruction exec_dup_times} {:close 0, :instruction float_flush} {:close 0, :instruction exec_if} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction float_arctan} {:close 0, :instruction float_mod} {:close 0, :instruction float_sub} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_gte} {:close 0, :instruction float_yankdup} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction float_cos} {:close 1, :instruction boolean_not} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction float_shove} {:close 0, :instruction float_div} {:close 0, :instruction float_abs} {:close 0, :instruction float_log2} {:close 1, :instruction 1.0})
Best program: (integer_negate float_cos in3 integer_pow float_swap exec_do*times (float_arccos tagged_866) float_swap float_fromboolean in2 in1 in2 float_gt float_swap float_dec exec_when (exec_dup (boolean_yank integer_abs exec_do*while () integer_sub float_rot integer_abs float_add) float_dup 1.0) float_add float_deepdup float_min in2 integer_add 0.0 in3 float_arctan exec_while (exec_if (tag_float_635 float_max 0.0 in2 in3 float_log2) (boolean_xor integer_fromboolean boolean_flush in3 exec_do*count (exec_do*while (boolean_dup_items float_log10 tagged_260 integer_pop boolean_yank in1) integer_dec boolean_dup_times 2.0 in1 in3 exec_rot () () (integer_sub integer_shove exec_y (in2) 0.0) float_ceiling) 0.0 exec_y (exec_noop) in1 integer_sub float_sin integer_fromboolean exec_do*times (exec_y () in1 in1 tagged_61 1.0 boolean_dup_times in1 float_div float_lte boolean_eq in3 boolean_rot float_max)) integer_yankdup) exec_swap (float_sqrt integer_pow integer_lt) (in1 float_mult float_max float_dup float_dup_items in2) float_stackdepth exec_y (integer_mult boolean_frominteger float_add) integer_fromboolean exec_dup_items boolean_xor float_square integer_fromfloat in3 boolean_dup float_frominteger float_pop exec_swap (0.0 float_lt boolean_rot boolean_yankdup) (in2 1.0 float_negate float_min) boolean_frominteger integer_pow in3 boolean_invert_first_then_and float_fromboolean float_min float_floor in1 in2 in2 in3 exec_noop exec_flush exec_eq exec_dup (float_gt exec_do*count (in1 float_sub float_eq boolean_invert_second_then_and float_div exec_do*while (boolean_invert_second_then_and in3 exec_rot (in2 boolean_flush boolean_stackdepth exec_dup_times () integer_pop float_yank in1 exec_while (float_gte) exec_while (boolean_invert_first_then_and integer_min in3 boolean_invert_first_then_and integer_negate) exec_shove (exec_s (in1) (float_max integer_rot) (2.0 integer_shove) in3 integer_fromfloat) 1.0 float_flush exec_eq) (exec_yank boolean_dup) () boolean_fromfloat) exec_dup () integer_mod boolean_dup_items float_div) exec_dup_times (float_flush exec_if (integer_dup_times in2 exec_noop float_arctan float_mod float_sub in1 boolean_invert_second_then_and float_mult integer_empty exec_dup (boolean_invert_second_then_and integer_gte float_yankdup integer_lt) integer_min float_cos boolean_not) (boolean_swap boolean_pop in1 exec_k (float_shove float_div float_abs float_log2 1.0) ()))))
Errors: [83.272 0.448 43.219 46.22 33.144 10.368 6.037 41.375 1.088 79.596 73.547 4.122 40.937 10.295 0.302 3.101 80.427 39.854 110.127 32.047 2.454 5.513 26.261 25.953 8.879 62.285 19.399 1.999 6.966 1.324 11.823 30.612 36.157 2.853 46.51 8.826 2.704 23.328 34.05 21.837 16.971 0.694 105.97 16.874 12.585 575.674 273.643 10.785 73.121 222.184 55.679 452.38 5.537 68.665 53.166 58.461 6.49 15.929 2.582 5.851 117.116 3391.606 128.259 15.411 10.452 1252.565 97.02 9.467 5.473 28.478 9.187 314.03 351.998 797.753 2.413 28.012 2.65 229.132 23.114 24.369 5.042 36.841 2.725 77.422 53.378 806.871 14.615 0.294 183.063 32.113 33.808 0.438 0.448 21.302 3.522 32.029 3.924 26.426 12.046 739.183 52.672 60.676 28.821 237.272 54.862 13.177 118.543 94.945 60.352 528.026 2.126 4.639 35.426 435.911 5.084 4.266 65.55 116.852 8.823 0.163 1.893 0.36 222.794 0.946 134.488 80.139 128.224 2.336 222.935 4.625 63.528 177.295 243.569 10.588 14.219 14.488 1.36 6.306 4.951 130.907 4.077 3.217 10.926 16.834 14.294 24.421 316.227 3.544 21.347 2.974 212.646 120.027 3.662 29.212 1.418 1.926 0.471 18.428 20.513 2.72 0.832 417.592 84.591 54.407 56.889 230.036 810.728 7.821 779.185 31.414 63.192 31.448 17.901 38.321 3.261 39.496 370.26 22.388 2.819 40.315 10.391 7.757 1.188 2.247 0.712 9.038 78.301 5.001 2.578 2.96 44.276 90.31 84.013 3.791 9.605 84.633 5.276 38.025 3.129 6.772]
Total: 19892.415
Mean: 99.462074
Genome size: 212
Size: 254
Percent parens: 0.165
Age: 9
--- Population Statistics ---
Average total errors in population: 4.729323831599581E12
Median total errors in population: 42709.58249999999
Error averages by case: (2.3000044777686096E10 1.8000109032615128E10 2.20000803309589E10 2.5000315638136604E10 2.4000056637822495E10 2.3000166093011356E10 2.200053438801792E10 2.4000035666087658E10 2.0000034099289223E10 2.3010662943079235E10 2.500002874510321E10 2.8000239537007675E10 3.4001018339541245E10 1.500002802242786E10 2.3000030244017715E10 2.8000455646463505E10 2.1000252734146194E10 2.400014645699395E10 1.70007343844161E10 2.302214621386746E10 2.0000029235617813E10 2.2000682598188347E10 2.200002880208999E10 2.400014252466467E10 2.2000248762490475E10 2.4000107156319393E10 2.039596341869519E10 1.8000026009416042E10 2.4000054050244236E10 1.900020266582485E10 2.7000652056158596E10 2.7000714880823463E10 1.9000027118399727E10 2.3000025012839165E10 2.70000515144131E10 3.3000055295960674E10 3.400009961622465E10 2.5000028967077682E10 2.400012376057213E10 2.7000070204203503E10 2.700079005543607E10 2.500005711803512E10 2.5001459904581936E10 2.1000655338126198E10 2.700044847054792E10 2.800149166596754E10 2.0001766617582397E10 2.1000025041508434E10 2.7000397212947445E10 2.100107525296206E10 2.600023357069547E10 2.3000182788624535E10 2.4000070715323368E10 2.6000079066266174E10 2.000011344130582E10 2.1032139905815384E10 1.900007962542962E10 2.0081563620881485E10 2.505854499565412E10 2.300160801163636E10 2.600131855711356E10 2.2007487216186687E10 2.5000038349596558E10 3.0000456248039345E10 2.200010774411093E10 2.2000277228233936E10 1.9000027287857323E10 2.3000324835658825E10 2.600006470639677E10 1.8000038465535366E10 2.4000093544895966E10 2.4000031129052635E10 2.100021515866824E10 1.900005957080162E10 3.0000027880811382E10 2.4000039868393734E10 2.300127033700742E10 2.3001644105156956E10 2.305642577832134E10 2.1000030437096077E10 2.2000178078579025E10 3.1001717701824158E10 1.900025398464176E10 2.1002139848659847E10 1.8016895082888107E10 1.9000355131370464E10 2.700002571508685E10 2.1000559000455517E10 2.4000029716321922E10 3.0669559849080048E10 2.5000032269226E10 2.9000030414322132E10 2.200003387908024E10 2.400002569517385E10 1.9000025014086254E10 3.0000148945542614E10 2.3000084827443893E10 1.700006009775585E10 3.00000530175305E10 2.3003082841298313E10 2.4001381729692062E10 2.2082157902707455E10 2.200154860219962E10 2.500356703316942E10 2.900019349620766E10 2.1000028581112755E10 2.700054921032944E10 2.5000324388591133E10 2.3017342127320236E10 2.400042590180768E10 2.8402541226707558E10 1.9018650824343548E10 3.0000047717381676E10 2.900037315946874E10 2.0000524375897488E10 2.8001114763275078E10 1.8000299367381264E10 2.700077678108182E10 2.5000293062942505E10 2.0000025034061024E10 2.300018268744553E10 2.000024906836188E10 2.4003019388523087E10 3.132125177133165E10 2.6000972835152985E10 2.3001401648490112E10 2.400002750794471E10 1.6405251655997225E10 2.6000177849107197E10 2.9000357348169495E10 2.3001017898996864E10 2.300003332992463E10 2.1000030447267036E10 2.5000581087724144E10 2.5000040254949432E10 2.4000059426242275E10 2.300008976386878E10 2.0000110026733784E10 2.0000338664179314E10 2.5000837752457676E10 2.700002653489523E10 2.4001047208822002E10 2.3004250334093945E10 2.4000041558213528E10 2.2000198080332718E10 2.900011637405158E10 2.300173909739357E10 2.6000160566606308E10 2.2000028194609932E10 2.6000436452679977E10 2.4002238013029263E10 2.5000392548551357E10 1.900017111390406E10 2.6000051940587185E10 2.500002657844256E10 1.7000049530453604E10 1.8302846374093132E10 2.4000055237180458E10 2.500010946354764E10 2.1162432698596657E10 1.9060885831916866E10 2.600115475114438E10 2.3000029958136196E10 2.2000049495117146E10 2.3308485876986053E10 2.300024049735639E10 2.0001917027871544E10 2.100016711432739E10 2.5000107413880157E10 2.400179688740094E10 3.000058797253277E10 2.30000245588173E10 3.2000104667071606E10 2.3120877366119095E10 3.10002255041225E10 2.0000025522142673E10 2.5003005418057552E10 2.4000078139813694E10 2.500046769907561E10 2.2000026539163612E10 2.3000524887398083E10 1.9000602929680317E10 1.7000034191588036E10 2.6322828930318214E10 1.6012034506580406E10 2.6001349464754208E10 3.0000709040056305E10 2.9000049804179024E10 2.0008808776139484E10 1.931840865216908E10 3.4000980895797626E10 2.300003353680355E10 2.6000286254766186E10 2.6000070581619305E10 1.8000348020005154E10 2.300003809914806E10 2.1000052445130337E10 2.5001005351588642E10 2.3000041954236122E10 2.202624587839653E10)
Error minima by case: (0.142 0.002 0.0 0.0 0.0 0.056 0.006 0.062 0.0 0.0 0.112 0.258 1.087 0.121 0.302 0.536 0.783 0.072 0.598 0.085 0.166 0.194 0.187 0.106 0.033 0.0 0.069 0.0 0.287 0.012 4.389 0.721 1.061 0.004 0.004 0.456 0.94 0.008 0.204 0.395 0.095 0.694 0.0 0.124 0.618 4.916 2.354 0.17 1.912 0.315 0.0 1.164 0.579 0.0 0.382 0.069 0.191 0.256 0.159 1.07 0.829 0.38 0.632 0.005 0.003 73.303 0.02 0.178 0.097 0.05 0.091 0.242 0.016 0.172 0.041 0.0 0.055 0.188 0.068 0.083 3.312 0.054 0.017 6.667 0.076 4.238 0.152 0.294 2.522 0.006 0.026 0.033 0.295 0.0 0.0 0.076 0.013 0.045 0.394 0.732 0.761 1.866 0.122 7.679 0.371 0.233 1.215 0.347 0.177 7.75 0.145 0.002 0.108 10.548 0.116 0.099 0.942 0.0 0.488 0.003 0.649 0.238 8.122 0.861 0.957 0.0 0.318 0.245 1.509 0.173 2.63 0.484 2.728 0.793 0.376 0.313 0.535 0.809 0.015 0.0 0.068 0.097 0.025 0.126 0.297 0.291 15.783 0.017 0.0 0.0 2.17 2.734 0.001 0.028 0.133 0.032 0.335 0.153 0.0 0.022 0.013 2.02 7.689 0.206 0.094 2.389 2.273 0.945 5.037 0.334 0.043 0.165 0.004 0.087 0.739 0.067 0.262 0.351 0.159 0.194 0.235 0.235 0.04 0.004 0.022 0.079 1.89 0.125 0.089 0.0 1.104 2.185 0.812 1.174 0.063 1.298 1.205 0.309 0.239 0.088)
Average genome size in population (length): 197.65
Average program size in population (points): 231.46
Average percent parens in population: 0.145
Minimum age in population: 9.0
Maximum age in population: 9.0
Average age in population: 9.0
Median age in population: 9.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.684
Error (vector) diversity:			 0.684
Behavioral diversity:				 0.694
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 10000
Number of program executions (running on a single case counts as 1 execution): 2000000
Number of point (instruction) evaluations so far: 1584540783
--- Timings ---
Current time: 1745363475697 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Bouncing Balls problem report - generation 10
Test total error for best: 187730.20699999973
Test mean error for best: 93.86510
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 23.325
Correct output: 12.371 | Program output: 13.923
Correct output: 73.158 | Program output: 117.377
Correct output: 107.414 | Program output: 154.634
Correct output: 66.004 | Program output: 33.860
Correct output: 18.351 | Program output: 8.908
Correct output: 203.233 | Program output: 211.270
Correct output: 168.282 | Program output: 128.907
Correct output: 22.792 | Program output: 24.880
Correct output: 101.076 | Program output: 22.480
Correct output: 89.438 | Program output: 17.891
Correct output: 167.016 | Program output: 173.138
Correct output: 249.241 | Program output: 245.631
Correct output: 17.252 | Program output: 7.562
Correct output: 78.298 | Program output: 80.600
Correct output: 192.343 | Program output: 197.444
Correct output: 325.936 | Program output: 247.509
Correct output: 137.403 | Program output: 99.549
Correct output: 159.858 | Program output: 51.731
Correct output: 43.816 | Program output: 13.769
Correct output: 46.214 | Program output: 45.760
Correct output: 41.847 | Program output: 38.334
Correct output: 111.620 | Program output: 87.359
Correct output: 136.088 | Program output: 112.134
Correct output: 180.744 | Program output: 191.623
Correct output: 77.511 | Program output: 140.796
Correct output: 79.636 | Program output: 62.236
Correct output: 2.001 | Program output: 4.000
Correct output: 114.432 | Program output: 123.398
Correct output: 19.059 | Program output: 18.735
Correct output: 290.212 | Program output: 280.389
Correct output: 197.499 | Program output: 229.110
Correct output: 64.127 | Program output: 29.969
Correct output: 8.284 | Program output: 5.564
Correct output: 203.329 | Program output: 158.819
Correct output: 104.522 | Program output: 97.841
Correct output: 124.531 | Program output: 109.456
Correct output: 125.101 | Program output: 103.774
Correct output: 133.674 | Program output: 101.623
Correct output: 112.074 | Program output: 92.237
Correct output: 308.094 | Program output: 293.124
Correct output: 106.842 | Program output: 109.536
Correct output: 144.377 | Program output: 251.347
Correct output: 296.288 | Program output: 281.414
Correct output: 205.797 | Program output: 220.382
Correct output: 985.735 | Program output: 412.060
Correct output: 680.660 | Program output: 409.018
Correct output: 32.170 | Program output: 23.385
Correct output: 343.239 | Program output: 272.118
Correct output: 584.598 | Program output: 364.415
Correct output: 97.620 | Program output: 154.299
Correct output: 712.538 | Program output: 262.158
Correct output: 123.589 | Program output: 131.127
Correct output: 69.710 | Program output: 139.375
Correct output: 250.818 | Program output: 199.652
Correct output: 120.502 | Program output: 64.041
Correct output: 137.940 | Program output: 146.430
Correct output: 64.091 | Program output: 50.162
Correct output: 65.119 | Program output: 69.701
Correct output: 335.947 | Program output: 332.096
Correct output: 475.105 | Program output: 359.989
Correct output: 3999.600 | Program output: 609.994
Correct output: 279.985 | Program output: 153.726
Correct output: 201.372 | Program output: 218.783
Correct output: 189.382 | Program output: 180.930
Correct output: 1543.271 | Program output: 292.706
Correct output: 102.020 | Program output: 5.000
Correct output: 193.877 | Program output: 205.344
Correct output: 128.350 | Program output: 135.823
Correct output: 53.143 | Program output: 26.665
Correct output: 181.602 | Program output: 174.416
Correct output: 431.170 | Program output: 119.140
Correct output: 619.098 | Program output: 269.100
Correct output: 986.172 | Program output: 190.418
Correct output: 77.831 | Program output: 82.243
Correct output: 55.900 | Program output: 84.913
Correct output: 54.583 | Program output: 59.233
Correct output: 622.783 | Program output: 395.652
Correct output: 83.177 | Program output: 62.062
Correct output: 42.501 | Program output: 20.132
Correct output: 184.764 | Program output: 191.806
Correct output: 67.665 | Program output: 28.730
Correct output: 19.670 | Program output: 18.945
Correct output: 464.533 | Program output: 389.111
Correct output: 106.459 | Program output: 55.081
Correct output: 1108.353 | Program output: 303.482
Correct output: 56.702 | Program output: 72.318
Correct output: 53.970 | Program output: 56.264
Correct output: 259.503 | Program output: 78.440
Correct output: 101.480 | Program output: 71.366
Correct output: 56.812 | Program output: 25.004
Correct output: 75.112 | Program output: 76.674
Correct output: 104.689 | Program output: 106.241
Correct output: 27.529 | Program output: 49.831
Correct output: 3.963 | Program output: 8.272
Correct output: 83.268 | Program output: 45.848
Correct output: 11.973 | Program output: 8.995
Correct output: 76.197 | Program output: 51.771
Correct output: 99.025 | Program output: 75.778
Correct output: 1219.703 | Program output: 482.519
Correct output: 396.400 | Program output: 345.728
Correct output: 125.727 | Program output: 67.051
Correct output: 371.001 | Program output: 344.180
Correct output: 738.413 | Program output: 503.142
Correct output: 280.393 | Program output: 227.531
Correct output: 37.145 | Program output: 25.968
Correct output: 425.982 | Program output: 309.439
Correct output: 357.821 | Program output: 264.877
Correct output: 120.482 | Program output: 62.130
Correct output: 845.157 | Program output: 319.131
Correct output: 68.073 | Program output: 67.947
Correct output: 27.389 | Program output: 24.750
Correct output: 95.616 | Program output: 61.190
Correct output: 747.315 | Program output: 313.404
Correct output: 22.311 | Program output: 28.395
Correct output: 116.926 | Program output: 123.192
Correct output: 111.460 | Program output: 47.910
Correct output: 122.996 | Program output: 240.848
Correct output: 185.091 | Program output: 195.915
Correct output: 12.422 | Program output: 14.259
Correct output: 151.265 | Program output: 151.372
Correct output: 87.691 | Program output: 90.052
Correct output: 705.021 | Program output: 484.227
Correct output: 65.326 | Program output: 58.442
Correct output: 473.339 | Program output: 340.851
Correct output: 147.045 | Program output: 228.184
Correct output: 220.192 | Program output: 93.968
Correct output: 25.498 | Program output: 25.162
Correct output: 464.800 | Program output: 243.865
Correct output: 223.405 | Program output: 230.031
Correct output: 391.079 | Program output: 329.551
Correct output: 293.758 | Program output: 118.463
Correct output: 335.272 | Program output: 93.703
Correct output: 225.803 | Program output: 238.391
Correct output: 153.545 | Program output: 141.326
Correct output: 106.271 | Program output: 93.782
Correct output: 164.365 | Program output: 165.005
Correct output: 184.316 | Program output: 180.011
Correct output: 182.005 | Program output: 188.956
Correct output: 124.203 | Program output: 256.110
Correct output: 66.716 | Program output: 72.793
Correct output: 306.042 | Program output: 311.259
Correct output: 68.394 | Program output: 59.468
Correct output: 139.929 | Program output: 125.094
Correct output: 226.230 | Program output: 213.937
Correct output: 129.442 | Program output: 107.021
Correct output: 723.847 | Program output: 409.620
Correct output: 182.792 | Program output: 188.336
Correct output: 39.803 | Program output: 62.150
Correct output: 128.192 | Program output: 132.166
Correct output: 624.606 | Program output: 413.960
Correct output: 397.298 | Program output: 279.271
Correct output: 12.690 | Program output: 10.279
Correct output: 100.386 | Program output: 73.174
Correct output: 7.550 | Program output: 6.307
Correct output: 30.019 | Program output: 30.093
Correct output: 48.697 | Program output: 50.227
Correct output: 101.830 | Program output: 85.402
Correct output: 54.972 | Program output: 35.459
Correct output: 55.501 | Program output: 60.221
Correct output: 46.143 | Program output: 48.975
Correct output: 808.426 | Program output: 392.834
Correct output: 178.068 | Program output: 95.477
Correct output: 207.417 | Program output: 155.010
Correct output: 93.518 | Program output: 38.628
Correct output: 490.815 | Program output: 262.779
Correct output: 1247.817 | Program output: 439.089
Correct output: 160.740 | Program output: 170.561
Correct output: 1006.197 | Program output: 229.012
Correct output: 385.498 | Program output: 356.084
Correct output: 226.865 | Program output: 291.057
Correct output: 44.815 | Program output: 14.367
Correct output: 139.446 | Program output: 134.634
Correct output: 98.158 | Program output: 61.837
Correct output: 134.416 | Program output: 133.155
Correct output: 57.911 | Program output: 20.415
Correct output: 838.313 | Program output: 470.053
Correct output: 192.012 | Program output: 171.624
Correct output: 241.040 | Program output: 245.858
Correct output: 52.438 | Program output: 14.123
Correct output: 63.745 | Program output: 55.355
Correct output: 276.361 | Program output: 270.604
Correct output: 9.005 | Program output: 8.689
Correct output: 28.509 | Program output: 28.672
Correct output: 26.238 | Program output: 28.950
Correct output: 64.284 | Program output: 57.246
Correct output: 397.628 | Program output: 321.326
Correct output: 161.133 | Program output: 158.131
Correct output: 54.111 | Program output: 53.533
Correct output: 20.954 | Program output: 24.914
Correct output: 279.470 | Program output: 273.669
Correct output: 235.457 | Program output: 147.148
Correct output: 337.121 | Program output: 255.108
Correct output: 141.508 | Program output: 147.299
Correct output: 18.824 | Program output: 10.530
Correct output: 216.404 | Program output: 133.771
Correct output: 120.372 | Program output: 127.648
Correct output: 354.574 | Program output: 318.548
Correct output: 86.713 | Program output: 85.584
Correct output: 37.202 | Program output: 44.974
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 2 57 57 57 1 1 1 57 57 3 1 1 1 1 1 1 1 1 1 1 1 1 2 1 57 4 57 1 6 1 1 1 1 1 1 1 1 1 2 1 1 57 2 1 1 1 2 1 1 57 1 1 57 1 1 1 1 3 1 1 1 1 1 1 1 9 3 1 1 1 1 1 1 1 57 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 57 57 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 57 1 2 1 1 1 1 1 57 1 1 1 1 1 1 1 1 1 1 1 1 1 57 1 1 2 1 1 1 1 1 57 58 1 1 1 1 1 1 1 1 57 1 2 1 1 1 3 1 1 1 1 1 1 1 1 1 2 1 1 1 1 3 1 1 1 1 1 2 1 1 1 57 1 1 1 1 4 1 1 1 6 1)
Population mean number of elite cases: 1.37
Count of perfect (error zero) individuals by case: (0 0 57 57 57 0 0 0 57 57 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 57 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 57 0 0 57 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 57 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 0 57 58 0 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 1.14
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_negate} {:close 2, :instruction float_cos} {:close 0, :instruction in3} {:close 0, :instruction integer_pow} {:close 0, :instruction float_swap} {:close 0, :instruction exec_do*times} {:close 0, :instruction float_arccos} {:close 1, :instruction tagged_866} {:close 1, :instruction float_fromboolean} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 1, :instruction float_gt} {:close 1, :instruction float_swap} {:close 1, :instruction float_dec} {:close 0, :instruction exec_when} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_abs} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_abs} {:close 1, :instruction float_add} {:close 0, :instruction float_dup} {:close 1, :instruction 1.0} {:close 0, :instruction float_deepdup} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 2, :instruction integer_add} {:close 0, :instruction 0.0} {:close 0, :instruction in3} {:close 0, :instruction float_arctan} {:close 0, :instruction exec_while} {:close 0, :instruction exec_if} {:close 0, :instruction tag_float_635} {:close 0, :instruction float_max} {:close 0, :instruction 0.0} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 1, :instruction float_log2} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_flush} {:close 0, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction float_log10} {:close 0, :instruction tagged_260} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 1, :instruction 0.0} {:close 0, :instruction float_add} {:close 1, :instruction float_ceiling} {:close 0, :instruction 0.0} {:close 0, :instruction exec_y} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction integer_sub} {:close 0, :instruction float_sin} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_y} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction tagged_61} {:close 0, :instruction 1.0} {:close 0, :instruction float_div} {:close 0, :instruction float_lte} {:close 0, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 2, :instruction float_max} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_swap} {:close 0, :instruction float_sqrt} {:close 0, :instruction integer_pow} {:close 1, :instruction integer_lt} {:close 0, :instruction in1} {:close 0, :instruction float_mult} {:close 0, :instruction float_max} {:close 0, :instruction float_dup} {:close 0, :instruction float_dup_items} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_y} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction float_add} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_xor} {:close 0, :instruction float_square} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup} {:close 0, :instruction float_frominteger} {:close 0, :instruction float_pop} {:close 0, :instruction 0.0} {:close 0, :instruction float_lt} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction in2} {:close 0, :instruction 1.0} {:close 0, :instruction float_negate} {:close 1, :instruction float_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_pow} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction float_fromboolean} {:close 0, :instruction float_min} {:close 0, :instruction float_floor} {:close 0, :instruction in1} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction float_gt} {:close 0, :instruction in1} {:close 0, :instruction float_sub} {:close 0, :instruction 1.0} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_rot} {:close 0, :instruction float_div} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction float_yank} {:close 0, :instruction exec_while} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction 2.0} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 1, :instruction in1} {:close 0, :instruction float_max} {:close 1, :instruction integer_rot} {:close 0, :instruction 2.0} {:close 1, :instruction integer_shove} {:close 0, :instruction in3} {:close 1, :instruction integer_fromfloat} {:close 0, :instruction float_flush} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_yank} {:close 2, :instruction boolean_dup} {:close 1, :instruction boolean_fromfloat} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction float_div} {:close 0, :instruction exec_dup_times} {:close 0, :instruction float_flush} {:close 0, :instruction exec_if} {:close 0, :instruction integer_dup_times} {:close 0, :instruction float_add} {:close 0, :instruction in2} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction float_arctan} {:close 0, :instruction float_mod} {:close 0, :instruction float_sub} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_gte} {:close 0, :instruction float_yankdup} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction float_cos} {:close 1, :instruction boolean_not} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction float_shove} {:close 0, :instruction float_div} {:close 0, :instruction float_abs} {:close 0, :instruction float_log2} {:close 1, :instruction 1.0})
Best program: (integer_negate float_cos in3 integer_pow float_swap exec_do*times (float_arccos tagged_866) float_fromboolean in2 in1 in2 float_gt float_swap float_dec exec_when (exec_dup (boolean_yank integer_abs exec_do*while () integer_sub integer_abs float_add) float_dup 1.0) float_deepdup float_min in2 integer_add 0.0 in3 float_arctan exec_while (exec_if (tag_float_635 float_max 0.0 in2 in3 float_log2) (boolean_xor integer_fromboolean boolean_flush in3 exec_do*count (exec_do*while (boolean_dup_items float_log10 tagged_260 integer_pop boolean_yank in1) boolean_dup_times in1 in3 exec_rot () () (integer_shove exec_y (in2) 0.0) float_add float_ceiling) 0.0 exec_y (exec_noop) in1 integer_sub float_sin integer_fromboolean exec_do*times (exec_y () in1 in1 integer_rot tagged_61 1.0 float_div float_lte in3 boolean_eq in3 boolean_rot float_max)) integer_yankdup) exec_swap (float_sqrt integer_pow integer_lt) (in1 float_mult float_max float_dup float_dup_items in2) float_stackdepth exec_y (integer_mult boolean_frominteger float_add) integer_fromboolean exec_dup_items boolean_xor float_square integer_fromfloat in3 boolean_dup float_frominteger float_pop 0.0 float_lt boolean_rot boolean_yankdup in2 1.0 float_negate float_min boolean_frominteger integer_pow in3 boolean_invert_first_then_and float_fromboolean float_min float_floor in1 in2 in3 exec_flush exec_eq exec_dup (float_gt in1 float_sub 1.0 boolean_invert_second_then_and integer_rot) float_div exec_do*while (boolean_invert_second_then_and in3 exec_rot (in2 boolean_flush boolean_stackdepth exec_dup_times () integer_pop float_yank exec_while (exec_while (boolean_invert_first_then_and integer_min in3 boolean_invert_first_then_and 2.0 integer_negate) exec_shove (exec_s (in1) (float_max integer_rot) (2.0 integer_shove) in3 integer_fromfloat) float_flush exec_eq) exec_yank boolean_dup) () (boolean_fromfloat) exec_dup () integer_mod boolean_dup_items float_div) exec_dup_times (float_flush exec_if (integer_dup_times float_add in2 boolean_shove exec_noop float_arctan float_mod float_sub in1 boolean_invert_second_then_and float_mult integer_empty boolean_invert_second_then_and boolean_invert_second_then_and integer_gte float_yankdup integer_lt) (integer_min float_cos boolean_not) boolean_swap boolean_pop integer_mod in1 exec_k (float_shove float_div float_abs float_log2 1.0) ()))
Errors: [81.272 1.552 44.219 47.22 32.144 9.443 8.037 39.375 2.088 78.596 71.547 6.122 3.61 9.69 2.302 5.101 78.427 37.854 108.127 30.047 0.454 3.513 24.261 23.953 10.879 63.285 17.399 1.999 8.966 0.324 9.823 31.612 34.157 2.72 44.51 6.682 15.075 21.328 32.05 19.837 14.971 2.694 106.97 14.874 14.585 573.674 271.643 8.785 71.121 220.184 56.679 450.38 7.537 69.665 51.166 56.461 8.49 13.929 4.582 3.851 115.116 3389.606 126.259 17.411 8.452 1250.565 97.02 11.467 7.473 26.478 7.187 312.03 349.998 795.753 4.413 29.012 4.65 227.132 21.114 22.369 7.042 38.935 0.725 75.422 51.378 804.871 15.615 2.294 181.063 30.113 31.808 1.562 1.552 22.302 4.309 37.419 2.979 24.426 23.247 737.183 50.672 58.676 26.821 235.272 52.862 11.177 116.543 92.945 58.352 526.026 0.126 2.639 34.426 433.911 6.084 6.266 63.55 117.852 10.823 1.837 0.107 2.36 220.794 6.884 132.488 81.139 126.224 0.336 220.935 6.625 61.528 175.295 241.569 12.588 12.219 12.488 0.64 4.306 6.951 131.907 6.077 5.217 8.926 14.834 12.294 22.421 314.227 5.544 22.347 3.974 210.646 118.027 2.411 27.212 1.243 0.074 1.529 16.428 19.513 4.72 2.832 415.592 82.591 52.407 54.889 228.036 808.728 9.821 777.185 29.414 64.192 30.448 4.812 36.321 1.261 37.496 368.26 20.388 4.819 38.315 8.391 5.757 0.316 0.163 2.712 7.038 76.301 3.001 0.578 3.96 5.801 88.31 82.013 5.791 8.295 82.633 7.276 36.025 1.129 7.772]
Total: 19692.566999999992
Mean: 98.46284
Genome size: 205
Size: 243
Percent parens: 0.156
Age: 10
--- Population Statistics ---
Average total errors in population: 4.791594211821486E12
Median total errors in population: 42506.170999999995
Error averages by case: (2.0000032516765392E10 1.7001502150609993E10 2.6005608524633846E10 2.71509567136094E10 2.4000052801976646E10 2.100003603075937E10 2.900012574708648E10 2.3000048509586533E10 2.3000039459496784E10 2.301065406246557E10 2.1000030549564064E10 2.5000031308315975E10 2.8000035372277218E10 1.7000030019519798E10 2.400003439336646E10 2.5000031428770535E10 2.600007463590544E10 2.4976884323422672E10 2.3000061485744446E10 2.2000063975513546E10 2.3014477450090294E10 2.3000325919304478E10 2.7000027249139458E10 2.3978042217030907E10 2.6000033029156727E10 2.602732601759687E10 2.300614854024882E10 2.000003001161377E10 2.8001357715483543E10 1.7000032963517044E10 2.5000032409193226E10 2.0000037217895058E10 2.300002808700244E10 2.200003500763361E10 2.400028051224717E10 2.7001406263038322E10 2.7079553292831882E10 2.4000034078249275E10 2.658427560632946E10 2.40145206173247E10 2.500003148303977E10 2.6001878869146843E10 2.8000031286658554E10 2.5000031452171165E10 2.9000085776604374E10 2.5000033001068012E10 2.5000032747140003E10 2.0000030035721413E10 2.500003143260202E10 2.500003363721462E10 2.714261221346981E10 2.1077512646030422E10 2.800772631897072E10 2.601287760853799E10 2.5024396979097855E10 2.602515173808248E10 2.501088911923082E10 1.800009327152636E10 2.4450443712635868E10 2.4000043245142273E10 2.500003161947188E10 2.500003681657463E10 2.000003324723288E10 2.5000036284712143E10 2.4058666923750313E10 2.4529084459249462E10 2.2000033477977055E10 2.4000036642968277E10 2.400183590249414E10 2.20000347669484E10 2.0028222576404736E10 2.600002791804982E10 2.418347725606167E10 2.5000226158031025E10 2.400003270867241E10 2.600009495597022E10 2.301299597685033E10 2.2000032707134396E10 2.100563239263183E10 2.3000032100714287E10 2.0920168263900024E10 2.4018739737895878E10 2.5000028051367184E10 2.50000336317756E10 2.400075973560514E10 2.5000035043345608E10 1.9000033215015923E10 2.3000297996495506E10 2.4099017849755558E10 2.4001339082939674E10 2.100003722804275E10 2.6000619547737827E10 2.500003736792174E10 2.700002905744737E10 2.4000030011947014E10 2.500011652893451E10 2.100003501546624E10 2.3000064873457634E10 2.700157503607219E10 2.801270021418074E10 2.605991070557198E10 2.1379689124375504E10 2.50000295864031E10 2.900009244769849E10 2.4357159142200947E10 2.30000346133081E10 2.4000032444834846E10 2.5000031426520206E10 1.9013016093725307E10 2.2000031797996483E10 2.3000036063658756E10 2.228180165601054E10 1.9000884694991344E10 2.5000031702910023E10 1.700003495342814E10 2.0000031172743443E10 2.3133231034642204E10 2.800002924936963E10 2.9000072464185722E10 2.0000031022113068E10 2.700002736147934E10 2.4000310824412067E10 2.9000084683884537E10 2.616051430183428E10 2.8018029127350918E10 2.8000031277956886E10 2.0000033789538876E10 2.000002809208347E10 2.3129700119450474E10 2.5000031336883102E10 2.2000032518937443E10 2.5600010495895416E10 2.4000032822328568E10 2.802587549248057E10 2.700071894292962E10 2.3004823325161594E10 2.6054115300713043E10 2.403183519741649E10 2.6000029453492775E10 2.8000029259555904E10 2.600003048785483E10 2.8000089077106735E10 2.410977149426249E10 2.4000052842218845E10 2.5714951067343925E10 2.334814525697937E10 2.2000031784430473E10 2.650496078370552E10 2.7000030778455593E10 2.7003365982401333E10 2.7000033849103966E10 2.900004653157098E10 1.7000033028653128E10 2.0001249677277157E10 2.1000035011275806E10 2.00011055869164E10 2.300004455123834E10 2.000219433790166E10 2.500008628161066E10 2.300212085503372E10 2.3000039804785156E10 2.5000032804165638E10 2.5000031283388016E10 2.8000230906680252E10 1.9000042438413036E10 2.753845944903094E10 2.6000035226451515E10 2.4943768533203022E10 2.5005709680918392E10 2.4000046065894867E10 2.0000042657367783E10 1.800003209482993E10 2.7000183077134384E10 2.204279862869641E10 2.0000032154540173E10 2.5000036145577267E10 2.500003190056161E10 2.50041532891021E10 2.6000070035045288E10 2.100002815355297E10 2.400010221176261E10 2.6000029498972073E10 1.7000033017754559E10 2.2017412697831852E10 2.3005987956691734E10 2.6000036478980797E10 2.0000032443987614E10 2.4000226375970028E10 2.000003405316049E10 2.2000034307346523E10 2.8000033384376915E10 2.7000038250347557E10 2.7000026425069664E10 2.6003794729145596E10 2.06041222473871E10 2.400004023244824E10 2.5000691014416496E10 2.7000026561876377E10 2.4000121198934444E10 1.7000092850261084E10)
Error minima by case: (0.104 0.048 0.0 0.0 0.0 0.095 0.229 0.054 0.0 0.0 0.181 0.141 0.661 0.014 0.046 0.374 3.022 0.119 1.402 0.085 0.309 0.023 0.034 0.106 0.931 0.0 0.069 0.0 0.059 0.012 1.09 7.855 1.876 0.018 0.139 0.273 0.146 0.237 0.224 0.034 0.025 0.238 0.0 0.215 0.041 1.392 0.433 0.069 1.962 0.299 0.0 5.388 0.18 0.0 2.806 0.155 0.084 0.194 0.159 0.468 0.853 0.36 2.584 0.049 0.143 18.338 0.02 0.178 0.37 0.05 0.296 0.201 9.796 7.869 0.415 0.0 0.024 1.018 0.1 0.112 1.393 0.026 0.017 1.506 0.012 4.181 0.089 0.03 2.405 0.256 0.05 0.776 0.295 0.0 0.0 0.101 0.002 0.003 0.055 2.48 1.81 0.994 0.223 6.496 0.085 0.014 3.853 2.944 0.015 2.065 0.093 0.034 0.037 0.944 0.043 0.099 0.54 0.0 0.317 0.016 0.107 0.238 0.096 0.345 1.559 0.0 1.318 0.147 0.449 0.011 0.331 0.446 0.026 0.393 1.959 0.501 0.582 0.277 0.424 0.0 0.638 1.903 0.025 0.159 1.52 0.255 0.603 0.063 0.0 0.0 2.832 2.831 0.193 0.028 0.039 0.019 0.094 0.146 0.0 0.022 0.172 3.208 2.935 0.263 0.024 2.064 8.964 1.48 7.586 1.229 0.006 0.033 0.405 0.176 0.596 0.048 4.386 0.052 0.299 0.194 0.235 0.024 0.072 0.024 0.348 0.079 0.259 0.782 0.085 0.0 0.877 0.359 1.694 0.444 0.063 0.6 0.205 0.309 0.239 0.088)
Average genome size in population (length): 198.629
Average program size in population (points): 232.89
Average percent parens in population: 0.146
Minimum age in population: 10.0
Maximum age in population: 10.0
Average age in population: 10.0
Median age in population: 10.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.678
Error (vector) diversity:			 0.678
Behavioral diversity:				 0.687
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 11000
Number of program executions (running on a single case counts as 1 execution): 2200000
Number of point (instruction) evaluations so far: 1790377352
--- Timings ---
Current time: 1745363636779 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Bouncing Balls problem report - generation 11
Test total error for best: 197379.75899999993
Test mean error for best: 98.68988
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 6.752
Correct output: 12.371 | Program output: 3.000
Correct output: 73.158 | Program output: 148.327
Correct output: 107.414 | Program output: 226.296
Correct output: 66.004 | Program output: 21.651
Correct output: 18.351 | Program output: 1.768
Correct output: 203.233 | Program output: 200.324
Correct output: 168.282 | Program output: 94.355
Correct output: 22.792 | Program output: 13.348
Correct output: 101.076 | Program output: 11.375
Correct output: 89.438 | Program output: 4.455
Correct output: 167.016 | Program output: 147.962
Correct output: 249.241 | Program output: 327.858
Correct output: 17.252 | Program output: 1.487
Correct output: 78.298 | Program output: 45.989
Correct output: 192.343 | Program output: 180.723
Correct output: 325.936 | Program output: 254.833
Correct output: 137.403 | Program output: 63.559
Correct output: 159.858 | Program output: 23.250
Correct output: 43.816 | Program output: 2.948
Correct output: 46.214 | Program output: 19.240
Correct output: 41.847 | Program output: 14.629
Correct output: 111.620 | Program output: 52.034
Correct output: 136.088 | Program output: 76.255
Correct output: 180.744 | Program output: 172.677
Correct output: 77.511 | Program output: 196.041
Correct output: 79.636 | Program output: 30.912
Correct output: 2.001 | Program output: 1.000
Correct output: 114.432 | Program output: 88.267
Correct output: 19.059 | Program output: 6.212
Correct output: 290.212 | Program output: 307.987
Correct output: 197.499 | Program output: 296.733
Correct output: 64.127 | Program output: 9.982
Correct output: 8.284 | Program output: 1.101
Correct output: 203.329 | Program output: 129.725
Correct output: 104.522 | Program output: 79.622
Correct output: 124.531 | Program output: 94.723
Correct output: 125.101 | Program output: 67.733
Correct output: 133.674 | Program output: 65.597
Correct output: 112.074 | Program output: 56.551
Correct output: 308.094 | Program output: 329.470
Correct output: 106.842 | Program output: 73.570
Correct output: 144.377 | Program output: 475.090
Correct output: 296.288 | Program output: 309.698
Correct output: 205.797 | Program output: 213.611
Correct output: 985.735 | Program output: 552.221
Correct output: 680.660 | Program output: 546.055
Correct output: 32.170 | Program output: 6.780
Correct output: 343.239 | Program output: 294.298
Correct output: 584.598 | Program output: 458.391
Correct output: 97.620 | Program output: 225.546
Correct output: 712.538 | Program output: 278.094
Correct output: 123.589 | Program output: 96.847
Correct output: 69.710 | Program output: 193.019
Correct output: 250.818 | Program output: 183.807
Correct output: 120.502 | Program output: 32.302
Correct output: 137.940 | Program output: 114.615
Correct output: 64.091 | Program output: 22.171
Correct output: 65.119 | Program output: 36.794
Correct output: 335.947 | Program output: 398.176
Correct output: 475.105 | Program output: 449.976
Correct output: 3999.600 | Program output: 999.985
Correct output: 279.985 | Program output: 123.437
Correct output: 201.372 | Program output: 211.258
Correct output: 189.382 | Program output: 158.222
Correct output: 1543.271 | Program output: 328.757
Correct output: 102.020 | Program output: 1.000
Correct output: 193.877 | Program output: 191.839
Correct output: 128.350 | Program output: 102.191
Correct output: 53.143 | Program output: 8.321
Correct output: 181.602 | Program output: 149.629
Correct output: 431.170 | Program output: 83.656
Correct output: 619.098 | Program output: 289.356
Correct output: 986.172 | Program output: 171.027
Correct output: 77.831 | Program output: 47.435
Correct output: 55.900 | Program output: 90.162
Correct output: 54.583 | Program output: 28.646
Correct output: 622.783 | Program output: 519.245
Correct output: 83.177 | Program output: 30.779
Correct output: 42.501 | Program output: 5.362
Correct output: 184.764 | Program output: 172.928
Correct output: 67.665 | Program output: 11.499
Correct output: 19.670 | Program output: 4.874
Correct output: 464.533 | Program output: 506.292
Correct output: 106.459 | Program output: 25.612
Correct output: 1108.353 | Program output: 347.302
Correct output: 56.702 | Program output: 50.834
Correct output: 53.970 | Program output: 26.465
Correct output: 259.503 | Program output: 44.112
Correct output: 101.480 | Program output: 38.153
Correct output: 56.812 | Program output: 7.527
Correct output: 75.112 | Program output: 42.596
Correct output: 104.689 | Program output: 70.212
Correct output: 27.529 | Program output: 39.539
Correct output: 3.963 | Program output: 2.389
Correct output: 83.268 | Program output: 24.304
Correct output: 11.973 | Program output: 1.787
Correct output: 76.197 | Program output: 23.278
Correct output: 99.025 | Program output: 53.520
Correct output: 1219.703 | Program output: 701.356
Correct output: 396.400 | Program output: 423.226
Correct output: 125.727 | Program output: 34.666
Correct output: 371.001 | Program output: 420.355
Correct output: 738.413 | Program output: 747.227
Correct output: 280.393 | Program output: 224.236
Correct output: 37.145 | Program output: 7.985
Correct output: 425.982 | Program output: 357.699
Correct output: 357.821 | Program output: 282.487
Correct output: 120.482 | Program output: 30.831
Correct output: 845.157 | Program output: 374.835
Correct output: 68.073 | Program output: 35.381
Correct output: 27.389 | Program output: 7.408
Correct output: 95.616 | Program output: 39.294
Correct output: 747.315 | Program output: 364.677
Correct output: 22.311 | Program output: 11.933
Correct output: 116.926 | Program output: 88.041
Correct output: 111.460 | Program output: 20.654
Correct output: 122.996 | Program output: 445.182
Correct output: 185.091 | Program output: 178.597
Correct output: 12.422 | Program output: 3.115
Correct output: 151.265 | Program output: 120.567
Correct output: 87.691 | Program output: 54.511
Correct output: 705.021 | Program output: 705.117
Correct output: 65.326 | Program output: 35.642
Correct output: 473.339 | Program output: 414.205
Correct output: 147.045 | Program output: 409.993
Correct output: 220.192 | Program output: 58.185
Correct output: 25.498 | Program output: 7.601
Correct output: 464.800 | Program output: 249.153
Correct output: 223.405 | Program output: 227.991
Correct output: 391.079 | Program output: 393.557
Correct output: 293.758 | Program output: 82.930
Correct output: 335.272 | Program output: 57.934
Correct output: 225.803 | Program output: 240.704
Correct output: 153.545 | Program output: 108.577
Correct output: 106.271 | Program output: 58.009
Correct output: 164.365 | Program output: 137.504
Correct output: 184.316 | Program output: 157.000
Correct output: 182.005 | Program output: 169.031
Correct output: 124.203 | Program output: 488.874
Correct output: 66.716 | Program output: 39.331
Correct output: 306.042 | Program output: 360.895
Correct output: 68.394 | Program output: 28.821
Correct output: 139.929 | Program output: 90.127
Correct output: 226.230 | Program output: 204.183
Correct output: 129.442 | Program output: 71.002
Correct output: 723.847 | Program output: 547.274
Correct output: 182.792 | Program output: 168.188
Correct output: 39.803 | Program output: 55.688
Correct output: 128.192 | Program output: 177.934
Correct output: 624.606 | Program output: 556.083
Correct output: 397.298 | Program output: 306.125
Correct output: 12.690 | Program output: 2.072
Correct output: 100.386 | Program output: 39.648
Correct output: 7.550 | Program output: 1.273
Correct output: 30.019 | Program output: 10.046
Correct output: 48.697 | Program output: 22.215
Correct output: 101.830 | Program output: 50.257
Correct output: 54.972 | Program output: 23.271
Correct output: 55.501 | Program output: 29.385
Correct output: 46.143 | Program output: 21.367
Correct output: 808.426 | Program output: 513.652
Correct output: 178.068 | Program output: 59.622
Correct output: 207.417 | Program output: 125.012
Correct output: 93.518 | Program output: 14.803
Correct output: 490.815 | Program output: 279.095
Correct output: 1247.817 | Program output: 608.009
Correct output: 160.740 | Program output: 144.620
Correct output: 1006.197 | Program output: 226.457
Correct output: 385.498 | Program output: 442.597
Correct output: 226.865 | Program output: 427.009
Correct output: 44.815 | Program output: 4.081
Correct output: 139.446 | Program output: 130.383
Correct output: 98.158 | Program output: 30.608
Correct output: 134.416 | Program output: 99.143
Correct output: 57.911 | Program output: 5.481
Correct output: 838.313 | Program output: 674.103
Correct output: 192.012 | Program output: 145.996
Correct output: 241.040 | Program output: 252.255
Correct output: 52.438 | Program output: 3.069
Correct output: 63.745 | Program output: 25.808
Correct output: 276.361 | Program output: 291.815
Correct output: 9.005 | Program output: 1.721
Correct output: 28.509 | Program output: 11.461
Correct output: 26.238 | Program output: 9.459
Correct output: 64.284 | Program output: 27.180
Correct output: 397.628 | Program output: 378.754
Correct output: 161.133 | Program output: 128.870
Correct output: 54.111 | Program output: 24.511
Correct output: 20.954 | Program output: 13.376
Correct output: 279.470 | Program output: 386.685
Correct output: 235.457 | Program output: 115.473
Correct output: 337.121 | Program output: 266.814
Correct output: 141.508 | Program output: 115.654
Correct output: 18.824 | Program output: 2.130
Correct output: 216.404 | Program output: 99.844
Correct output: 120.372 | Program output: 92.951
Correct output: 354.574 | Program output: 373.797
Correct output: 86.713 | Program output: 50.421
Correct output: 37.202 | Program output: 24.409
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 40 41 40 1 1 1 39 40 2 1 1 1 1 1 1 1 1 1 1 1 1 1 3 40 4 42 1 1 1 1 1 1 1 1 2 1 1 1 2 1 39 1 1 1 5 3 1 1 40 1 1 40 1 1 1 1 1 1 1 2 1 1 3 1 20 1 1 1 2 1 1 1 1 40 1 1 1 1 1 2 1 1 3 4 1 1 1 2 1 1 1 39 32 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 3 2 1 1 1 1 40 1 4 1 1 2 2 1 40 1 1 1 1 1 2 1 1 1 1 1 1 1 38 1 1 2 1 1 1 2 1 39 40 1 1 2 1 1 1 1 1 40 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 40 1 3 1 1 1 1 1 1 2 1)
Population mean number of elite cases: 1.03
Count of perfect (error zero) individuals by case: (0 0 40 41 40 0 0 0 39 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 42 0 0 0 0 0 0 0 0 0 0 0 1 0 0 39 0 0 0 0 0 0 0 40 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 39 40 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction float_pow} {:close 0, :instruction integer_pow} {:close 0, :instruction float_swap} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 1, :instruction boolean_deepdup} {:close 0, :instruction tag_float_19} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction in2} {:close 1, :instruction float_dec} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_sub} {:close 1, :instruction 1.0} {:close 1, :instruction exec_deepdup} {:close 0, :instruction in1} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction in2} {:close 0, :instruction float_empty} {:close 2, :instruction integer_add} {:close 0, :instruction in3} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction 0.0} {:close 1, :instruction float_yankdup} {:close 0, :instruction exec_while} {:close 0, :instruction exec_if} {:close 0, :instruction float_max} {:close 0, :instruction in2} {:close 0, :instruction exec_pop} {:close 0, :instruction in2} {:close 1, :instruction float_gte} {:close 0, :instruction float_shove} {:close 0, :instruction exec_do*count} {:close 0, :instruction in2} {:close 0, :instruction float_add} {:close 0, :instruction tagged_260} {:close 1, :instruction float_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dec} {:close 0, :instruction float_sqrt} {:close 0, :instruction 2.0} {:close 0, :instruction in1} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 1, :instruction 0.0} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_yank} {:close 0, :instruction 2.0} {:close 0, :instruction exec_y} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction integer_sub} {:close 0, :instruction float_add} {:close 0, :instruction float_gte} {:close 1, :instruction 1.0} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction float_sin} {:close 0, :instruction float_eq} {:close 0, :instruction float_sub} {:close 0, :instruction float_dup} {:close 0, :instruction integer_min} {:close 0, :instruction integer_pow} {:close 0, :instruction integer_abs} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 1, :instruction exec_while} {:close 0, :instruction tagged_61} {:close 1, :instruction 0.0} {:close 0, :instruction 1.0} {:close 1, :instruction float_shove} {:close 0, :instruction float_fromboolean} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction in2} {:close 0, :instruction float_lte} {:close 0, :instruction boolean_rot} {:close 0, :instruction float_dup} {:close 1, :instruction integer_yankdup} {:close 0, :instruction float_cos} {:close 0, :instruction exec_swap} {:close 0, :instruction float_sqrt} {:close 0, :instruction in3} {:close 0, :instruction float_mult} {:close 0, :instruction exec_flush} {:close 0, :instruction float_dup} {:close 1, :instruction in2} {:close 0, :instruction tagged_298} {:close 1, :instruction float_dup} {:close 1, :instruction float_empty} {:close 0, :instruction exec_y} {:close 0, :instruction in1} {:close 1, :instruction float_add} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_xor} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 0, :instruction float_floor} {:close 0, :instruction 0.0} {:close 0, :instruction float_lt} {:close 0, :instruction in2} {:close 0, :instruction float_negate} {:close 0, :instruction exec_do*count} {:close 0, :instruction 1.0} {:close 0, :instruction exec_dup_times} {:close 0, :instruction float_rot} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_pow} {:close 0, :instruction exec_deepdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction float_rot} {:close 0, :instruction 0.0} {:close 0, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction exec_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction in1} {:close 0, :instruction float_abs} {:close 0, :instruction in2} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction float_deepdup} {:close 1, :instruction float_fromboolean} {:close 0, :instruction exec_while} {:close 1, :instruction integer_deepdup} {:close 0, :instruction exec_if} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction float_fromboolean} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_min} {:close 0, :instruction float_min} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_s} {:close 0, :instruction float_arccos} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_pop} {:close 1, :instruction float_lt} {:close 1, :instruction integer_fromfloat} {:close 0, :instruction float_flush} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction float_div} {:close 0, :instruction float_floor} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 1, :instruction float_dup_items} {:close 0, :instruction exec_noop} {:close 0, :instruction float_mod} {:close 1, :instruction float_eq} {:close 1, :instruction exec_when} {:close 0, :instruction float_arccos} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_yank} {:close 0, :instruction in3} {:close 0, :instruction float_floor} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_dup} {:close 0, :instruction float_swap} {:close 1, :instruction float_negate} {:close 0, :instruction exec_empty} {:close 0, :instruction float_frominteger} {:close 0, :instruction float_yankdup} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction integer_add} {:close 0, :instruction float_cos} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 0, :instruction integer_abs} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction float_shove} {:close 0, :instruction float_tan} {:close 0, :instruction in2} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction float_abs} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_deepdup} {:close 1, :instruction 1.0} {:close 1, :instruction float_rot} {:close 0, :instruction exec_deepdup} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_deepdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup})
Best program: (exec_do*count (float_pow integer_pow float_swap boolean_invert_second_then_and in2 boolean_deepdup) tag_float_19 boolean_stackdepth in2 float_dec integer_yankdup integer_sub 1.0 exec_deepdup in1 exec_stackdepth in2 float_empty integer_add in3 boolean_frominteger integer_fromboolean 0.0 float_yankdup exec_while (exec_if (float_max in2 exec_pop (in2 float_gte) float_shove exec_do*count (in2 float_add tagged_260 float_shove) exec_k (integer_dup exec_empty integer_dec float_sqrt 2.0 in1 integer_sub integer_shove exec_y (0.0) boolean_empty boolean_yank 2.0 exec_y (exec_noop) in1 integer_sub float_add float_gte 1.0) (in1 in2 float_sin float_eq float_sub float_dup integer_min integer_pow integer_abs in1 in1 exec_while () tagged_61 0.0) 1.0 float_shove) (float_fromboolean boolean_dup_times in2) float_lte boolean_rot float_dup integer_yankdup) float_cos exec_swap (float_sqrt in3 float_mult exec_flush float_dup in2) (tagged_298 float_dup) float_empty exec_y (in1 float_add) exec_dup_items boolean_xor float_square in3 float_floor 0.0 float_lt in2 float_negate exec_do*count (1.0 exec_dup_times (float_rot boolean_eq integer_fromboolean) integer_pow exec_deepdup exec_do*count (in3 boolean_not in2) float_rot) 0.0 float_min in2 exec_dup (in3 exec_do*while (boolean_invert_second_then_and in3 in1 in1) float_abs in2 boolean_flush exec_while () boolean_stackdepth float_deepdup float_fromboolean) exec_while (integer_deepdup) exec_if (integer_swap) (exec_while (exec_noop boolean_invert_first_then_and float_fromboolean) boolean_invert_first_then_and integer_min float_min integer_negate) exec_s (float_arccos integer_rot) (integer_pop float_lt) (integer_fromfloat) float_flush exec_dup () boolean_dup_items float_div float_floor in2 exec_if (float_dup_items) (exec_noop float_mod float_eq) exec_when () float_arccos in1 in3 boolean_stackdepth boolean_invert_second_then_and float_yank in3 float_floor integer_lt integer_empty exec_dup (float_swap float_negate) exec_empty float_frominteger float_yankdup integer_lt integer_min integer_add float_cos integer_abs boolean_not integer_abs integer_gte boolean_swap in1 float_shove float_tan in2 integer_pop exec_if (float_abs exec_when (boolean_dup integer_deepdup) 1.0) (float_rot) exec_deepdup integer_mult integer_deepdup boolean_invert_second_then_and exec_yankdup boolean_dup)
Errors: [97.845 9.371 75.17 118.881 44.353 16.583 2.909 73.927 9.444 89.701 84.983 19.054 78.617 15.766 32.309 11.62 71.103 73.844 136.608 40.869 26.974 27.218 59.587 59.833 8.067 118.53 48.723 1.001 26.165 12.847 17.775 99.234 54.144 7.183 73.604 24.901 29.809 57.369 68.077 55.523 21.376 33.273 330.713 13.41 7.814 433.513 134.605 25.39 48.941 126.208 127.926 434.444 26.742 123.309 67.01 88.2 23.325 41.919 28.325 62.229 25.128 2999.615 156.548 9.886 31.16 1214.513 101.02 2.038 26.159 44.821 31.974 347.514 329.742 815.145 30.396 34.262 25.937 103.538 52.397 37.139 11.836 56.166 14.795 41.759 80.847 761.051 5.868 27.505 215.391 63.326 49.285 32.515 34.478 12.01 1.574 58.964 10.186 52.919 45.505 518.347 26.826 91.061 49.354 8.813 56.157 29.16 68.283 75.334 89.651 470.323 32.692 19.981 56.322 382.638 10.378 28.885 90.806 322.186 6.494 9.306 30.699 33.18 0.096 29.684 59.134 262.948 162.007 17.897 215.647 4.586 2.478 210.828 277.338 14.901 44.968 48.262 26.861 27.317 12.974 364.671 27.384 54.853 39.572 49.802 22.047 58.44 176.573 14.604 15.885 49.743 68.523 91.173 10.617 60.738 6.276 19.973 26.482 51.573 31.701 26.116 24.777 294.774 118.446 82.404 78.715 211.72 639.808 16.12 779.74 57.099 200.144 40.734 9.063 67.55 35.273 52.43 164.209 46.016 11.215 49.369 37.937 15.455 7.283 17.047 16.779 37.104 18.874 32.263 29.6 7.578 107.214 119.984 70.307 25.854 16.695 116.56 27.421 19.223 36.292 12.793]
Total: 21116.52199999999
Mean: 105.58261
Genome size: 208
Size: 244
Percent parens: 0.148
Age: 11
--- Population Statistics ---
Average total errors in population: 5.571216622438873E12
Median total errors in population: 42506.170999999995
Error averages by case: (2.6000034878423042E10 2.3455231650249466E10 3.001119003724002E10 3.2301886235405655E10 2.300007035125945E10 3.1000094987544315E10 3.0040509077066376E10 2.500006599324721E10 2.5000032129743618E10 2.500005006991532E10 2.200003429703433E10 2.4000561614420315E10 3.900004158972566E10 2.4000037036586803E10 2.800003474800511E10 2.8008418908823013E10 2.700003453401308E10 2.795373327131027E10 2.1000213806237656E10 2.3000034157338905E10 2.2000037184018623E10 2.400003419354009E10 2.5995295426233738E10 2.7956049408715515E10 2.7004356708694935E10 3.00546230038859E10 2.6000087180729458E10 1.8000033019236862E10 2.800135980043869E10 2.8764011227090294E10 2.6000037874862263E10 3.600020782909192E10 2.7000031113193966E10 2.900003109216823E10 2.400063588598752E10 3.3258952367936626E10 3.488279711741498E10 2.5000034352423805E10 2.8168527079617767E10 3.302900021521535E10 3.000003461534478E10 2.800373699055991E10 3.200003370105723E10 2.70000356079791E10 2.9114338179521923E10 3.300003515483312E10 3.000003590855331E10 2.3000032054504482E10 3.0000034545573708E10 3.1000035779037697E10 3.3285197136474297E10 2.8237420932103058E10 2.7015403596210495E10 3.0025726249339424E10 2.6059552179501377E10 2.6034048820140347E10 2.60217823911806E10 2.405380344460989E10 2.900003325687955E10 2.9000035801697617E10 2.9000034779382023E10 3.000004301055359E10 2.9000114250498085E10 3.709529184957631E10 2.505392741199096E10 2.705813662175348E10 2.100003851432738E10 2.7020647574146015E10 2.9003649267173374E10 2.5000036202153526E10 2.904353747514904E10 2.700003467743354E10 2.8366924019362293E10 2.6004202743659622E10 2.1000034404513905E10 2.9993178771530262E10 2.8000031234920574E10 3.0000139423772274E10 2.6000126530447887E10 2.8000034119976555E10 2.9435842828874245E10 3.4000036885441654E10 2.6000035423213215E10 2.9000036800110607E10 2.6001202078295288E10 2.7000038148362434E10 3.1000033824508747E10 2.600003532256533E10 2.8000034292224186E10 2.4002649040911526E10 2.4000034180961758E10 2.60000422661487E10 2.600005589258596E10 3.1000032107838215E10 2.200003102304387E10 3.200035584019436E10 2.9000277719641155E10 2.5000051817878487E10 3.2026760572280315E10 3.2000033453309677E10 2.8000034819650913E10 2.408216661677327E10 2.700003929879752E10 2.7000080066228893E10 2.997242879214026E10 2.400003412762101E10 2.900004204196951E10 3.200003453430004E10 2.802302970506566E10 3.101803671371308E10 3.313418986793131E10 2.901865477742434E10 3.1001740457745026E10 2.4000040626599552E10 2.5000210594278267E10 2.9009822950766594E10 2.5000118021291283E10 3.200003360187579E10 3.0007074225714966E10 2.200003404451625E10 3.000007690757337E10 2.3000172136944874E10 2.900007346174304E10 3.4162352950308937E10 3.1000032741510715E10 3.400003364061383E10 2.700071483545437E10 2.4000781832849487E10 2.6259359938558643E10 2.634324352502498E10 3.3000083617247684E10 2.8000034843867786E10 2.3000032474282246E10 2.989006490929792E10 2.8000101295822697E10 2.600961765924901E10 2.7022925221672745E10 2.7064789161135693E10 2.7003227020735092E10 3.5000034654816536E10 2.7000034704849693E10 2.800004018130833E10 2.9000038477914837E10 2.700008181569281E10 2.5484717756802147E10 2.9658149437867943E10 3.3704146725225964E10 2.976611052397817E10 2.9000034545292118E10 3.2006704968766415E10 2.8000035027236122E10 2.9000029646060925E10 2.2251900677227562E10 2.7256005930457024E10 3.0654050540296295E10 2.2000052970430084E10 2.5000034181134243E10 2.8007115268545612E10 2.5000143555687813E10 2.6000034216108227E10 2.5000032149550632E10 2.5000051895550953E10 2.500003557296856E10 2.8000491740900185E10 2.700005424730212E10 3.0030056102636894E10 2.7000034455695747E10 2.586071520123555E10 2.531694287694855E10 2.70000358398698E10 3.5000620934143486E10 2.9000033071621433E10 3.3000444454968212E10 2.7000031150178707E10 2.900026119044362E10 2.6000033315881367E10 2.50000690581133E10 2.4008716234532063E10 2.7000034579364594E10 2.500003618502526E10 2.700003447384633E10 2.9000036596839497E10 2.6000033035852688E10 3.0000039569780163E10 2.4005990507072525E10 3.400047216473017E10 3.1000042112437847E10 3.500050643821379E10 2.900003308781204E10 2.3318410803443882E10 3.900004443262023E10 2.700006934367269E10 3.0000031551503365E10 2.800759730140222E10 2.7000033072518227E10 2.4000060466997524E10 2.4001354878517048E10 2.9000032739266068E10 2.5000204050647144E10 2.9000215490875286E10)
Error minima by case: (0.025 0.014 0.0 0.0 0.0 0.111 0.548 0.118 0.0 0.0 0.112 0.176 1.087 0.022 0.076 0.374 0.81 0.072 0.549 0.097 0.136 0.059 0.261 0.394 1.286 0.0 0.069 0.0 0.039 0.012 3.389 2.254 0.086 0.014 0.004 0.522 0.146 0.179 0.381 0.0 0.095 0.173 0.0 0.486 1.914 1.916 2.354 0.069 1.709 0.982 0.0 3.705 1.532 0.0 0.318 0.104 0.277 0.004 0.068 5.718 1.983 0.36 0.513 0.005 0.603 1.936 0.02 0.178 0.033 0.156 0.457 0.201 5.344 5.775 0.136 0.0 0.49 0.721 0.032 0.033 0.679 0.054 0.071 0.465 0.076 5.534 0.117 0.03 2.141 0.05 0.083 0.93 0.132 0.0 0.0 0.111 0.027 0.262 0.151 3.834 2.973 0.268 1.611 8.813 0.387 0.014 0.197 0.004 0.01 7.226 0.073 0.076 0.108 6.83 0.014 0.518 0.556 0.0 1.254 0.003 1.265 1.011 0.096 0.345 0.043 0.0 2.682 0.209 0.221 0.166 0.463 0.446 2.728 0.217 1.041 0.005 0.465 0.438 0.318 0.0 0.063 0.903 0.025 0.638 0.821 0.398 9.78 0.017 0.0 0.0 5.39 0.077 0.001 0.017 0.041 0.015 0.249 0.03 0.0 0.067 0.02 9.948 1.638 0.001 0.005 0.234 52.688 0.741 6.178 3.242 0.006 0.033 0.33 0.309 0.404 0.048 10.16 0.184 0.299 0.042 0.048 1.159 0.041 0.009 0.035 0.079 0.719 0.128 0.089 0.0 0.123 1.673 0.121 0.173 0.008 0.404 0.205 0.309 0.239 0.338)
Average genome size in population (length): 197.271
Average program size in population (points): 231.281
Average percent parens in population: 0.146
Minimum age in population: 11.0
Maximum age in population: 11.0
Average age in population: 11.0
Median age in population: 11.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.693
Error (vector) diversity:			 0.693
Behavioral diversity:				 0.702
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 12000
Number of program executions (running on a single case counts as 1 execution): 2400000
Number of point (instruction) evaluations so far: 1998447678
--- Timings ---
Current time: 1745363790221 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Bouncing Balls problem report - generation 12
Test total error for best: 185181.8920000004
Test mean error for best: 92.59095
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 24.862
Correct output: 12.371 | Program output: 14.401
Correct output: 73.158 | Program output: 168.104
Correct output: 107.414 | Program output: 222.675
Correct output: 66.004 | Program output: 45.841
Correct output: 18.351 | Program output: 9.312
Correct output: 203.233 | Program output: 239.182
Correct output: 168.282 | Program output: 144.629
Correct output: 22.792 | Program output: 33.135
Correct output: 101.076 | Program output: 30.289
Correct output: 89.438 | Program output: 18.538
Correct output: 167.016 | Program output: 194.874
Correct output: 249.241 | Program output: 332.735
Correct output: 17.252 | Program output: 8.513
Correct output: 78.298 | Program output: 89.181
Correct output: 192.343 | Program output: 222.825
Correct output: 325.936 | Program output: 280.974
Correct output: 137.403 | Program output: 110.632
Correct output: 159.858 | Program output: 56.730
Correct output: 43.816 | Program output: 14.279
Correct output: 46.214 | Program output: 49.901
Correct output: 41.847 | Program output: 40.907
Correct output: 111.620 | Program output: 96.688
Correct output: 136.088 | Program output: 124.912
Correct output: 180.744 | Program output: 217.046
Correct output: 77.511 | Program output: 201.734
Correct output: 79.636 | Program output: 68.248
Correct output: 2.001 | Program output: 6.000
Correct output: 114.432 | Program output: 138.121
Correct output: 19.059 | Program output: 22.897
Correct output: 290.212 | Program output: 319.030
Correct output: 197.499 | Program output: 310.440
Correct output: 64.127 | Program output: 32.180
Correct output: 8.284 | Program output: 7.332
Correct output: 203.329 | Program output: 179.130
Correct output: 104.522 | Program output: 129.539
Correct output: 124.531 | Program output: 144.898
Correct output: 125.101 | Program output: 116.081
Correct output: 133.674 | Program output: 113.325
Correct output: 112.074 | Program output: 102.666
Correct output: 308.094 | Program output: 333.514
Correct output: 106.842 | Program output: 122.788
Correct output: 144.377 | Program output: 364.430
Correct output: 296.288 | Program output: 319.874
Correct output: 205.797 | Program output: 249.670
Correct output: 985.735 | Program output: 470.547
Correct output: 680.660 | Program output: 467.037
Correct output: 32.170 | Program output: 24.910
Correct output: 343.239 | Program output: 309.222
Correct output: 584.598 | Program output: 415.254
Correct output: 97.620 | Program output: 222.265
Correct output: 712.538 | Program output: 298.025
Correct output: 123.589 | Program output: 147.446
Correct output: 69.710 | Program output: 199.995
Correct output: 250.818 | Program output: 225.639
Correct output: 120.502 | Program output: 70.713
Correct output: 137.940 | Program output: 164.977
Correct output: 64.091 | Program output: 54.460
Correct output: 65.119 | Program output: 77.312
Correct output: 335.947 | Program output: 378.616
Correct output: 475.105 | Program output: 410.605
Correct output: 3999.600 | Program output: 698.995
Correct output: 279.985 | Program output: 172.956
Correct output: 201.372 | Program output: 247.356
Correct output: 189.382 | Program output: 204.267
Correct output: 1543.271 | Program output: 333.170
Correct output: 102.020 | Program output: 7.000
Correct output: 193.877 | Program output: 232.314
Correct output: 128.350 | Program output: 152.289
Correct output: 53.143 | Program output: 28.532
Correct output: 181.602 | Program output: 196.922
Correct output: 431.170 | Program output: 133.639
Correct output: 619.098 | Program output: 305.739
Correct output: 986.172 | Program output: 215.056
Correct output: 77.831 | Program output: 91.519
Correct output: 55.900 | Program output: 120.536
Correct output: 54.583 | Program output: 64.811
Correct output: 622.783 | Program output: 452.012
Correct output: 83.177 | Program output: 68.107
Correct output: 42.501 | Program output: 21.318
Correct output: 184.764 | Program output: 217.196
Correct output: 67.665 | Program output: 35.473
Correct output: 19.670 | Program output: 19.374
Correct output: 464.533 | Program output: 444.617
Correct output: 106.459 | Program output: 60.444
Correct output: 1108.353 | Program output: 345.044
Correct output: 56.702 | Program output: 95.613
Correct output: 53.970 | Program output: 61.404
Correct output: 259.503 | Program output: 86.423
Correct output: 101.480 | Program output: 78.666
Correct output: 56.812 | Program output: 26.204
Correct output: 75.112 | Program output: 84.984
Correct output: 104.689 | Program output: 119.096
Correct output: 27.529 | Program output: 69.030
Correct output: 3.963 | Program output: 9.935
Correct output: 83.268 | Program output: 57.952
Correct output: 11.973 | Program output: 9.363
Correct output: 76.197 | Program output: 56.763
Correct output: 99.025 | Program output: 99.009
Correct output: 1219.703 | Program output: 551.696
Correct output: 396.400 | Program output: 393.850
Correct output: 125.727 | Program output: 74.158
Correct output: 371.001 | Program output: 392.574
Correct output: 738.413 | Program output: 575.723
Correct output: 280.393 | Program output: 257.547
Correct output: 37.145 | Program output: 26.975
Correct output: 425.982 | Program output: 351.950
Correct output: 357.821 | Program output: 301.263
Correct output: 120.482 | Program output: 68.162
Correct output: 845.157 | Program output: 362.934
Correct output: 68.073 | Program output: 74.886
Correct output: 27.389 | Program output: 26.001
Correct output: 95.616 | Program output: 80.790
Correct output: 747.315 | Program output: 357.217
Correct output: 22.311 | Program output: 36.110
Correct output: 116.926 | Program output: 137.953
Correct output: 111.460 | Program output: 52.639
Correct output: 122.996 | Program output: 349.515
Correct output: 185.091 | Program output: 221.569
Correct output: 12.422 | Program output: 14.665
Correct output: 151.265 | Program output: 170.027
Correct output: 87.691 | Program output: 99.883
Correct output: 705.021 | Program output: 554.106
Correct output: 65.326 | Program output: 75.151
Correct output: 473.339 | Program output: 388.831
Correct output: 147.045 | Program output: 330.944
Correct output: 220.192 | Program output: 105.078
Correct output: 25.498 | Program output: 26.330
Correct output: 464.800 | Program output: 276.977
Correct output: 223.405 | Program output: 260.601
Correct output: 391.079 | Program output: 375.519
Correct output: 293.758 | Program output: 133.085
Correct output: 335.272 | Program output: 103.861
Correct output: 225.803 | Program output: 270.475
Correct output: 153.545 | Program output: 158.796
Correct output: 106.271 | Program output: 103.926
Correct output: 164.365 | Program output: 186.203
Correct output: 184.316 | Program output: 203.513
Correct output: 182.005 | Program output: 213.856
Correct output: 124.203 | Program output: 372.290
Correct output: 66.716 | Program output: 80.827
Correct output: 306.042 | Program output: 354.449
Correct output: 68.394 | Program output: 65.001
Correct output: 139.929 | Program output: 140.509
Correct output: 226.230 | Program output: 242.374
Correct output: 129.442 | Program output: 119.734
Correct output: 723.847 | Program output: 467.534
Correct output: 182.792 | Program output: 212.347
Correct output: 39.803 | Program output: 86.914
Correct output: 128.192 | Program output: 189.177
Correct output: 624.606 | Program output: 473.114
Correct output: 397.298 | Program output: 317.110
Correct output: 12.690 | Program output: 11.127
Correct output: 100.386 | Program output: 81.136
Correct output: 7.550 | Program output: 7.873
Correct output: 30.019 | Program output: 32.279
Correct output: 48.697 | Program output: 54.513
Correct output: 101.830 | Program output: 95.093
Correct output: 54.972 | Program output: 48.755
Correct output: 55.501 | Program output: 66.612
Correct output: 46.143 | Program output: 53.500
Correct output: 808.426 | Program output: 448.688
Correct output: 178.068 | Program output: 106.309
Correct output: 207.417 | Program output: 175.008
Correct output: 93.518 | Program output: 42.144
Correct output: 490.815 | Program output: 298.536
Correct output: 1247.817 | Program output: 501.847
Correct output: 160.740 | Program output: 192.760
Correct output: 1006.197 | Program output: 259.764
Correct output: 385.498 | Program output: 406.386
Correct output: 226.865 | Program output: 396.527
Correct output: 44.815 | Program output: 17.769
Correct output: 139.446 | Program output: 179.563
Correct output: 98.158 | Program output: 67.924
Correct output: 134.416 | Program output: 149.106
Correct output: 57.911 | Program output: 21.543
Correct output: 838.313 | Program output: 537.404
Correct output: 192.012 | Program output: 193.632
Correct output: 241.040 | Program output: 278.617
Correct output: 52.438 | Program output: 14.558
Correct output: 63.745 | Program output: 60.666
Correct output: 276.361 | Program output: 306.976
Correct output: 9.005 | Program output: 9.182
Correct output: 28.509 | Program output: 35.417
Correct output: 26.238 | Program output: 30.363
Correct output: 64.284 | Program output: 63.200
Correct output: 397.628 | Program output: 365.743
Correct output: 161.133 | Program output: 178.567
Correct output: 54.111 | Program output: 58.190
Correct output: 20.954 | Program output: 33.175
Correct output: 279.470 | Program output: 371.384
Correct output: 235.457 | Program output: 165.565
Correct output: 337.121 | Program output: 289.225
Correct output: 141.508 | Program output: 165.689
Correct output: 18.824 | Program output: 11.277
Correct output: 216.404 | Program output: 150.610
Correct output: 120.372 | Program output: 143.598
Correct output: 354.574 | Program output: 362.454
Correct output: 86.713 | Program output: 95.241
Correct output: 37.202 | Program output: 58.073
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 35 36 34 1 1 1 35 34 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 35 1 41 1 1 1 1 1 1 1 1 3 1 1 1 1 1 36 1 1 1 1 3 1 3 37 1 1 36 1 4 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 6 2 36 1 1 1 1 1 3 1 1 4 1 1 1 1 1 1 1 1 36 31 1 1 1 1 1 1 5 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 35 1 3 1 1 3 2 1 36 1 1 1 2 1 6 1 1 1 1 1 2 1 36 1 1 1 1 1 1 2 2 35 35 1 1 1 1 1 1 1 1 35 3 1 1 1 1 2 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 35 1 3 1 1 1 1 1 1 1 1)
Population mean number of elite cases: 0.94
Count of perfect (error zero) individuals by case: (0 0 35 36 34 0 0 0 35 34 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 35 0 41 0 0 0 0 0 0 0 0 0 0 0 0 0 0 36 0 0 0 0 0 0 0 37 0 0 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 36 31 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 0 0 0 0 0 0 0 36 0 0 0 0 0 0 0 0 0 0 0 0 0 36 0 0 0 0 0 0 0 0 35 35 0 0 0 0 0 1 0 0 35 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.71
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction float_yankdup} {:close 0, :instruction 2.0} {:close 2, :instruction float_mult} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction integer_div} {:close 0, :instruction integer_max} {:close 0, :instruction float_pop} {:close 0, :instruction float_empty} {:close 0, :instruction boolean_not} {:close 0, :instruction in3} {:close 0, :instruction exec_if} {:close 0, :instruction tag_exec_187} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction integer_shove} {:close 0, :instruction in3} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_inc} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 0, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction float_dec} {:close 0, :instruction in2} {:close 0, :instruction float_lte} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_yankdup} {:close 0, :instruction 2.0} {:close 0, :instruction float_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_eq} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 1, :instruction 0.0} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_div} {:close 0, :instruction 1.0} {:close 0, :instruction float_arctan} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction integer_div} {:close 2, :instruction float_fromboolean} {:close 0, :instruction float_rot} {:close 1, :instruction 0.0} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction 1.0} {:close 0, :instruction float_yankdup} {:close 1, :instruction float_ceiling} {:close 0, :instruction 0.0} {:close 2, :instruction float_max} {:close 0, :instruction integer_sub} {:close 1, :instruction float_yankdup} {:close 1, :instruction boolean_eq} {:close 0, :instruction float_floor} {:close 1, :instruction integer_lt} {:close 0, :instruction in2} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_swap} {:close 0, :instruction float_add} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction integer_negate} {:close 0, :instruction exec_y} {:close 1, :instruction float_add} {:close 0, :instruction in3} {:close 0, :instruction float_div} {:close 0, :instruction float_frominteger} {:close 0, :instruction integer_flush} {:close 0, :instruction in2} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in1} {:close 0, :instruction exec_when} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 1, :instruction float_sin} {:close 1, :instruction float_dup_times} {:close 1, :instruction float_sqrt} {:close 0, :instruction integer_deepdup} {:close 0, :instruction float_min} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_arcsin} {:close 0, :instruction float_sub} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_rot} {:close 0, :instruction float_flush} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in3} {:close 0, :instruction integer_deepdup} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_shove} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 0, :instruction float_shove} {:close 0, :instruction float_dec} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction float_ceiling} {:close 1, :instruction exec_dup_times} {:close 0, :instruction float_arccos} {:close 1, :instruction float_flush} {:close 0, :instruction float_log10} {:close 0, :instruction integer_yankdup} {:close 2, :instruction 0.0} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction float_gt} {:close 2, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction float_square} {:close 0, :instruction in2} {:close 0, :instruction in2} {:close 2, :instruction integer_dup_items} {:close 1, :instruction integer_negate} {:close 0, :instruction float_floor} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction float_min} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 0, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction float_log10} {:close 0, :instruction float_log2} {:close 1, :instruction in1} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_rot} {:close 0, :instruction float_sub} {:close 0, :instruction float_flush} {:close 0, :instruction float_ceiling} {:close 1, :instruction in2} {:close 1, :instruction integer_gt} {:close 0, :instruction integer_div} {:close 1, :instruction float_square} {:close 0, :instruction integer_min} {:close 0, :instruction 2.0} {:close 1, :instruction float_fromboolean} {:close 0, :instruction exec_deepdup} {:close 0, :instruction float_sin} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 1, :instruction integer_mod} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_yank} {:close 0, :instruction float_deepdup} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_add} {:close 0, :instruction float_log2} {:close 0, :instruction integer_gte} {:close 1, :instruction float_deepdup} {:close 0, :instruction float_frominteger} {:close 0, :instruction exec_when} {:close 0, :instruction 2.0} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 1, :instruction 1.0} {:close 0, :instruction in2} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_if} {:close 1, :instruction 1.0} {:close 0, :instruction 2.0})
Best program: (in2 float_yankdup 2.0 float_mult boolean_deepdup exec_dup_times (in2 integer_yankdup in1 float_min) in2 integer_div integer_max float_pop float_empty boolean_not in3 exec_if (tag_exec_187 (integer_fromfloat integer_shove in3 exec_dup_times (exec_do*count (float_inc integer_dup boolean_pop) exec_do*times (exec_stackdepth exec_do*times () float_rot in3 integer_sub) integer_stackdepth float_dec in2 float_lte in1 exec_noop integer_dec integer_yankdup 2.0 float_sub in1 integer_eq exec_rot () () (integer_sub exec_y (exec_y (in2) float_min 0.0) exec_do*times () integer_div 1.0 float_arctan integer_lte boolean_deepdup in3 boolean_yank integer_shove integer_dup boolean_yankdup integer_div) float_fromboolean)) float_rot 0.0) (integer_fromboolean 1.0 float_yankdup float_ceiling) 0.0 float_max integer_sub float_yankdup boolean_eq float_floor integer_lt in2 integer_dup in3 boolean_yank exec_swap () (float_add in3 in2) float_stackdepth integer_negate exec_y (float_add) in3 float_div float_frominteger integer_flush in2 integer_deepdup in1 exec_when (in1 in3 float_sin) float_dup_times float_sqrt integer_deepdup float_min in2 exec_s (float_arcsin float_sub boolean_invert_second_then_and in2) (in1 in2 exec_rot (float_flush integer_lte exec_eq) (integer_dup integer_deepdup in3 integer_deepdup boolean_invert_first_then_and) (in3 boolean_shove in1 in2 boolean_invert_first_then_and exec_eq float_shove float_dec integer_fromfloat float_ceiling exec_dup_times () float_arccos float_flush) float_log10 integer_yankdup 0.0) () integer_fromfloat in2 exec_swap (float_gt in3) () in2 boolean_eq integer_rot float_square in2 in2 integer_dup_items integer_negate float_floor boolean_invert_first_then_and float_min exec_noop integer_negate in3 exec_flush float_log10 float_log2 in1 boolean_or integer_rot float_sub float_flush float_ceiling in2 integer_gt integer_div float_square integer_min 2.0 float_fromboolean exec_deepdup float_sin in1 boolean_invert_second_then_and integer_empty integer_mod boolean_invert_first_then_and in3 float_min exec_swap (exec_yank) (float_deepdup integer_lt) exec_do*while (integer_add float_log2 integer_gte float_deepdup) float_frominteger exec_when (2.0 integer_abs) boolean_not 1.0 in2 boolean_not exec_eq boolean_invert_first_then_and exec_if (1.0) (2.0))
Errors: [79.735 2.03 94.946 115.261 20.163 9.039 35.949 23.653 10.343 70.787 70.9 27.858 83.495 8.739 10.883 30.482 44.962 26.771 103.128 29.537 3.687 0.94 14.932 11.176 36.302 124.223 11.387 3.999 23.69 3.838 28.818 112.942 31.946 0.952 24.199 25.016 20.366 9.02 20.348 9.408 25.42 15.946 220.053 23.585 43.874 515.188 213.623 7.259 34.017 169.345 124.645 414.513 23.856 130.285 25.179 49.788 27.037 9.63 12.193 42.669 64.5 3300.605 107.029 45.984 14.886 1210.101 95.02 38.437 23.94 24.61 15.32 297.531 313.36 771.115 13.689 64.635 10.228 170.772 15.07 21.183 32.432 32.192 0.296 19.916 46.015 763.309 38.911 7.433 173.081 22.813 30.608 9.873 14.407 41.501 5.972 25.316 2.61 19.434 0.016 668.007 2.55 51.569 21.573 162.691 22.846 10.17 74.032 56.559 52.32 482.223 6.814 1.388 14.826 390.098 13.798 21.026 58.821 226.52 36.478 2.244 18.761 12.192 150.916 9.825 84.508 183.899 115.115 0.831 187.823 37.196 15.56 160.673 231.41 44.672 5.251 2.345 21.838 19.197 31.851 248.087 14.111 48.407 3.392 0.58 16.143 9.708 256.313 29.555 47.111 60.985 151.492 80.189 1.562 19.25 0.324 2.26 5.816 6.737 6.217 11.112 7.357 359.738 71.759 32.409 51.374 192.279 745.969 32.02 746.433 20.888 169.662 27.046 40.117 30.234 14.69 36.368 300.909 1.62 37.577 37.879 3.079 30.615 0.177 6.908 4.125 1.084 31.885 17.434 4.079 12.221 91.914 69.892 47.895 24.181 7.547 65.794 23.226 7.88 8.528 20.871]
Total: 19613.535
Mean: 98.06767
Genome size: 204
Size: 238
Percent parens: 0.143
Age: 12
--- Population Statistics ---
Average total errors in population: 5.352909317363732E12
Median total errors in population: 42506.170999999995
Error averages by case: (2.6000036478226707E10 2.0000033026077595E10 2.700058046155343E10 2.630189007388329E10 2.278778502933201E10 2.7000035143723434E10 3.304051296118835E10 2.5000796323355545E10 2.100063555781342E10 2.1021390014507313E10 2.70000363083204E10 2.900030321219857E10 2.700006001562769E10 2.000003602063821E10 2.6009450372701126E10 2.7004231671201508E10 3.3000045226530155E10 2.500013347582223E10 2.3000233424160637E10 2.3766186205708645E10 2.6019761941267395E10 2.1000449536896507E10 3.2000155148990944E10 2.500010519089367E10 3.2004389132085556E10 2.602886379074947E10 2.8012224006974716E10 2.000003500869569E10 3.1000041884289513E10 2.0000101171076756E10 2.9000058057642803E10 2.7000096256698845E10 2.0000108783322758E10 2.60000350121741E10 2.7049700951034653E10 2.50000351490265E10 2.7000036991058575E10 2.7000421098725536E10 3.2007207672493824E10 3.0000036477085518E10 2.7216462972394802E10 3.108417552350302E10 2.9000049176841187E10 3.000004046243839E10 3.1057200092862244E10 2.5000059444161266E10 2.8000098488650833E10 2.000301570050315E10 2.800005624101667E10 2.70000750975898E10 2.6285200948117786E10 2.6000042218051575E10 3.3000038769618317E10 2.602268965734594E10 2.9010821814700466E10 3.2032103290254765E10 2.9000070783712955E10 2.000523356710662E10 2.5742124117381176E10 2.600013562608111E10 2.800065012633511E10 3.0000046667320972E10 2.3016342830699265E10 3.009530359459389E10 2.7000680264371002E10 2.900004242474919E10 2.5000041517419907E10 2.6010381850522736E10 2.500006830580389E10 2.700005139917001E10 2.5000340546084408E10 3.2000063971943478E10 2.8000051008036587E10 2.8075774182495247E10 2.700327362130247E10 2.600003753467444E10 2.8177122510159687E10 2.5000070518247715E10 2.4011192838575626E10 2.0059886860793972E10 2.600224375320392E10 2.304860855062574E10 2.6404444848093605E10 2.900008847071196E10 2.800032844812368E10 3.0000042055586597E10 2.6000034443578217E10 2.4732694699554344E10 2.7000044300759445E10 2.600003636139916E10 2.50000362184892E10 3.4000040242629234E10 2.8142880173008038E10 2.5000035058862442E10 1.8000035012475384E10 2.500020328253227E10 2.50001125693453E10 2.9000101698508724E10 2.6000034447231873E10 2.7000079026099743E10 3.3000097379778603E10 2.2945946171832367E10 3.1000040589933613E10 3.4000271704091194E10 2.4129110644671093E10 2.1000272480380505E10 2.700007513529601E10 2.5000043167945053E10 2.301154836356037E10 2.5000049370619343E10 3.0391907391676624E10 2.2037285042194782E10 2.6000060137786766E10 2.9000071621475323E10 1.9000396025727642E10 2.500003773861856E10 2.3925190326046146E10 2.9000046905285503E10 3.400708014284945E10 2.000003606538641E10 3.2000106008261684E10 2.9000041297674263E10 3.200023871834551E10 2.540139279648857E10 2.9000048098457546E10 2.800004573409535E10 2.200003575588602E10 2.2001527307808586E10 2.6830625747843323E10 2.617165012384816E10 2.400005114265093E10 2.7000086765040012E10 2.800004097241803E10 2.9445066761066174E10 3.300585925986143E10 2.700003657703534E10 2.9000143471374004E10 2.9000039443920776E10 3.0003288959037716E10 2.8000050185371323E10 3.100046062879764E10 3.4000073488366386E10 2.7002848159192204E10 2.6003924740942097E10 2.7027464739247856E10 2.500003855352876E10 2.4000075830998592E10 2.7001525758454636E10 2.5000035165980537E10 2.600670797088665E10 3.2000102450373924E10 3.500003454983617E10 1.90000330468125E10 2.400003530713165E10 2.400003301788243E10 2.0233923894093407E10 2.4106379950848812E10 2.4000035333049793E10 2.275565515632812E10 2.6275603375665432E10 2.400122680636157E10 3.0000122378400925E10 2.7000047744558903E10 3.3039720464394173E10 2.6003635310061344E10 2.900004181241482E10 2.8000042179921394E10 2.600023709123424E10 3.072012275090464E10 2.8000126131499466E10 2.6000067576908638E10 2.2199262509724636E10 2.6987147779398098E10 2.5190926151595554E10 2.4198533377005524E10 3.00000393763657E10 2.900021353898409E10 3.2000482298907238E10 3.2000072321758484E10 2.6000042529882336E10 3.1000371693706547E10 3.1000076607233875E10 1.9000037020171352E10 2.3001332797036663E10 2.0000037645091816E10 2.9000916639773125E10 2.6000066515531918E10 2.9973422853541874E10 2.200034442879971E10 2.0323248261931267E10 2.7000074117146103E10 3.0000070380226547E10 3.500005144769412E10 3.2000058734738197E10 2.1000045429501926E10 2.900581932911602E10 3.200004141507306E10 3.500008970949397E10 2.7000040209857407E10 2.123461485752401E10)
Error minima by case: (0.014 0.014 0.0 0.0 0.0 0.046 0.157 0.596 0.0 0.0 0.011 0.48 0.087 0.091 0.074 0.374 0.807 0.0 0.138 0.042 0.15 0.023 0.279 0.325 0.399 0.0 0.093 0.0 0.039 0.008 1.611 5.429 0.136 0.021 0.004 0.29 0.146 0.347 0.503 1.0 0.975 0.176 0.0 0.215 0.501 0.039 0.453 0.069 1.256 9.909 0.0 7.417 0.013 0.0 1.237 0.345 0.153 0.004 0.221 1.413 0.805 0.36 0.027 0.005 0.397 11.486 0.01 0.178 0.323 0.036 0.088 0.073 0.65 5.775 0.036 0.0 0.359 0.574 0.129 0.045 0.193 0.04 0.071 1.179 0.076 0.31 0.117 0.11 0.613 0.05 0.056 0.208 0.541 0.0 0.0 0.05 0.0 0.136 0.016 6.989 0.228 0.268 2.422 2.688 0.501 0.014 0.468 2.974 0.01 9.018 0.144 0.05 0.025 3.632 0.106 0.514 0.718 0.0 0.284 0.003 1.265 0.309 0.096 0.005 0.92 0.0 1.078 0.307 5.213 0.262 0.537 0.446 1.695 0.568 0.023 0.374 0.196 0.191 0.784 0.0 0.029 0.006 0.132 0.443 0.199 0.08 4.692 0.017 0.0 0.0 4.996 0.645 0.001 0.017 0.08 0.0 0.078 0.17 0.0 0.067 0.057 3.345 0.931 0.206 0.024 0.124 1.811 0.018 52.719 1.065 0.043 0.004 0.004 0.273 0.404 0.172 2.772 0.099 0.271 0.009 0.605 0.038 0.087 0.127 0.035 0.079 1.167 0.982 0.057 0.0 0.409 1.673 0.121 0.833 0.009 0.044 1.482 1.691 0.105 0.067)
Average genome size in population (length): 198.279
Average program size in population (points): 231.946
Average percent parens in population: 0.144
Minimum age in population: 12.0
Maximum age in population: 12.0
Average age in population: 12.0
Median age in population: 12.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.716
Error (vector) diversity:			 0.716
Behavioral diversity:				 0.72
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 13000
Number of program executions (running on a single case counts as 1 execution): 2600000
Number of point (instruction) evaluations so far: 2202553699
--- Timings ---
Current time: 1745363955702 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Bouncing Balls problem report - generation 13
Test total error for best: 175737.93000000028
Test mean error for best: 87.86897
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 27.862
Correct output: 12.371 | Program output: 17.401
Correct output: 73.158 | Program output: 115.083
Correct output: 107.414 | Program output: 151.540
Correct output: 66.004 | Program output: 34.073
Correct output: 18.351 | Program output: 12.312
Correct output: 203.233 | Program output: 242.182
Correct output: 168.282 | Program output: 147.629
Correct output: 22.792 | Program output: 25.508
Correct output: 101.076 | Program output: 23.231
Correct output: 89.438 | Program output: 21.538
Correct output: 167.016 | Program output: 197.874
Correct output: 249.241 | Program output: 287.735
Correct output: 17.252 | Program output: 11.513
Correct output: 78.298 | Program output: 92.181
Correct output: 192.343 | Program output: 225.825
Correct output: 325.936 | Program output: 283.974
Correct output: 137.403 | Program output: 113.632
Correct output: 159.858 | Program output: 59.730
Correct output: 43.816 | Program output: 17.279
Correct output: 46.214 | Program output: 52.901
Correct output: 41.847 | Program output: 43.907
Correct output: 111.620 | Program output: 99.688
Correct output: 136.088 | Program output: 127.912
Correct output: 180.744 | Program output: 220.046
Correct output: 77.511 | Program output: 137.987
Correct output: 79.636 | Program output: 71.248
Correct output: 2.001 | Program output: 8.000
Correct output: 114.432 | Program output: 141.121
Correct output: 19.059 | Program output: 22.897
Correct output: 290.212 | Program output: 322.030
Correct output: 197.499 | Program output: 269.440
Correct output: 64.127 | Program output: 35.180
Correct output: 8.284 | Program output: 10.332
Correct output: 203.329 | Program output: 182.130
Correct output: 104.522 | Program output: 113.539
Correct output: 124.531 | Program output: 126.898
Correct output: 125.101 | Program output: 119.081
Correct output: 133.674 | Program output: 116.325
Correct output: 112.074 | Program output: 105.666
Correct output: 308.094 | Program output: 336.514
Correct output: 106.842 | Program output: 125.788
Correct output: 144.377 | Program output: 246.544
Correct output: 296.288 | Program output: 322.874
Correct output: 205.797 | Program output: 252.670
Correct output: 985.735 | Program output: 473.547
Correct output: 680.660 | Program output: 470.037
Correct output: 32.170 | Program output: 27.910
Correct output: 343.239 | Program output: 312.222
Correct output: 584.598 | Program output: 418.254
Correct output: 97.620 | Program output: 151.212
Correct output: 712.538 | Program output: 301.025
Correct output: 123.589 | Program output: 150.446
Correct output: 69.710 | Program output: 136.596
Correct output: 250.818 | Program output: 228.639
Correct output: 120.502 | Program output: 73.713
Correct output: 137.940 | Program output: 167.977
Correct output: 64.091 | Program output: 57.460
Correct output: 65.119 | Program output: 80.312
Correct output: 335.947 | Program output: 381.616
Correct output: 475.105 | Program output: 413.605
Correct output: 3999.600 | Program output: 701.995
Correct output: 279.985 | Program output: 175.956
Correct output: 201.372 | Program output: 250.356
Correct output: 189.382 | Program output: 207.267
Correct output: 1543.271 | Program output: 336.170
Correct output: 102.020 | Program output: 9.000
Correct output: 193.877 | Program output: 235.314
Correct output: 128.350 | Program output: 155.289
Correct output: 53.143 | Program output: 31.532
Correct output: 181.602 | Program output: 199.922
Correct output: 431.170 | Program output: 136.639
Correct output: 619.098 | Program output: 308.739
Correct output: 986.172 | Program output: 218.056
Correct output: 77.831 | Program output: 94.519
Correct output: 55.900 | Program output: 83.428
Correct output: 54.583 | Program output: 67.811
Correct output: 622.783 | Program output: 455.012
Correct output: 83.177 | Program output: 71.107
Correct output: 42.501 | Program output: 24.318
Correct output: 184.764 | Program output: 220.196
Correct output: 67.665 | Program output: 33.473
Correct output: 19.670 | Program output: 22.374
Correct output: 464.533 | Program output: 447.617
Correct output: 106.459 | Program output: 63.444
Correct output: 1108.353 | Program output: 348.044
Correct output: 56.702 | Program output: 84.613
Correct output: 53.970 | Program output: 64.404
Correct output: 259.503 | Program output: 89.423
Correct output: 101.480 | Program output: 81.666
Correct output: 56.812 | Program output: 29.204
Correct output: 75.112 | Program output: 87.984
Correct output: 104.689 | Program output: 122.096
Correct output: 27.529 | Program output: 49.424
Correct output: 3.963 | Program output: 10.148
Correct output: 83.268 | Program output: 52.952
Correct output: 11.973 | Program output: 12.363
Correct output: 76.197 | Program output: 59.763
Correct output: 99.025 | Program output: 88.009
Correct output: 1219.703 | Program output: 554.696
Correct output: 396.400 | Program output: 396.850
Correct output: 125.727 | Program output: 77.158
Correct output: 371.001 | Program output: 395.574
Correct output: 738.413 | Program output: 578.723
Correct output: 280.393 | Program output: 260.547
Correct output: 37.145 | Program output: 29.975
Correct output: 425.982 | Program output: 354.950
Correct output: 357.821 | Program output: 304.263
Correct output: 120.482 | Program output: 71.162
Correct output: 845.157 | Program output: 365.934
Correct output: 68.073 | Program output: 77.886
Correct output: 27.389 | Program output: 29.001
Correct output: 95.616 | Program output: 71.790
Correct output: 747.315 | Program output: 360.217
Correct output: 22.311 | Program output: 34.110
Correct output: 116.926 | Program output: 140.953
Correct output: 111.460 | Program output: 55.639
Correct output: 122.996 | Program output: 236.212
Correct output: 185.091 | Program output: 224.569
Correct output: 12.422 | Program output: 17.665
Correct output: 151.265 | Program output: 173.027
Correct output: 87.691 | Program output: 102.883
Correct output: 705.021 | Program output: 557.106
Correct output: 65.326 | Program output: 67.151
Correct output: 473.339 | Program output: 391.831
Correct output: 147.045 | Program output: 223.755
Correct output: 220.192 | Program output: 108.078
Correct output: 25.498 | Program output: 29.330
Correct output: 464.800 | Program output: 279.977
Correct output: 223.405 | Program output: 263.601
Correct output: 391.079 | Program output: 378.519
Correct output: 293.758 | Program output: 136.085
Correct output: 335.272 | Program output: 106.861
Correct output: 225.803 | Program output: 273.475
Correct output: 153.545 | Program output: 161.796
Correct output: 106.271 | Program output: 106.926
Correct output: 164.365 | Program output: 189.203
Correct output: 184.316 | Program output: 206.513
Correct output: 182.005 | Program output: 216.856
Correct output: 124.203 | Program output: 251.232
Correct output: 66.716 | Program output: 83.827
Correct output: 306.042 | Program output: 357.449
Correct output: 68.394 | Program output: 68.001
Correct output: 139.929 | Program output: 143.509
Correct output: 226.230 | Program output: 245.374
Correct output: 129.442 | Program output: 122.734
Correct output: 723.847 | Program output: 470.534
Correct output: 182.792 | Program output: 215.347
Correct output: 39.803 | Program output: 61.332
Correct output: 128.192 | Program output: 129.542
Correct output: 624.606 | Program output: 476.114
Correct output: 397.298 | Program output: 320.110
Correct output: 12.690 | Program output: 14.127
Correct output: 100.386 | Program output: 84.136
Correct output: 7.550 | Program output: 9.873
Correct output: 30.019 | Program output: 35.279
Correct output: 48.697 | Program output: 57.513
Correct output: 101.830 | Program output: 98.093
Correct output: 54.972 | Program output: 35.604
Correct output: 55.501 | Program output: 69.612
Correct output: 46.143 | Program output: 56.500
Correct output: 808.426 | Program output: 451.688
Correct output: 178.068 | Program output: 109.309
Correct output: 207.417 | Program output: 178.008
Correct output: 93.518 | Program output: 45.144
Correct output: 490.815 | Program output: 301.536
Correct output: 1247.817 | Program output: 504.847
Correct output: 160.740 | Program output: 195.760
Correct output: 1006.197 | Program output: 262.764
Correct output: 385.498 | Program output: 409.386
Correct output: 226.865 | Program output: 342.527
Correct output: 44.815 | Program output: 17.769
Correct output: 139.446 | Program output: 156.563
Correct output: 98.158 | Program output: 70.924
Correct output: 134.416 | Program output: 152.106
Correct output: 57.911 | Program output: 24.543
Correct output: 838.313 | Program output: 540.404
Correct output: 192.012 | Program output: 196.632
Correct output: 241.040 | Program output: 281.617
Correct output: 52.438 | Program output: 17.558
Correct output: 63.745 | Program output: 63.666
Correct output: 276.361 | Program output: 309.976
Correct output: 9.005 | Program output: 12.182
Correct output: 28.509 | Program output: 33.417
Correct output: 26.238 | Program output: 33.363
Correct output: 64.284 | Program output: 66.200
Correct output: 397.628 | Program output: 368.743
Correct output: 161.133 | Program output: 181.567
Correct output: 54.111 | Program output: 61.190
Correct output: 20.954 | Program output: 25.540
Correct output: 279.470 | Program output: 321.384
Correct output: 235.457 | Program output: 168.565
Correct output: 337.121 | Program output: 292.225
Correct output: 141.508 | Program output: 168.689
Correct output: 18.824 | Program output: 14.277
Correct output: 216.404 | Program output: 153.610
Correct output: 120.372 | Program output: 146.598
Correct output: 354.574 | Program output: 365.454
Correct output: 86.713 | Program output: 98.241
Correct output: 37.202 | Program output: 53.073
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 38 39 38 1 1 1 39 38 3 1 2 2 1 1 1 1 1 1 1 1 1 1 1 38 2 42 1 3 1 1 1 1 1 1 1 1 1 2 1 1 38 1 1 1 1 1 2 1 39 1 1 37 1 1 1 1 1 1 1 5 1 1 1 1 13 4 1 1 1 1 2 2 1 37 1 1 1 1 1 2 1 1 5 1 1 1 1 3 1 1 1 38 37 1 1 1 1 1 1 2 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 37 1 2 1 1 1 1 1 38 1 1 1 3 1 1 1 1 1 1 1 1 1 37 1 1 1 1 1 1 1 3 38 38 1 1 2 1 1 1 1 1 39 4 2 1 1 1 2 1 1 1 1 1 7 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 2 38 1 1 1 1 2 1 1 1 3 1)
Population mean number of elite cases: 1.01
Count of perfect (error zero) individuals by case: (0 0 38 39 38 0 0 0 39 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 39 0 0 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 0 0 0 0 0 0 0 38 38 0 0 0 0 0 0 0 0 39 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.76
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction float_yankdup} {:close 0, :instruction 2.0} {:close 2, :instruction float_mult} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 1, :instruction float_min} {:close 0, :instruction in2} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_div} {:close 0, :instruction integer_max} {:close 0, :instruction in2} {:close 0, :instruction float_pop} {:close 0, :instruction float_empty} {:close 0, :instruction boolean_not} {:close 0, :instruction in3} {:close 0, :instruction exec_if} {:close 0, :instruction 1.0} {:close 0, :instruction tag_exec_187} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction integer_shove} {:close 0, :instruction in3} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_inc} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 0, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction float_dec} {:close 0, :instruction in2} {:close 0, :instruction float_lte} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_yankdup} {:close 0, :instruction 2.0} {:close 0, :instruction float_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_eq} {:close 2, :instruction exec_rot} {:close 0, :instruction exec_when} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 1, :instruction 0.0} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_div} {:close 0, :instruction 1.0} {:close 0, :instruction float_arctan} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_pow} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction integer_div} {:close 2, :instruction float_fromboolean} {:close 0, :instruction float_rot} {:close 1, :instruction 0.0} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in3} {:close 0, :instruction 1.0} {:close 0, :instruction float_yankdup} {:close 1, :instruction float_ceiling} {:close 0, :instruction 0.0} {:close 2, :instruction float_max} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_sub} {:close 1, :instruction float_yankdup} {:close 1, :instruction boolean_eq} {:close 0, :instruction float_floor} {:close 1, :instruction integer_lt} {:close 0, :instruction in2} {:close 1, :instruction float_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yank} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction exec_if} {:close 0, :instruction integer_negate} {:close 0, :instruction exec_y} {:close 1, :instruction float_add} {:close 0, :instruction in3} {:close 0, :instruction float_div} {:close 0, :instruction float_frominteger} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in1} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 1, :instruction float_sqrt} {:close 0, :instruction integer_deepdup} {:close 0, :instruction float_min} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction float_arcsin} {:close 0, :instruction float_sub} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction float_frominteger} {:close 0, :instruction in2} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in3} {:close 0, :instruction integer_deepdup} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction in3} {:close 0, :instruction boolean_shove} {:close 0, :instruction in2} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 0, :instruction float_shove} {:close 0, :instruction float_dec} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction float_ceiling} {:close 1, :instruction exec_dup_times} {:close 0, :instruction float_arccos} {:close 1, :instruction float_flush} {:close 0, :instruction float_log10} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_yankdup} {:close 2, :instruction 0.0} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction float_gt} {:close 2, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction boolean_eq} {:close 0, :instruction tag_float_551} {:close 0, :instruction integer_rot} {:close 0, :instruction float_square} {:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction in2} {:close 1, :instruction integer_negate} {:close 0, :instruction float_floor} {:close 0, :instruction float_min} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 0, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_yank} {:close 0, :instruction float_log10} {:close 0, :instruction float_log2} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_rot} {:close 0, :instruction tag_exec_616} {:close 0, :instruction float_flush} {:close 0, :instruction float_ceiling} {:close 1, :instruction in2} {:close 0, :instruction integer_div} {:close 1, :instruction float_square} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_min} {:close 0, :instruction 2.0} {:close 0, :instruction in3} {:close 1, :instruction float_fromboolean} {:close 0, :instruction exec_deepdup} {:close 0, :instruction float_sin} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_empty} {:close 1, :instruction integer_mod} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_yank} {:close 0, :instruction float_deepdup} {:close 0, :instruction float_dup_items} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_add} {:close 0, :instruction float_log2} {:close 0, :instruction float_frominteger} {:close 0, :instruction exec_when} {:close 0, :instruction 2.0} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 1, :instruction 1.0} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_if} {:close 1, :instruction 1.0} {:close 0, :instruction 2.0})
Best program: (in2 float_yankdup 2.0 float_mult boolean_deepdup exec_dup_times (in2 integer_yankdup in1 float_min) in2 integer_lt integer_div integer_max in2 float_pop float_empty boolean_not in3 exec_if (1.0 tag_exec_187 (integer_fromfloat integer_shove in3 exec_dup_times (exec_do*count (float_inc integer_dup boolean_pop) integer_stackdepth exec_do*times (exec_stackdepth exec_do*times () float_rot in3 integer_sub) integer_stackdepth float_dec in2 float_lte in1 exec_noop integer_dec integer_yankdup 2.0 float_sub in1 integer_eq exec_rot () () (exec_when (integer_sub exec_y (exec_y (in2) float_min 0.0) exec_do*times () integer_div 1.0 float_arctan integer_lte boolean_deepdup in3 in1 boolean_yank integer_pow integer_dup boolean_yankdup integer_div) float_fromboolean)) float_rot 0.0) integer_fromboolean in3 1.0 float_yankdup float_ceiling) (0.0 float_max) exec_stackdepth integer_sub float_yankdup boolean_eq float_floor integer_lt in2 float_gte integer_dup in3 exec_while (boolean_yank in3 in2) float_stackdepth exec_if (integer_negate exec_y (float_add) in3 float_div float_frominteger integer_deepdup in1 exec_when (in3 float_sqrt) integer_deepdup float_min in2) (exec_s (float_arcsin float_sub boolean_invert_second_then_and in2) (float_stackdepth in1 float_frominteger) (in2 integer_lte exec_eq) integer_dup integer_deepdup in3 integer_deepdup boolean_invert_first_then_and) integer_dup_items in3 boolean_shove in2 boolean_invert_first_then_and exec_eq float_shove float_dec integer_fromfloat float_ceiling exec_dup_times () float_arccos float_flush float_log10 boolean_dup_items integer_yankdup 0.0 integer_fromfloat in2 exec_swap (float_gt in3) () in2 boolean_eq tag_float_551 integer_rot float_square boolean_flush in2 in2 integer_negate float_floor float_min exec_noop integer_negate in3 exec_flush boolean_yank float_log10 float_log2 boolean_or integer_rot tag_exec_616 (float_flush float_ceiling in2) integer_div float_square integer_flush integer_min 2.0 in3 float_fromboolean exec_deepdup float_sin in1 boolean_invert_second_then_and boolean_flush integer_empty integer_mod boolean_invert_first_then_and in3 float_min exec_swap (exec_yank) (float_deepdup float_dup_items integer_dup_times exec_do*while (integer_add float_log2 float_frominteger exec_when (2.0 exec_shove (integer_abs) boolean_not) 1.0) boolean_not exec_eq boolean_invert_first_then_and exec_if (1.0) (2.0)))
Errors: [76.735 5.03 41.925 44.126 31.931 6.039 38.949 20.653 2.716 77.845 67.9 30.858 38.495 5.739 13.883 33.482 41.962 23.771 100.128 26.537 6.687 2.06 11.932 8.176 39.302 60.476 8.387 5.999 26.69 3.838 31.818 71.942 28.946 2.048 21.199 9.016 2.366 6.02 17.348 6.408 28.42 18.946 102.167 26.585 46.874 512.188 210.623 4.259 31.017 166.345 53.592 411.513 26.856 66.886 22.179 46.788 30.037 6.63 15.193 45.669 61.5 3297.605 104.029 48.984 17.886 1207.101 93.02 41.437 26.94 21.61 18.32 294.531 310.36 768.115 16.689 27.528 13.228 167.772 12.07 18.183 35.432 34.192 2.704 16.916 43.015 760.309 27.911 10.433 170.081 19.813 27.608 12.873 17.407 21.895 6.185 30.316 0.39 16.434 11.016 665.007 0.45 48.569 24.573 159.691 19.846 7.17 71.032 53.559 49.32 479.223 9.814 1.612 23.826 387.098 11.798 24.026 55.821 113.217 39.478 5.244 21.761 15.192 147.916 1.825 81.508 76.71 112.115 3.831 184.823 40.196 12.56 157.673 228.41 47.672 8.251 0.655 24.838 22.197 34.851 127.029 17.111 51.407 0.392 3.58 19.143 6.708 253.313 32.555 21.528 1.35 148.492 77.189 1.438 16.25 2.324 5.26 8.816 3.737 19.368 14.112 10.357 356.738 68.759 29.409 48.374 189.279 742.969 35.02 743.433 23.888 115.662 27.046 17.117 27.234 17.69 33.368 297.909 4.62 40.577 34.879 0.079 33.615 3.177 4.908 7.125 1.916 28.885 20.434 7.079 4.586 41.914 66.892 44.895 27.181 4.547 62.794 26.226 10.88 11.528 15.871]
Total: 18397.287
Mean: 91.986435
Genome size: 210
Size: 245
Percent parens: 0.143
Age: 13
--- Population Statistics ---
Average total errors in population: 6.075922366203711E12
Median total errors in population: 42506.170999999995
Error averages by case: (2.9000078395384583E10 1.900007408864862E10 3.500004723374418E10 3.600004741279873E10 3.300007297221908E10 2.700004166626861E10 2.900004985208003E10 3.0000803374459087E10 3.1085686399733814E10 3.1042544698162594E10 2.7000045926178196E10 3.1000046732749523E10 3.70000582240803E10 1.800004604053345E10 3.000004411723743E10 3.300004355954503E10 3.100003379602642E10 3.199994889915637E10 1.9001449846742584E10 2.600005739644722E10 2.6067095566272175E10 2.6001344551767612E10 3.000004928557722E10 2.999998536050941E10 3.100001108867832E10 3.600004724248305E10 2.901223711244031E10 2.2000049011055622E10 3.200061749930556E10 2.7341293224274536E10 3.00000532746819E10 3.7000230298183945E10 2.1000048138321186E10 1.900004201420635E10 3.000004643838984E10 3.703583550749462E10 3.715586353703846E10 2.9768692244522015E10 3.0999971336382633E10 3.5000063128500824E10 3.300004367658754E10 3.0000038892386673E10 3.500004660575886E10 3.1000044710014027E10 3.200546673628313E10 3.3000044073286457E10 3.2000044952867558E10 2.1000056219591488E10 3.3000043514441517E10 3.2000043824029373E10 3.6000047336292015E10 3.300004271341123E10 2.900004940232102E10 3.600004718016346E10 3.2000041400811386E10 2.6048154487277996E10 3.2000037225530712E10 2.4649950810158733E10 3.3059807029622437E10 2.9999947296982082E10 3.3000043743803288E10 3.1000054375641914E10 2.9064159472253815E10 3.400007517444366E10 3.2031516797203E10 3.1000048446076485E10 2.1713199386434628E10 3.0000006317794674E10 3.200004325595443E10 2.8000058429844585E10 3.2000347360552334E10 3.000007787488768E10 3.200004466930888E10 3.1001704227769817E10 3.100051107052941E10 3.600004816424801E10 2.760983580687549E10 3.3000042857452465E10 3.001114930176299E10 2.80000432998851E10 3.1002249002182762E10 3.3008210293495777E10 2.500004910159175E10 3.2000060455458817E10 2.900033366079352E10 3.1000051767641888E10 3.60000434867317E10 2.7000831808804127E10 3.2000047200766888E10 3.166955381317065E10 2.7000054149103134E10 3.2072638690570793E10 3.300052914949565E10 3.500390491286428E10 2.400004801543755E10 3.501916894139691E10 2.1007584180185596E10 2.80001442104254E10 3.7052198191423805E10 3.2000047437665524E10 3.0999991425119152E10 2.60040423808812E10 3.1000044909050602E10 3.2006162787978745E10 3.3000137516793232E10 2.5000283460691216E10 3.3000053476056957E10 3.2000043498665512E10 2.90230750253428E10 3.3000042871591633E10 3.1415068130270653E10 2.806482810443365E10 3.9000050413902054E10 3.1000059360813362E10 2.2001233342255634E10 3.1065309288211136E10 2.30007416255683E10 3.60000474733339E10 3.0000049658839767E10 2.0000050881510868E10 3.0000005168899883E10 3.200004632618757E10 3.20054071423691E10 3.548387928875426E10 3.300007091043043E10 3.500004763686233E10 3.4000042208072353E10 2.300153567744393E10 3.10000480266711E10 3.1000049441991676E10 3.200004268022436E10 3.20000467806583E10 2.900004905888825E10 3.2445073680329174E10 3.2369004272606014E10 3.300004048902044E10 3.1000151948707153E10 3.2000044347510143E10 3.2999983747993217E10 3.500004847682052E10 3.3015144056292217E10 3.2005880841987247E10 3.100426264285514E10 3.2000043174138775E10 3.1768238324047295E10 3.300004244889588E10 3.2000073160488617E10 3.200153293819503E10 3.6000047077508385E10 3.600004854125942E10 3.1999977501940964E10 3.007309425616836E10 1.904330917230355E10 3.4000042336557026E10 2.0000042033494114E10 2.1002195757008183E10 2.5454258847246872E10 3.1000042411517643E10 3.300012841959044E10 2.9852967568420322E10 2.612175474105788E10 3.000007979831074E10 3.4000045227011208E10 2.9000049292750393E10 3.0925392894369812E10 3.2000046608737957E10 3.300005036884657E10 3.3000049451269054E10 3.1000041689425053E10 3.0999957643785305E10 3.800018637094964E10 3.300004419941586E10 3.6009721495638245E10 2.6188711668393612E10 3.1244723657348343E10 2.6001505258935387E10 3.000011599535094E10 3.1000040477750156E10 3.100000681991816E10 2.600004098516017E10 2.9022325424926777E10 3.2000007985732937E10 2.2000039679291477E10 2.2000043700415375E10 2.206499117087773E10 3.122360471058396E10 3.2207964045747437E10 3.50000441958665E10 2.701323643061034E10 3.0001737089435287E10 3.700006666555483E10 2.912800580323979E10 3.2000038550946194E10 3.100004381512741E10 2.7049120402528957E10 3.00080538837652E10 3.000004015687405E10 3.1000003635500546E10 3.2000151277198986E10 2.805242540136533E10)
Error minima by case: (0.008 0.019 0.0 0.0 0.0 0.045 0.394 0.938 0.0 0.0 0.112 0.176 0.087 0.091 0.046 0.374 1.224 0.043 2.142 0.058 0.15 0.088 0.097 0.464 0.022 0.0 0.231 0.0 0.185 0.012 0.393 8.958 0.169 0.018 0.167 0.018 0.119 0.355 0.259 0.128 0.055 0.388 0.0 0.785 0.095 17.916 0.681 0.069 2.05 0.018 0.0 9.729 0.332 0.0 0.582 0.215 0.847 0.009 0.159 9.454 1.147 0.36 2.089 3.447 0.042 45.921 0.02 0.178 0.323 0.076 0.825 0.073 3.65 5.775 0.036 0.0 0.026 3.006 0.029 0.022 1.268 0.04 0.071 2.469 0.076 5.534 0.105 0.11 0.752 0.05 0.302 0.285 0.447 0.0 0.0 0.136 0.027 0.097 0.055 6.09 0.45 0.268 1.223 4.533 0.196 0.008 1.32 0.625 0.177 2.471 0.11 0.073 0.079 4.01 0.031 0.138 1.31 0.0 1.035 0.003 0.836 0.168 0.096 0.005 0.08 0.0 0.291 0.031 2.21 0.127 0.241 0.446 2.015 0.568 1.089 0.374 0.617 0.192 0.019 0.0 0.063 0.283 0.008 0.169 0.199 0.195 9.78 0.004 0.0 0.0 0.556 0.076 0.001 0.273 0.003 0.032 0.078 0.164 0.0 0.067 0.057 20.095 0.921 0.263 0.024 0.545 0.923 0.347 9.533 2.142 0.043 0.013 0.004 0.252 0.404 0.083 4.345 0.117 0.184 0.042 0.079 1.23 0.082 0.065 0.035 0.042 0.539 0.689 0.057 0.0 0.158 0.237 0.306 0.061 0.063 0.092 0.482 0.12 0.239 0.067)
Average genome size in population (length): 200.049
Average program size in population (points): 233.462
Average percent parens in population: 0.142
Minimum age in population: 13.0
Maximum age in population: 13.0
Average age in population: 13.0
Median age in population: 13.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.776
Error (vector) diversity:			 0.776
Behavioral diversity:				 0.782
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 14000
Number of program executions (running on a single case counts as 1 execution): 2800000
Number of point (instruction) evaluations so far: 2411525095
--- Timings ---
Current time: 1745364119775 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Bouncing Balls problem report - generation 14
Test total error for best: 185358.41200000027
Test mean error for best: 92.67921
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 26.862
Correct output: 12.371 | Program output: 16.401
Correct output: 73.158 | Program output: 170.104
Correct output: 107.414 | Program output: 224.675
Correct output: 66.004 | Program output: 47.841
Correct output: 18.351 | Program output: 11.312
Correct output: 203.233 | Program output: 241.182
Correct output: 168.282 | Program output: 146.629
Correct output: 22.792 | Program output: 35.135
Correct output: 101.076 | Program output: 32.289
Correct output: 89.438 | Program output: 20.538
Correct output: 167.016 | Program output: 196.874
Correct output: 249.241 | Program output: 334.735
Correct output: 17.252 | Program output: 10.513
Correct output: 78.298 | Program output: 91.181
Correct output: 192.343 | Program output: 224.825
Correct output: 325.936 | Program output: 282.974
Correct output: 137.403 | Program output: 112.632
Correct output: 159.858 | Program output: 58.730
Correct output: 43.816 | Program output: 16.279
Correct output: 46.214 | Program output: 51.901
Correct output: 41.847 | Program output: 42.907
Correct output: 111.620 | Program output: 98.688
Correct output: 136.088 | Program output: 126.912
Correct output: 180.744 | Program output: 219.046
Correct output: 77.511 | Program output: 203.734
Correct output: 79.636 | Program output: 70.248
Correct output: 2.001 | Program output: 7.000
Correct output: 114.432 | Program output: 140.121
Correct output: 19.059 | Program output: 24.897
Correct output: 290.212 | Program output: 321.030
Correct output: 197.499 | Program output: 312.440
Correct output: 64.127 | Program output: 34.180
Correct output: 8.284 | Program output: 9.332
Correct output: 203.329 | Program output: 181.130
Correct output: 104.522 | Program output: 131.539
Correct output: 124.531 | Program output: 146.898
Correct output: 125.101 | Program output: 118.081
Correct output: 133.674 | Program output: 115.325
Correct output: 112.074 | Program output: 104.666
Correct output: 308.094 | Program output: 335.514
Correct output: 106.842 | Program output: 124.788
Correct output: 144.377 | Program output: 366.430
Correct output: 296.288 | Program output: 321.874
Correct output: 205.797 | Program output: 251.670
Correct output: 985.735 | Program output: 472.547
Correct output: 680.660 | Program output: 469.037
Correct output: 32.170 | Program output: 26.910
Correct output: 343.239 | Program output: 311.222
Correct output: 584.598 | Program output: 417.254
Correct output: 97.620 | Program output: 224.265
Correct output: 712.538 | Program output: 300.025
Correct output: 123.589 | Program output: 149.446
Correct output: 69.710 | Program output: 201.995
Correct output: 250.818 | Program output: 227.639
Correct output: 120.502 | Program output: 72.713
Correct output: 137.940 | Program output: 166.977
Correct output: 64.091 | Program output: 56.460
Correct output: 65.119 | Program output: 79.312
Correct output: 335.947 | Program output: 380.616
Correct output: 475.105 | Program output: 412.605
Correct output: 3999.600 | Program output: 700.995
Correct output: 279.985 | Program output: 174.956
Correct output: 201.372 | Program output: 249.356
Correct output: 189.382 | Program output: 206.267
Correct output: 1543.271 | Program output: 335.170
Correct output: 102.020 | Program output: 8.000
Correct output: 193.877 | Program output: 234.314
Correct output: 128.350 | Program output: 154.289
Correct output: 53.143 | Program output: 30.532
Correct output: 181.602 | Program output: 198.922
Correct output: 431.170 | Program output: 135.639
Correct output: 619.098 | Program output: 307.739
Correct output: 986.172 | Program output: 217.056
Correct output: 77.831 | Program output: 93.519
Correct output: 55.900 | Program output: 122.536
Correct output: 54.583 | Program output: 66.811
Correct output: 622.783 | Program output: 454.012
Correct output: 83.177 | Program output: 70.107
Correct output: 42.501 | Program output: 23.318
Correct output: 184.764 | Program output: 219.196
Correct output: 67.665 | Program output: 37.473
Correct output: 19.670 | Program output: 21.374
Correct output: 464.533 | Program output: 446.617
Correct output: 106.459 | Program output: 62.444
Correct output: 1108.353 | Program output: 347.044
Correct output: 56.702 | Program output: 97.613
Correct output: 53.970 | Program output: 63.404
Correct output: 259.503 | Program output: 88.423
Correct output: 101.480 | Program output: 80.666
Correct output: 56.812 | Program output: 28.204
Correct output: 75.112 | Program output: 86.984
Correct output: 104.689 | Program output: 121.096
Correct output: 27.529 | Program output: 71.030
Correct output: 3.963 | Program output: 11.935
Correct output: 83.268 | Program output: 59.952
Correct output: 11.973 | Program output: 11.363
Correct output: 76.197 | Program output: 58.763
Correct output: 99.025 | Program output: 101.009
Correct output: 1219.703 | Program output: 553.696
Correct output: 396.400 | Program output: 395.850
Correct output: 125.727 | Program output: 76.158
Correct output: 371.001 | Program output: 394.574
Correct output: 738.413 | Program output: 577.723
Correct output: 280.393 | Program output: 259.547
Correct output: 37.145 | Program output: 28.975
Correct output: 425.982 | Program output: 353.950
Correct output: 357.821 | Program output: 303.263
Correct output: 120.482 | Program output: 70.162
Correct output: 845.157 | Program output: 364.934
Correct output: 68.073 | Program output: 76.886
Correct output: 27.389 | Program output: 28.001
Correct output: 95.616 | Program output: 82.790
Correct output: 747.315 | Program output: 359.217
Correct output: 22.311 | Program output: 38.110
Correct output: 116.926 | Program output: 139.953
Correct output: 111.460 | Program output: 54.639
Correct output: 122.996 | Program output: 351.515
Correct output: 185.091 | Program output: 223.569
Correct output: 12.422 | Program output: 16.665
Correct output: 151.265 | Program output: 172.027
Correct output: 87.691 | Program output: 101.883
Correct output: 705.021 | Program output: 556.106
Correct output: 65.326 | Program output: 77.151
Correct output: 473.339 | Program output: 390.831
Correct output: 147.045 | Program output: 332.944
Correct output: 220.192 | Program output: 107.078
Correct output: 25.498 | Program output: 28.330
Correct output: 464.800 | Program output: 278.977
Correct output: 223.405 | Program output: 262.601
Correct output: 391.079 | Program output: 377.519
Correct output: 293.758 | Program output: 135.085
Correct output: 335.272 | Program output: 105.861
Correct output: 225.803 | Program output: 272.475
Correct output: 153.545 | Program output: 160.796
Correct output: 106.271 | Program output: 105.926
Correct output: 164.365 | Program output: 188.203
Correct output: 184.316 | Program output: 205.513
Correct output: 182.005 | Program output: 215.856
Correct output: 124.203 | Program output: 374.290
Correct output: 66.716 | Program output: 82.827
Correct output: 306.042 | Program output: 356.449
Correct output: 68.394 | Program output: 67.001
Correct output: 139.929 | Program output: 142.509
Correct output: 226.230 | Program output: 244.374
Correct output: 129.442 | Program output: 121.734
Correct output: 723.847 | Program output: 469.534
Correct output: 182.792 | Program output: 214.347
Correct output: 39.803 | Program output: 88.914
Correct output: 128.192 | Program output: 191.177
Correct output: 624.606 | Program output: 475.114
Correct output: 397.298 | Program output: 319.110
Correct output: 12.690 | Program output: 13.127
Correct output: 100.386 | Program output: 83.136
Correct output: 7.550 | Program output: 9.873
Correct output: 30.019 | Program output: 34.279
Correct output: 48.697 | Program output: 56.513
Correct output: 101.830 | Program output: 97.093
Correct output: 54.972 | Program output: 50.755
Correct output: 55.501 | Program output: 68.612
Correct output: 46.143 | Program output: 55.500
Correct output: 808.426 | Program output: 450.688
Correct output: 178.068 | Program output: 108.309
Correct output: 207.417 | Program output: 177.008
Correct output: 93.518 | Program output: 44.144
Correct output: 490.815 | Program output: 300.536
Correct output: 1247.817 | Program output: 503.847
Correct output: 160.740 | Program output: 194.760
Correct output: 1006.197 | Program output: 261.764
Correct output: 385.498 | Program output: 408.386
Correct output: 226.865 | Program output: 398.527
Correct output: 44.815 | Program output: 19.769
Correct output: 139.446 | Program output: 181.563
Correct output: 98.158 | Program output: 69.924
Correct output: 134.416 | Program output: 151.106
Correct output: 57.911 | Program output: 23.543
Correct output: 838.313 | Program output: 539.404
Correct output: 192.012 | Program output: 195.632
Correct output: 241.040 | Program output: 280.617
Correct output: 52.438 | Program output: 16.558
Correct output: 63.745 | Program output: 62.666
Correct output: 276.361 | Program output: 308.976
Correct output: 9.005 | Program output: 11.182
Correct output: 28.509 | Program output: 37.417
Correct output: 26.238 | Program output: 32.363
Correct output: 64.284 | Program output: 65.200
Correct output: 397.628 | Program output: 367.743
Correct output: 161.133 | Program output: 180.567
Correct output: 54.111 | Program output: 60.190
Correct output: 20.954 | Program output: 35.175
Correct output: 279.470 | Program output: 373.384
Correct output: 235.457 | Program output: 167.565
Correct output: 337.121 | Program output: 291.225
Correct output: 141.508 | Program output: 167.689
Correct output: 18.824 | Program output: 13.277
Correct output: 216.404 | Program output: 152.610
Correct output: 120.372 | Program output: 145.598
Correct output: 354.574 | Program output: 364.454
Correct output: 86.713 | Program output: 97.241
Correct output: 37.202 | Program output: 60.073
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 1 47 46 48 1 1 1 48 48 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 46 1 64 1 1 1 1 1 1 1 3 4 1 1 1 1 1 47 1 1 1 1 1 1 1 46 1 1 46 1 1 1 1 1 1 1 2 1 1 1 1 19 2 2 1 1 1 1 1 1 47 1 1 1 1 1 2 1 1 1 5 1 1 1 1 1 1 1 47 43 4 1 1 1 1 1 6 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 47 2 3 1 1 2 1 1 46 1 1 1 6 1 2 1 1 1 1 1 1 1 46 1 1 1 1 2 1 1 4 48 47 1 1 1 1 1 1 1 1 45 1 1 1 1 1 1 1 1 2 1 1 3 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 48 1 1 1 1 1 1 1 1 1 2)
Population mean number of elite cases: 1.19
Count of perfect (error zero) individuals by case: (0 0 47 46 48 0 0 0 48 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 46 0 64 0 0 0 0 0 0 0 0 0 0 0 1 0 0 47 0 0 0 0 0 0 0 46 0 0 46 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 47 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 47 43 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 47 0 0 0 0 0 0 0 46 0 0 0 0 0 0 0 0 0 0 0 0 0 46 0 0 0 0 0 0 0 0 48 47 0 0 0 0 0 0 0 0 45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 48 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.95
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction float_yankdup} {:close 0, :instruction 2.0} {:close 2, :instruction float_mult} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_div} {:close 0, :instruction float_pop} {:close 0, :instruction in3} {:close 0, :instruction exec_if} {:close 0, :instruction tag_exec_187} {:close 0, :instruction float_swap} {:close 0, :instruction integer_shove} {:close 0, :instruction in3} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_do*count} {:close 0, :instruction float_inc} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 1, :instruction boolean_pop} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_do*times} {:close 0, :instruction float_rot} {:close 0, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction float_dec} {:close 0, :instruction float_lte} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction 2.0} {:close 0, :instruction float_sub} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_eq} {:close 2, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y} {:close 0, :instruction integer_sub} {:close 1, :instruction in2} {:close 0, :instruction float_min} {:close 1, :instruction 0.0} {:close 1, :instruction exec_do*times} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_div} {:close 0, :instruction 1.0} {:close 0, :instruction float_arctan} {:close 1, :instruction float_dup_items} {:close 0, :instruction float_tan} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction integer_div} {:close 2, :instruction float_fromboolean} {:close 0, :instruction float_min} {:close 0, :instruction float_rot} {:close 1, :instruction 0.0} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction 1.0} {:close 0, :instruction float_yankdup} {:close 1, :instruction float_ceiling} {:close 0, :instruction 0.0} {:close 2, :instruction float_max} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction boolean_eq} {:close 0, :instruction float_floor} {:close 0, :instruction in2} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_swap} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction float_stackdepth} {:close 0, :instruction integer_negate} {:close 0, :instruction exec_y} {:close 1, :instruction float_add} {:close 0, :instruction in3} {:close 0, :instruction float_frominteger} {:close 0, :instruction integer_flush} {:close 0, :instruction in2} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in1} {:close 0, :instruction exec_when} {:close 0, :instruction in1} {:close 1, :instruction float_sin} {:close 0, :instruction integer_deepdup} {:close 0, :instruction float_min} {:close 1, :instruction in2} {:close 0, :instruction float_arcsin} {:close 0, :instruction float_sub} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_rot} {:close 0, :instruction float_flush} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in3} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction float_dec} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 0, :instruction float_stackdepth} {:close 0, :instruction float_shove} {:close 0, :instruction float_dec} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction float_ceiling} {:close 1, :instruction exec_dup_times} {:close 0, :instruction float_arccos} {:close 0, :instruction in3} {:close 1, :instruction float_flush} {:close 0, :instruction float_yankdup} {:close 0, :instruction integer_yankdup} {:close 2, :instruction 0.0} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction float_gt} {:close 2, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction float_square} {:close 0, :instruction in2} {:close 0, :instruction in2} {:close 2, :instruction integer_dup_items} {:close 1, :instruction integer_negate} {:close 0, :instruction float_floor} {:close 0, :instruction float_min} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_negate} {:close 0, :instruction float_ceiling} {:close 0, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction float_log10} {:close 0, :instruction float_log2} {:close 1, :instruction in1} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_rot} {:close 0, :instruction float_sub} {:close 0, :instruction float_flush} {:close 0, :instruction float_ceiling} {:close 1, :instruction integer_gt} {:close 0, :instruction integer_div} {:close 0, :instruction 0.0} {:close 1, :instruction float_square} {:close 0, :instruction 2.0} {:close 0, :instruction float_sin} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction in1} {:close 1, :instruction integer_mod} {:close 2, :instruction float_floor} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_yankdup} {:close 0, :instruction in3} {:close 0, :instruction float_min} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_yank} {:close 0, :instruction float_deepdup} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_yankdup} {:close 0, :instruction float_frominteger} {:close 0, :instruction in1} {:close 0, :instruction exec_when} {:close 0, :instruction 2.0} {:close 1, :instruction integer_abs} {:close 1, :instruction boolean_not} {:close 1, :instruction 1.0} {:close 0, :instruction in2} {:close 0, :instruction float_dup} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction 1.0} {:close 0, :instruction 2.0})
Best program: (in2 float_yankdup 2.0 float_mult boolean_deepdup exec_dup_times (in2 in1 integer_div float_pop in3 exec_if (tag_exec_187 (float_swap integer_shove in3 exec_dup_times (exec_do*count (float_inc integer_dup exec_dup_items boolean_pop) boolean_frominteger exec_do*times (exec_stackdepth exec_do*times () float_rot in3 integer_sub) integer_stackdepth float_dec float_lte in1 exec_noop 2.0 float_sub in1 exec_noop integer_eq exec_rot () () (integer_sub exec_y (exec_y (integer_sub in2) float_min 0.0) exec_do*times () exec_rot () (integer_div 1.0 float_arctan float_dup_items) (float_tan integer_lte boolean_deepdup in3 boolean_yank integer_shove boolean_yankdup integer_div) float_fromboolean)) float_min float_rot 0.0) integer_fromboolean 1.0 float_yankdup float_ceiling) (0.0 float_max)) integer_sub integer_fromboolean boolean_eq float_floor in2 integer_dup boolean_yank exec_swap () (in3 in2) float_stackdepth integer_negate exec_y (float_add) in3 float_frominteger integer_flush in2 integer_deepdup in1 exec_when (in1 float_sin) integer_deepdup float_min in2 float_arcsin float_sub exec_flush boolean_invert_second_then_and in2 in1 in2 exec_rot (float_flush integer_lte exec_eq) (integer_dup integer_deepdup in3 boolean_invert_first_then_and) (boolean_shove in1 in2 float_dec boolean_invert_first_then_and exec_eq float_stackdepth float_shove float_dec integer_fromfloat float_ceiling exec_dup_times () float_arccos in3 float_flush) float_yankdup integer_yankdup 0.0 integer_gt integer_fromfloat in2 exec_swap (float_gt in3) () in2 boolean_eq integer_rot float_square in2 in2 integer_dup_items integer_negate float_floor float_min boolean_pop exec_noop integer_negate float_ceiling in3 exec_flush float_log10 float_log2 in1 boolean_or integer_rot float_sub float_flush float_ceiling integer_gt integer_div 0.0 float_square 2.0 float_sin in1 boolean_invert_second_then_and integer_empty in1 integer_mod float_floor boolean_invert_first_then_and exec_yankdup in3 float_min exec_swap (exec_yank) (float_deepdup integer_lt) exec_do*while (integer_add integer_gte integer_yankdup float_frominteger in1 exec_when (2.0 integer_abs) boolean_not) 1.0 in2 float_dup boolean_not exec_eq boolean_invert_first_then_and exec_if (boolean_dup_items 1.0) (2.0))
Errors: [77.735 4.03 96.946 117.261 18.163 7.039 37.949 21.653 12.343 68.787 68.9 29.858 85.495 6.739 12.883 32.482 42.962 24.771 101.128 27.537 5.687 1.06 12.932 9.176 38.302 126.223 9.387 4.999 25.69 5.838 30.818 114.942 29.946 1.048 22.199 27.016 22.366 7.02 18.348 7.408 27.42 17.946 222.053 25.585 45.874 513.188 211.623 5.259 32.017 167.345 126.645 412.513 25.856 132.285 23.179 47.788 29.037 7.63 14.193 44.669 62.5 3298.605 105.029 47.984 16.886 1208.101 94.02 40.437 25.94 22.61 17.32 295.531 311.36 769.115 15.689 66.635 12.228 168.772 13.07 19.183 34.432 30.192 1.704 17.916 44.015 761.309 40.911 9.433 171.081 20.813 28.608 11.873 16.407 43.501 7.972 23.316 0.61 17.434 1.984 666.007 0.55 49.569 23.573 160.691 20.846 8.17 72.032 54.559 50.32 480.223 8.814 0.612 12.826 388.098 15.798 23.026 56.821 228.52 38.478 4.244 20.761 14.192 148.916 11.825 82.508 185.899 113.115 2.831 185.823 39.196 13.56 158.673 229.41 46.672 7.251 0.345 23.838 21.197 33.851 250.087 16.111 50.407 1.392 2.58 18.143 7.708 254.313 31.555 49.111 62.985 149.492 78.189 0.438 17.25 2.324 4.26 7.816 4.737 4.217 13.112 9.357 357.738 69.759 30.409 49.374 190.279 743.969 34.02 744.433 22.888 171.662 25.046 42.117 28.234 16.69 34.368 298.909 3.62 39.577 35.879 1.079 32.615 2.177 8.908 6.125 0.916 29.885 19.434 6.079 14.221 93.914 67.892 45.895 26.181 5.547 63.794 25.226 9.88 10.528 22.871]
Total: 19613.059
Mean: 98.06529
Genome size: 200
Size: 234
Percent parens: 0.145
Age: 14
--- Population Statistics ---
Average total errors in population: 4.617299656810001E12
Median total errors in population: 42506.170999999995
Error averages by case: (2.0004332918672966E10 2.2004317992309654E10 2.6000024807207703E10 2.5000024205488914E10 2.7000022169016792E10 2.4000021041843807E10 2.5004326858875805E10 2.700002236052172E10 2.4000031894125553E10 2.3010647613541004E10 2.200002442646433E10 2.4000025580570797E10 1.9000032703320923E10 2.4000022021695217E10 2.4000023162572445E10 2.200431944995461E10 2.700002902284417E10 2.5000022431412415E10 1.8000318347198936E10 2.300002769457949E10 2.6033358779802853E10 2.5000338896538857E10 2.5004322164569504E10 2.6000022446897644E10 2.7000028258302696E10 2.4000024506251278E10 2.300611660357219E10 2.2000025011688286E10 2.200002067042369E10 1.829195840963053E10 2.4000033118968243E10 2.0000027263369976E10 1.8004346000783394E10 2.4000020014234737E10 2.400007686461485E10 2.0000022421039745E10 2.0000023615762016E10 2.3000024277631706E10 2.4004321401943066E10 2.4000022340455532E10 2.2004323646076527E10 2.400432129030165E10 2.6000036214315437E10 2.5000027882005165E10 2.2000026317598087E10 2.20043395437653E10 2.500006368911021E10 1.9000328968849903E10 2.2004322254702263E10 2.5000048707474277E10 2.5000025156654644E10 2.4004322019323383E10 2.4051744288098576E10 2.4000024416181183E10 2.3000026620681923E10 2.3004325358891705E10 2.3000027671245724E10 2.106078920386208E10 2.5000025139218525E10 2.6000031165004665E10 2.200433050650096E10 2.1000132747526676E10 2.300002301604208E10 2.300002402020282E10 2.300002801137703E10 2.1000035529738365E10 1.9000029357393387E10 2.600002359473611E10 2.2004318413243336E10 2.2000031798565323E10 2.5004319888560593E10 2.5004322566452427E10 2.5000030959093575E10 2.400002795426223E10 2.3000024156689724E10 2.6000023280780712E10 2.400432991812708E10 2.5004336324573994E10 2.1004318180181873E10 2.1004318125188225E10 2.4004319248113438E10 1.7000867446390312E10 2.000094262560608E10 2.500005630135758E10 2.4000167362883465E10 2.100003598363654E10 2.1000019137388645E10 2.300002311191169E10 2.500002526288284E10 2.3000024288793045E10 2.300002711312488E10 2.1000020215332626E10 2.400002629107941E10 2.500002306719464E10 2.1000023015470577E10 1.900002219531119E10 2.3000081793462223E10 2.400002521293713E10 1.8000022285963524E10 2.4000104949587837E10 2.6000037698769466E10 2.4675489109866463E10 2.500003454219179E10 2.200015887928258E10 2.200432018521814E10 2.600002266189096E10 2.2004333380812946E10 2.2004321851994274E10 2.2004318352014244E10 2.500432721653492E10 2.500002208681793E10 2.303726849102768E10 2.2000020271428432E10 2.400003933273744E10 1.600055786535284E10 2.200002254005797E10 2.3000145066289932E10 2.6000033946988544E10 2.5004326411811672E10 1.90000230316475E10 2.400432167239923E10 2.3000029227941696E10 2.2000140064371544E10 1.8000022125728405E10 2.4000044670943794E10 2.600003174870192E10 2.3004318209463833E10 2.1000770849187515E10 2.6000024938485313E10 2.4000028260793297E10 2.4004326969841557E10 2.500002551485614E10 2.3000027379296776E10 2.4000031924070496E10 2.3000021977829582E10 2.2004320319724052E10 2.5000026258899773E10 2.5000024721541546E10 2.3000027472934704E10 2.5000037237063454E10 2.2000021150606956E10 2.200004034588895E10 2.5000025171442474E10 2.4004318295884296E10 2.3000028784266403E10 2.2004318383339317E10 2.4004339039528057E10 2.50000270259977E10 2.400002212269717E10 2.5000025383205944E10 2.700004871798711E10 2.500433079647458E10 2.300446300738759E10 2.3004318255840214E10 1.800002201945796E10 2.1000022505925034E10 2.315141938398669E10 2.300431825937614E10 2.4000022139804028E10 2.300212295654965E10 2.303045675958891E10 2.4000058729041656E10 2.30000246044905E10 2.6004360219515667E10 2.131277103429069E10 2.5000032171417606E10 2.3000054818072826E10 2.300002788594576E10 2.6000029792993565E10 2.6000033996542946E10 2.1000040088658546E10 2.0026070424975056E10 1.900007823265606E10 2.206228355650001E10 2.100002259569953E10 2.2000020366744213E10 2.4000094882429874E10 2.7000026836276787E10 2.7000028940470367E10 2.000005662304304E10 2.1000020159218746E10 2.3000030604829636E10 2.0004318992813667E10 1.5000024115112001E10 2.3011933382398323E10 2.500002215159734E10 2.200003855265802E10 2.30000705247311E10 2.3004316188325592E10 2.3318406480742554E10 1.9000038353412693E10 2.3000022166367558E10 2.400432435748861E10 2.4004322525347065E10 2.3000025052575912E10 2.400022546707211E10 2.800002636168871E10 2.4004329776667095E10 2.3000027217270947E10 1.901306902815095E10)
Error minima by case: (0.008 0.015 0.0 0.0 0.0 0.151 0.023 0.154 0.0 0.0 0.037 0.176 0.198 0.039 0.104 0.343 2.226 0.072 3.565 0.016 0.061 0.063 0.086 0.536 0.092 0.0 0.093 0.0 0.122 0.012 0.088 5.378 0.553 0.007 0.04 0.559 0.146 1.19 0.259 0.0 0.197 0.266 0.0 0.172 0.3 1.505 1.136 0.073 0.405 4.248 0.0 5.783 0.197 0.0 0.51 0.185 0.463 0.091 0.069 4.356 0.147 0.36 2.907 0.038 0.129 87.751 0.02 0.178 0.006 0.076 0.142 0.851 5.016 0.293 0.036 0.0 0.083 2.691 0.059 0.113 0.686 0.04 0.0 1.595 0.015 5.534 0.089 0.03 2.635 0.05 0.214 0.01 0.328 0.0 0.0 0.338 0.007 0.136 0.055 2.48 0.228 0.268 0.223 1.467 1.743 0.049 0.13 2.484 0.01 2.259 0.295 0.035 0.108 6.931 0.001 0.095 0.841 0.0 1.035 0.003 0.188 0.209 0.096 0.005 3.279 0.0 0.291 0.207 3.451 0.127 0.687 0.446 2.888 0.568 0.124 0.345 0.073 0.152 0.019 0.0 0.174 0.903 0.008 0.784 0.199 0.805 3.178 0.004 0.0 0.0 6.113 4.094 0.072 0.017 0.041 0.032 0.003 0.03 0.0 0.022 0.057 16.342 6.855 0.201 0.005 2.331 0.923 0.347 1.547 2.896 0.043 0.013 0.224 0.121 0.111 0.029 3.277 0.511 0.114 0.005 0.144 0.475 0.011 0.077 0.022 0.079 3.371 0.311 0.234 0.0 3.684 0.391 0.694 0.141 0.06 0.036 1.132 1.242 0.008 0.067)
Average genome size in population (length): 200.981
Average program size in population (points): 234.395
Average percent parens in population: 0.142
Minimum age in population: 14.0
Maximum age in population: 14.0
Average age in population: 14.0
Median age in population: 14.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.778
Error (vector) diversity:			 0.778
Behavioral diversity:				 0.782
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 15000
Number of program executions (running on a single case counts as 1 execution): 3000000
Number of point (instruction) evaluations so far: 2614084534
--- Timings ---
Current time: 1745364282188 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Bouncing Balls problem report - generation 15
Test total error for best: 191084.32200000004
Test mean error for best: 95.54216
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 123.007
Correct output: 12.371 | Program output: 23.561
Correct output: 73.158 | Program output: 56.042
Correct output: 107.414 | Program output: 74.270
Correct output: 66.004 | Program output: 15.537
Correct output: 18.351 | Program output: 21.849
Correct output: 203.233 | Program output: 341.655
Correct output: 168.282 | Program output: 179.081
Correct output: 22.792 | Program output: 11.254
Correct output: 101.076 | Program output: 10.116
Correct output: 89.438 | Program output: 103.953
Correct output: 167.016 | Program output: 279.824
Correct output: 249.241 | Program output: 236.641
Correct output: 17.252 | Program output: 13.118
Correct output: 78.298 | Program output: 116.853
Correct output: 192.343 | Program output: 324.755
Correct output: 325.936 | Program output: 343.364
Correct output: 137.403 | Program output: 215.485
Correct output: 159.858 | Program output: 70.023
Correct output: 43.816 | Program output: 58.391
Correct output: 46.214 | Program output: 81.261
Correct output: 41.847 | Program output: 72.870
Correct output: 111.620 | Program output: 121.564
Correct output: 136.088 | Program output: 221.876
Correct output: 180.744 | Program output: 297.064
Correct output: 77.511 | Program output: 67.493
Correct output: 79.636 | Program output: 128.947
Correct output: 2.001 | Program output: 2.000
Correct output: 114.432 | Program output: 149.121
Correct output: 19.059 | Program output: 10.138
Correct output: 290.212 | Program output: 400.242
Correct output: 197.499 | Program output: 133.464
Correct output: 64.127 | Program output: 42.452
Correct output: 8.284 | Program output: 6.266
Correct output: 203.329 | Program output: 216.382
Correct output: 104.522 | Program output: 107.523
Correct output: 124.531 | Program output: 131.339
Correct output: 125.101 | Program output: 141.314
Correct output: 133.674 | Program output: 212.855
Correct output: 112.074 | Program output: 134.932
Correct output: 308.094 | Program output: 420.920
Correct output: 106.842 | Program output: 182.903
Correct output: 144.377 | Program output: 121.772
Correct output: 296.288 | Program output: 404.423
Correct output: 205.797 | Program output: 265.670
Correct output: 985.735 | Program output: 550.166
Correct output: 680.660 | Program output: 551.651
Correct output: 32.170 | Program output: 31.074
Correct output: 343.239 | Program output: 378.710
Correct output: 584.598 | Program output: 492.155
Correct output: 97.620 | Program output: 74.106
Correct output: 712.538 | Program output: 347.236
Correct output: 123.589 | Program output: 207.624
Correct output: 69.710 | Program output: 66.798
Correct output: 250.818 | Program output: 278.294
Correct output: 120.502 | Program output: 172.999
Correct output: 137.940 | Program output: 223.168
Correct output: 64.091 | Program output: 66.245
Correct output: 65.119 | Program output: 112.437
Correct output: 335.947 | Program output: 482.862
Correct output: 475.105 | Program output: 498.047
Correct output: 3999.600 | Program output: 803.993
Correct output: 279.985 | Program output: 174.747
Correct output: 201.372 | Program output: 229.885
Correct output: 189.382 | Program output: 259.774
Correct output: 1543.271 | Program output: 386.438
Correct output: 102.020 | Program output: 111.000
Correct output: 193.877 | Program output: 316.839
Correct output: 128.350 | Program output: 205.005
Correct output: 53.143 | Program output: 77.745
Correct output: 181.602 | Program output: 250.291
Correct output: 431.170 | Program output: 158.894
Correct output: 619.098 | Program output: 356.234
Correct output: 986.172 | Program output: 251.679
Correct output: 77.831 | Program output: 119.727
Correct output: 55.900 | Program output: 40.214
Correct output: 54.583 | Program output: 93.535
Correct output: 622.783 | Program output: 539.217
Correct output: 83.177 | Program output: 132.750
Correct output: 42.501 | Program output: 61.445
Correct output: 184.764 | Program output: 285.274
Correct output: 67.665 | Program output: 72.284
Correct output: 19.670 | Program output: 27.374
Correct output: 464.533 | Program output: 542.664
Correct output: 106.459 | Program output: 152.822
Correct output: 1108.353 | Program output: 403.862
Correct output: 56.702 | Program output: 41.168
Correct output: 53.970 | Program output: 92.165
Correct output: 259.503 | Program output: 104.392
Correct output: 101.480 | Program output: 155.333
Correct output: 56.812 | Program output: 76.885
Correct output: 75.112 | Program output: 101.984
Correct output: 104.689 | Program output: 156.135
Correct output: 27.529 | Program output: 23.212
Correct output: 3.963 | Program output: 3.574
Correct output: 83.268 | Program output: 90.171
Correct output: 11.973 | Program output: 14.891
Correct output: 76.197 | Program output: 119.068
Correct output: 99.025 | Program output: 106.605
Correct output: 1219.703 | Program output: 644.574
Correct output: 396.400 | Program output: 487.590
Correct output: 125.727 | Program output: 91.422
Correct output: 371.001 | Program output: 491.803
Correct output: 738.413 | Program output: 500.723
Correct output: 280.393 | Program output: 317.365
Correct output: 37.145 | Program output: 59.965
Correct output: 425.982 | Program output: 418.731
Correct output: 357.821 | Program output: 365.368
Correct output: 120.482 | Program output: 171.827
Correct output: 845.157 | Program output: 422.908
Correct output: 68.073 | Program output: 58.109
Correct output: 27.389 | Program output: 48.601
Correct output: 95.616 | Program output: 34.674
Correct output: 747.315 | Program output: 411.303
Correct output: 22.311 | Program output: 15.666
Correct output: 116.926 | Program output: 174.743
Correct output: 111.460 | Program output: 65.695
Correct output: 122.996 | Program output: 116.606
Correct output: 185.091 | Program output: 306.997
Correct output: 12.422 | Program output: 21.931
Correct output: 151.265 | Program output: 256.837
Correct output: 87.691 | Program output: 150.637
Correct output: 705.021 | Program output: 483.106
Correct output: 65.326 | Program output: 69.491
Correct output: 473.339 | Program output: 469.963
Correct output: 147.045 | Program output: 110.378
Correct output: 220.192 | Program output: 126.109
Correct output: 25.498 | Program output: 47.062
Correct output: 464.800 | Program output: 330.167
Correct output: 223.405 | Program output: 337.242
Correct output: 391.079 | Program output: 461.927
Correct output: 293.758 | Program output: 159.119
Correct output: 335.272 | Program output: 124.806
Correct output: 225.803 | Program output: 364.866
Correct output: 153.545 | Program output: 146.796
Correct output: 106.271 | Program output: 172.896
Correct output: 164.365 | Program output: 240.484
Correct output: 184.316 | Program output: 257.719
Correct output: 182.005 | Program output: 306.998
Correct output: 124.203 | Program output: 124.116
Correct output: 66.716 | Program output: 86.827
Correct output: 306.042 | Program output: 342.449
Correct output: 68.394 | Program output: 114.802
Correct output: 139.929 | Program output: 176.713
Correct output: 226.230 | Program output: 306.723
Correct output: 129.442 | Program output: 211.027
Correct output: 723.847 | Program output: 554.347
Correct output: 182.792 | Program output: 278.285
Correct output: 39.803 | Program output: 29.166
Correct output: 128.192 | Program output: 63.271
Correct output: 624.606 | Program output: 568.359
Correct output: 397.298 | Program output: 384.954
Correct output: 12.690 | Program output: 24.378
Correct output: 100.386 | Program output: 158.391
Correct output: 7.550 | Program output: 8.524
Correct output: 30.019 | Program output: 43.591
Correct output: 48.697 | Program output: 83.318
Correct output: 101.830 | Program output: 167.330
Correct output: 54.972 | Program output: 16.302
Correct output: 55.501 | Program output: 93.657
Correct output: 46.143 | Program output: 80.900
Correct output: 808.426 | Program output: 519.963
Correct output: 178.068 | Program output: 129.832
Correct output: 207.417 | Program output: 215.012
Correct output: 93.518 | Program output: 123.202
Correct output: 490.815 | Program output: 354.951
Correct output: 1247.817 | Program output: 584.386
Correct output: 160.740 | Program output: 266.863
Correct output: 1006.197 | Program output: 303.069
Correct output: 385.498 | Program output: 508.540
Correct output: 226.865 | Program output: 170.116
Correct output: 44.815 | Program output: 7.661
Correct output: 139.446 | Program output: 111.138
Correct output: 98.158 | Program output: 85.494
Correct output: 134.416 | Program output: 165.527
Correct output: 57.911 | Program output: 67.543
Correct output: 838.313 | Program output: 629.165
Correct output: 192.012 | Program output: 243.085
Correct output: 241.040 | Program output: 362.463
Correct output: 52.438 | Program output: 67.782
Correct output: 63.745 | Program output: 85.666
Correct output: 276.361 | Program output: 391.966
Correct output: 9.005 | Program output: 15.054
Correct output: 28.509 | Program output: 21.250
Correct output: 26.238 | Program output: 45.308
Correct output: 64.284 | Program output: 78.160
Correct output: 397.628 | Program output: 385.091
Correct output: 161.133 | Program output: 137.054
Correct output: 54.111 | Program output: 64.628
Correct output: 20.954 | Program output: 11.270
Correct output: 279.470 | Program output: 241.230
Correct output: 235.457 | Program output: 142.565
Correct output: 337.121 | Program output: 353.115
Correct output: 141.508 | Program output: 219.165
Correct output: 18.824 | Program output: 31.588
Correct output: 216.404 | Program output: 182.654
Correct output: 120.372 | Program output: 193.638
Correct output: 354.574 | Program output: 452.236
Correct output: 86.713 | Program output: 148.537
Correct output: 37.202 | Program output: 25.244
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 39 38 38 1 1 1 39 38 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 38 2 46 1 2 1 1 1 1 1 1 1 1 1 1 1 2 38 1 1 1 1 1 1 1 38 1 1 38 1 1 1 1 4 1 1 2 1 1 1 1 18 1 1 1 1 1 1 1 1 38 1 1 2 1 1 2 1 1 2 4 1 1 1 2 1 1 1 40 37 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 38 1 2 1 1 2 1 1 38 1 1 1 1 2 1 1 1 1 1 1 1 2 38 1 1 1 1 1 1 1 2 37 38 1 1 1 2 1 1 1 1 38 3 1 1 1 1 3 1 1 2 1 1 3 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 39 1 1 1 1 1 1 1 3 3 1)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0 0 39 38 38 0 0 0 39 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 46 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 38 0 0 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 37 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 37 38 0 0 0 0 0 0 0 0 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.77
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction 2.0} {:close 0, :instruction 1.0} {:close 0, :instruction float_yankdup} {:close 0, :instruction float_floor} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_deepdup} {:close 0, :instruction tag_float_143} {:close 0, :instruction integer_abs} {:close 0, :instruction float_sin} {:close 1, :instruction float_add} {:close 0, :instruction tagged_202} {:close 0, :instruction 2.0} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_yank} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction float_empty} {:close 0, :instruction float_min} {:close 0, :instruction boolean_yank} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction in3} {:close 0, :instruction integer_swap} {:close 0, :instruction float_gt} {:close 0, :instruction 0.0} {:close 0, :instruction in2} {:close 0, :instruction exec_while} {:close 1, :instruction in3} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_pop} {:close 0, :instruction float_log10} {:close 0, :instruction integer_pop} {:close 1, :instruction float_frominteger} {:close 0, :instruction integer_max} {:close 0, :instruction exec_do*count} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction float_add} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction 2.0} {:close 2, :instruction exec_rot} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_y} {:close 1, :instruction integer_flush} {:close 0, :instruction float_arccos} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_xor} {:close 1, :instruction in2} {:close 0, :instruction float_tan} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yank} {:close 0, :instruction 1.0} {:close 1, :instruction float_ceiling} {:close 1, :instruction exec_noop} {:close 0, :instruction float_dec} {:close 0, :instruction float_arccos} {:close 0, :instruction float_abs} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_dup} {:close 0, :instruction float_swap} {:close 0, :instruction float_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction float_pow} {:close 0, :instruction integer_abs} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_s} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_mult} {:close 0, :instruction exec_swap} {:close 1, :instruction 0.0} {:close 0, :instruction float_negate} {:close 0, :instruction in3} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_deepdup} {:close 1, :instruction float_add} {:close 0, :instruction integer_eq} {:close 0, :instruction float_flush} {:close 1, :instruction exec_k} {:close 0, :instruction 1.0} {:close 1, :instruction float_arcsin} {:close 0, :instruction float_flush} {:close 0, :instruction integer_yankdup} {:close 1, :instruction in2} {:close 0, :instruction exec_yank} {:close 2, :instruction in1} {:close 0, :instruction exec_y} {:close 1, :instruction float_add} {:close 0, :instruction float_square} {:close 0, :instruction float_min} {:close 1, :instruction in2} {:close 1, :instruction exec_yank} {:close 0, :instruction 0.0} {:close 1, :instruction integer_lte} {:close 0, :instruction 2.0} {:close 0, :instruction float_eq} {:close 0, :instruction float_log2} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction float_cos} {:close 0, :instruction exec_deepdup} {:close 0, :instruction tag_integer_806} {:close 0, :instruction in2} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_shove} {:close 0, :instruction tag_exec_641} {:close 0, :instruction float_floor} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 1, :instruction in2} {:close 0, :instruction float_div} {:close 0, :instruction boolean_rot} {:close 0, :instruction float_sub} {:close 1, :instruction boolean_dup_items} {:close 1, :instruction in2} {:close 0, :instruction 0.0} {:close 1, :instruction float_pow} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 1, :instruction float_yank} {:close 0, :instruction float_empty} {:close 0, :instruction float_sqrt} {:close 1, :instruction float_stackdepth} {:close 0, :instruction float_mod} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 1, :instruction tagged_966} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_max} {:close 0, :instruction float_sin} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in3} {:close 0, :instruction in3} {:close 1, :instruction in3} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_flush} {:close 0, :instruction float_ceiling} {:close 0, :instruction in1} {:close 0, :instruction integer_inc} {:close 0, :instruction float_arccos} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 1, :instruction float_cos} {:close 0, :instruction exec_noop} {:close 0, :instruction float_div} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in2} {:close 0, :instruction float_mod} {:close 1, :instruction float_gte} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_negate} {:close 1, :instruction in2} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction in2} {:close 1, :instruction integer_rot} {:close 0, :instruction in1} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction float_min} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction float_frominteger} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_shove} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction tagged_224} {:close 0, :instruction exec_while} {:close 0, :instruction in1} {:close 0, :instruction integer_flush} {:close 0, :instruction float_ceiling} {:close 0, :instruction in2} {:close 0, :instruction 1.0} {:close 0, :instruction boolean_dup} {:close 0, :instruction float_square} {:close 0, :instruction in2} {:close 0, :instruction float_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_deepdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_rot} {:close 0, :instruction float_frominteger} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction float_arccos} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction float_shove} {:close 0, :instruction exec_yank} {:close 1, :instruction 0.0} {:close 0, :instruction float_max} {:close 0, :instruction float_empty} {:close 1, :instruction integer_dup} {:close 0, :instruction in2} {:close 1, :instruction float_deepdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_abs} {:close 0, :instruction float_empty} {:close 0, :instruction in3} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_do*count} {:close 1, :instruction float_add} {:close 0, :instruction exec_when} {:close 0, :instruction in1})
Best program: (boolean_stackdepth 2.0 1.0 float_yankdup float_floor in2 integer_dup_items exec_noop in2 exec_while (boolean_deepdup tag_float_143 integer_abs float_sin float_add) tagged_202 2.0 exec_eq exec_yank in3 in1 float_empty float_min boolean_yank in1 boolean_swap integer_swap boolean_yankdup exec_if (in3 integer_swap float_gt 0.0 in2 exec_while (in3) exec_shove (integer_swap exec_if (in2 exec_do*range (exec_when (in3 exec_yankdup integer_sub boolean_pop float_log10 integer_pop float_frominteger) integer_max exec_do*count (in3 boolean_dup_times exec_y (float_add integer_stackdepth in3 2.0 exec_rot () () (exec_stackdepth exec_y (integer_flush) float_arccos exec_y (boolean_xor in2) float_tan boolean_yankdup boolean_yank 1.0 float_ceiling) exec_noop) float_dec float_arccos float_abs integer_fromboolean integer_dup float_swap float_shove boolean_swap float_pow integer_abs integer_gt exec_when (boolean_eq exec_s (exec_shove (exec_empty integer_mult) exec_swap (0.0) (float_negate in3 integer_empty boolean_deepdup float_add) integer_eq float_flush exec_k () (1.0 float_arcsin) float_flush integer_yankdup in2) (exec_yank in1) () exec_y (float_add) float_square float_min in2) exec_yank) 0.0 integer_lte) 2.0 float_eq float_log2 exec_rot (integer_shove float_cos exec_deepdup tag_integer_806 in2 integer_gt integer_shove tag_exec_641 (float_floor in2 boolean_pop in2) float_div boolean_rot float_sub boolean_dup_items) (in2) (0.0 float_pow) integer_sub in1 float_yank) (float_empty float_sqrt float_stackdepth) float_mod exec_eq) integer_dup tagged_966) (exec_dup (integer_max float_sin integer_dup integer_deepdup in3 in3 in3) boolean_shove boolean_flush float_ceiling in1 integer_inc float_arccos in1 integer_shove float_cos) exec_noop float_div integer_fromfloat in2 float_mod float_gte boolean_invert_first_then_and integer_negate in2 boolean_shove integer_eq in2 integer_rot in1 integer_flush boolean_and float_min boolean_yankdup float_frominteger exec_stackdepth exec_shove () boolean_stackdepth exec_stackdepth tagged_224 exec_while (in1 integer_flush float_ceiling in2 1.0 boolean_dup float_square in2 float_swap exec_eq exec_do*range (exec_deepdup boolean_flush in2 integer_empty exec_rot () (float_frominteger boolean_yankdup float_arccos boolean_yankdup) (boolean_invert_first_then_and in1 boolean_swap) float_shove exec_yank 0.0) float_max float_empty integer_dup) in2 float_deepdup boolean_invert_second_then_and integer_abs float_empty in3 boolean_swap exec_do*count (float_add) exec_when (in1))
Errors: [18.41 11.19 17.116 33.144 50.467 3.498 138.422 10.798 11.538 90.961 14.515 112.808 12.599 4.134 38.555 132.412 17.428 78.082 89.835 14.575 35.047 31.023 9.943 85.788 116.32 10.018 49.312 0.001 34.69 8.921 110.029 64.034 21.674 2.018 13.054 3.001 6.807 16.212 79.182 22.858 112.825 76.061 22.605 108.135 59.874 435.569 129.009 1.095 35.472 92.443 23.514 365.302 84.034 2.912 27.476 52.497 85.228 2.154 47.318 146.915 22.942 3195.607 105.238 28.513 70.393 1156.833 8.98 122.963 76.656 24.602 68.689 272.276 262.864 734.493 41.897 15.686 38.952 83.567 49.573 18.944 100.51 4.619 7.704 78.131 46.363 704.491 15.534 38.195 155.112 53.853 20.073 26.873 51.445 4.317 0.389 6.903 2.917 42.871 7.58 575.129 91.19 34.305 120.802 237.691 36.972 22.82 7.252 7.547 51.345 422.25 9.963 21.212 60.942 336.012 6.645 57.817 45.765 6.389 121.906 9.51 105.572 62.945 221.916 4.165 3.376 36.667 94.084 21.563 134.632 113.837 70.848 134.639 210.466 139.062 6.749 66.626 76.119 73.402 124.993 0.087 20.111 36.407 46.409 36.784 80.493 81.585 169.5 95.494 10.638 64.921 56.246 12.345 11.689 58.005 0.974 13.572 34.621 65.5 38.67 38.156 34.757 288.463 48.235 7.595 29.684 135.864 663.43 106.123 703.128 123.042 56.749 37.154 28.308 12.664 31.111 9.632 209.148 51.073 121.423 15.344 21.921 115.606 6.049 7.258 19.07 13.876 12.536 24.079 10.517 9.684 38.24 92.892 15.995 77.657 12.763 33.75 73.265 97.662 61.825 11.958]
Total: 19725.267000000003
Mean: 98.626335
Genome size: 229
Size: 269
Percent parens: 0.149
Age: 15
--- Population Statistics ---
Average total errors in population: 5.909823365146953E12
Median total errors in population: 42531.48799999998
Error averages by case: (2.8000048357001415E10 2.750003404597131E10 2.95007681660387E10 3.250003238595404E10 2.766260707712375E10 2.0000034145435654E10 3.500005853596334E10 3.000003962769068E10 2.6500051107199757E10 2.7521282356279476E10 3.2500037356553215E10 3.350004115571762E10 3.0000038257422066E10 2.0000032029246128E10 3.200003387346669E10 3.100004545099027E10 2.8606497147593132E10 2.900004121947213E10 2.650058469398996E10 2.9000073721708652E10 2.9073832923305862E10 2.8000353600823063E10 2.9500039375806313E10 3.0000041927005848E10 2.9500188089831688E10 2.9500463923391655E10 2.8150087016121975E10 2.1000033016073822E10 3.2503301032612778E10 2.0764013053049046E10 3.4500050773381805E10 2.800003987956422E10 2.3500037181591988E10 1.900003408582498E10 3.550003810260091E10 2.9012609411112755E10 3.0000035248376602E10 3.250003616270961E10 2.750004448693959E10 2.7500036371610714E10 3.000005082792164E10 2.850004137914873E10 3.0500033591075188E10 2.956559373292826E10 3.3500041750853073E10 3.000005897900082E10 3.000005493615304E10 2.7500036071315586E10 3.000004534867817E10 3.100005025672821E10 3.0214684988071083E10 3.2500435428015602E10 3.4000043109557526E10 2.8500049489954445E10 3.200004700775362E10 3.5016074880224205E10 3.400004423230759E10 2.705664075959039E10 2.8352877622237545E10 3.100006992055619E10 3.0000056364116005E10 2.95401379386841E10 3.0500038975132275E10 2.750004063088545E10 2.9500046027996777E10 2.9584030109410755E10 2.6000035089017757E10 3.101035700877874E10 3.0001571599742065E10 2.9000044438490406E10 3.2502439694407322E10 2.9500040541342636E10 3.100004003590287E10 3.1000045230060143E10 3.3500036890064255E10 2.950004618394658E10 2.8529951293446922E10 3.3500056955242043E10 2.6699512269730045E10 2.6000043048717117E10 3.3500040881657104E10 2.407657920870942E10 2.750003482621493E10 3.100005542192065E10 2.785800717508915E10 3.0581014868044655E10 2.800003024744146E10 3.300769559236517E10 3.000003879633166E10 3.1389873533890614E10 3.250003951259558E10 3.2500093325939976E10 3.1000040951519215E10 3.0500034068928413E10 1.9000034021072315E10 2.902843752025158E10 2.200003511490236E10 2.9001657952166733E10 2.815952136101734E10 2.900007656528127E10 2.950053854508151E10 2.7757633173902252E10 2.855352709899024E10 3.3500096656976925E10 3.002863024058847E10 2.900003718791051E10 3.1000050643417023E10 3.031405401954773E10 3.4073711019620052E10 3.353702989205097E10 2.676837919593164E10 2.6037283638479156E10 3.1000030541184715E10 3.450005234862342E10 2.1000213795690243E10 3.055594513761768E10 2.800016024133461E10 3.0500034495250774E10 3.5000051849847084E10 2.7500034050291725E10 2.850004758250104E10 3.277826776686632E10 3.3500088890992283E10 2.7160523632438896E10 3.0000060321510742E10 3.150003459744795E10 3.350003594758674E10 2.8001528777446297E10 3.0830631410548164E10 3.350004526834973E10 3.3500052680757248E10 3.0000039862353447E10 3.1500042822015335E10 3.0000054059422695E10 3.450003727065228E10 3.1000036046635704E10 2.8003773936451263E10 3.200003688717046E10 3.10000534720981E10 3.12175113242962E10 3.45000358238069E10 3.2500049753076187E10 3.0001821495517765E10 2.900003770900134E10 3.050004913548253E10 3.0000038591307617E10 3.3500057819529224E10 2.952580149376884E10 3.050003220868019E10 3.0500034475597557E10 3.0500730137756634E10 3.4000058249666817E10 2.6000180062723515E10 3.450003722338097E10 1.900003503111374E10 2.800006817175603E10 3.0151765404925106E10 3.350003752390961E10 2.8502394189798164E10 2.9865140540252483E10 2.853169058484008E10 3.3500068098462376E10 2.969660666636485E10 3.5000042123109985E10 2.9308488809275475E10 2.800850196630275E10 3.050007344591222E10 3.050004765719524E10 2.8500111081415264E10 3.1000072495816177E10 2.614038608753079E10 2.400003016495767E10 2.9000040446530697E10 2.6624925302227283E10 3.1500049436071095E10 2.8507430541305553E10 3.3500094030827694E10 2.9500424403459515E10 3.0500264590699963E10 3.0000037548517445E10 3.2507380490141727E10 3.2000061688915966E10 2.200003403833609E10 2.200003315552157E10 2.4011948062901043E10 2.5519183774222904E10 3.3500052196052097E10 2.650004391641368E10 2.950959621448133E10 2.4455178933760227E10 3.0000038327332718E10 3.450003646888212E10 2.850005173985895E10 2.970071947483202E10 2.5000038097684547E10 3.063942932131934E10 2.8500553890597305E10 2.8500064866251648E10 2.9500041554653133E10 2.601411012796508E10)
Error minima by case: (0.116 0.018 0.0 0.0 0.0 0.076 0.224 0.143 0.0 0.0 0.092 0.471 0.163 0.035 0.216 0.059 0.369 0.771 0.12 0.034 0.029 0.023 0.051 0.065 0.092 0.0 0.117 0.0 0.488 0.012 0.393 0.546 0.033 0.001 0.819 0.208 0.113 0.001 1.226 0.872 0.095 0.734 0.0 0.617 0.477 15.789 1.692 0.007 0.121 3.315 0.0 0.748 0.055 0.0 0.059 0.185 0.153 0.217 0.159 0.414 0.495 0.36 0.178 0.546 0.015 192.85 0.02 0.363 0.006 0.002 0.457 1.16 1.016 1.59 0.041 0.0 0.049 1.105 0.129 0.259 0.686 0.04 0.035 0.766 0.076 5.534 0.004 0.006 1.95 0.05 0.071 0.384 0.056 0.0 0.0 0.219 0.0 0.121 0.296 0.773 0.551 0.268 1.162 0.533 1.108 0.024 0.298 0.707 0.061 2.259 0.093 0.035 0.108 6.931 0.086 0.113 0.184 0.0 0.13 0.003 0.812 0.097 0.096 0.069 0.957 0.0 1.652 0.031 1.938 0.118 2.478 0.755 10.504 0.245 0.636 0.126 0.157 0.298 0.019 0.0 0.23 1.0 0.008 0.142 0.297 0.198 3.178 0.004 0.0 0.0 3.305 0.312 0.001 0.312 0.041 0.016 0.095 0.67 0.0 0.067 0.037 16.342 1.569 0.206 0.024 0.461 1.693 0.364 30.126 3.938 0.043 0.013 0.027 0.121 0.111 0.012 10.61 0.194 0.02 0.01 0.033 0.09 0.005 0.04 0.08 0.036 2.328 1.018 0.183 0.0 0.316 1.123 0.054 0.919 0.022 0.566 1.205 1.691 0.239 0.048)
Average genome size in population (length): 202.848
Average program size in population (points): 236.387
Average percent parens in population: 0.142
Minimum age in population: 15.0
Maximum age in population: 15.0
Average age in population: 15.0
Median age in population: 15.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.77
Error (vector) diversity:			 0.77
Behavioral diversity:				 0.776
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 16000
Number of program executions (running on a single case counts as 1 execution): 3200000
Number of point (instruction) evaluations so far: 2817759331
--- Timings ---
Current time: 1745364436192 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... 
Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Bouncing Balls problem report - generation 16
Test total error for best: 197379.75899999993
Test mean error for best: 98.68988
;;------------------------------
Outputs of best individual on training cases:
Correct output: 104.597 | Program output: 6.752
Correct output: 12.371 | Program output: 3.000
Correct output: 73.158 | Program output: 148.327
Correct output: 107.414 | Program output: 226.296
Correct output: 66.004 | Program output: 21.651
Correct output: 18.351 | Program output: 1.768
Correct output: 203.233 | Program output: 200.324
Correct output: 168.282 | Program output: 94.355
Correct output: 22.792 | Program output: 13.348
Correct output: 101.076 | Program output: 11.375
Correct output: 89.438 | Program output: 4.455
Correct output: 167.016 | Program output: 147.962
Correct output: 249.241 | Program output: 327.858
Correct output: 17.252 | Program output: 1.487
Correct output: 78.298 | Program output: 45.989
Correct output: 192.343 | Program output: 180.723
Correct output: 325.936 | Program output: 254.833
Correct output: 137.403 | Program output: 63.559
Correct output: 159.858 | Program output: 23.250
Correct output: 43.816 | Program output: 2.948
Correct output: 46.214 | Program output: 19.240
Correct output: 41.847 | Program output: 14.629
Correct output: 111.620 | Program output: 52.034
Correct output: 136.088 | Program output: 76.255
Correct output: 180.744 | Program output: 172.677
Correct output: 77.511 | Program output: 196.041
Correct output: 79.636 | Program output: 30.912
Correct output: 2.001 | Program output: 1.000
Correct output: 114.432 | Program output: 88.267
Correct output: 19.059 | Program output: 6.212
Correct output: 290.212 | Program output: 307.987
Correct output: 197.499 | Program output: 296.733
Correct output: 64.127 | Program output: 9.982
Correct output: 8.284 | Program output: 1.101
Correct output: 203.329 | Program output: 129.725
Correct output: 104.522 | Program output: 79.622
Correct output: 124.531 | Program output: 94.723
Correct output: 125.101 | Program output: 67.733
Correct output: 133.674 | Program output: 65.597
Correct output: 112.074 | Program output: 56.551
Correct output: 308.094 | Program output: 329.470
Correct output: 106.842 | Program output: 73.570
Correct output: 144.377 | Program output: 475.090
Correct output: 296.288 | Program output: 309.698
Correct output: 205.797 | Program output: 213.611
Correct output: 985.735 | Program output: 552.221
Correct output: 680.660 | Program output: 546.055
Correct output: 32.170 | Program output: 6.780
Correct output: 343.239 | Program output: 294.298
Correct output: 584.598 | Program output: 458.391
Correct output: 97.620 | Program output: 225.546
Correct output: 712.538 | Program output: 278.094
Correct output: 123.589 | Program output: 96.847
Correct output: 69.710 | Program output: 193.019
Correct output: 250.818 | Program output: 183.807
Correct output: 120.502 | Program output: 32.302
Correct output: 137.940 | Program output: 114.615
Correct output: 64.091 | Program output: 22.171
Correct output: 65.119 | Program output: 36.794
Correct output: 335.947 | Program output: 398.176
Correct output: 475.105 | Program output: 449.976
Correct output: 3999.600 | Program output: 999.985
Correct output: 279.985 | Program output: 123.437
Correct output: 201.372 | Program output: 211.258
Correct output: 189.382 | Program output: 158.222
Correct output: 1543.271 | Program output: 328.757
Correct output: 102.020 | Program output: 1.000
Correct output: 193.877 | Program output: 191.839
Correct output: 128.350 | Program output: 102.191
Correct output: 53.143 | Program output: 8.321
Correct output: 181.602 | Program output: 149.629
Correct output: 431.170 | Program output: 83.656
Correct output: 619.098 | Program output: 289.356
Correct output: 986.172 | Program output: 171.027
Correct output: 77.831 | Program output: 47.435
Correct output: 55.900 | Program output: 90.162
Correct output: 54.583 | Program output: 28.646
Correct output: 622.783 | Program output: 519.245
Correct output: 83.177 | Program output: 30.779
Correct output: 42.501 | Program output: 5.362
Correct output: 184.764 | Program output: 172.928
Correct output: 67.665 | Program output: 11.499
Correct output: 19.670 | Program output: 4.874
Correct output: 464.533 | Program output: 506.292
Correct output: 106.459 | Program output: 25.612
Correct output: 1108.353 | Program output: 347.302
Correct output: 56.702 | Program output: 50.834
Correct output: 53.970 | Program output: 26.465
Correct output: 259.503 | Program output: 44.112
Correct output: 101.480 | Program output: 38.153
Correct output: 56.812 | Program output: 7.527
Correct output: 75.112 | Program output: 42.596
Correct output: 104.689 | Program output: 70.212
Correct output: 27.529 | Program output: 39.539
Correct output: 3.963 | Program output: 2.389
Correct output: 83.268 | Program output: 24.304
Correct output: 11.973 | Program output: 1.787
Correct output: 76.197 | Program output: 23.278
Correct output: 99.025 | Program output: 53.520
Correct output: 1219.703 | Program output: 701.356
Correct output: 396.400 | Program output: 423.226
Correct output: 125.727 | Program output: 34.666
Correct output: 371.001 | Program output: 420.355
Correct output: 738.413 | Program output: 747.227
Correct output: 280.393 | Program output: 224.236
Correct output: 37.145 | Program output: 7.985
Correct output: 425.982 | Program output: 357.699
Correct output: 357.821 | Program output: 282.487
Correct output: 120.482 | Program output: 30.831
Correct output: 845.157 | Program output: 374.835
Correct output: 68.073 | Program output: 35.381
Correct output: 27.389 | Program output: 7.408
Correct output: 95.616 | Program output: 39.294
Correct output: 747.315 | Program output: 364.677
Correct output: 22.311 | Program output: 11.933
Correct output: 116.926 | Program output: 88.041
Correct output: 111.460 | Program output: 20.654
Correct output: 122.996 | Program output: 445.182
Correct output: 185.091 | Program output: 178.597
Correct output: 12.422 | Program output: 3.115
Correct output: 151.265 | Program output: 120.567
Correct output: 87.691 | Program output: 54.511
Correct output: 705.021 | Program output: 705.117
Correct output: 65.326 | Program output: 35.642
Correct output: 473.339 | Program output: 414.205
Correct output: 147.045 | Program output: 409.993
Correct output: 220.192 | Program output: 58.185
Correct output: 25.498 | Program output: 7.601
Correct output: 464.800 | Program output: 249.153
Correct output: 223.405 | Program output: 227.991
Correct output: 391.079 | Program output: 393.557
Correct output: 293.758 | Program output: 82.930
Correct output: 335.272 | Program output: 57.934
Correct output: 225.803 | Program output: 240.704
Correct output: 153.545 | Program output: 108.577
Correct output: 106.271 | Program output: 58.009
Correct output: 164.365 | Program output: 137.504
Correct output: 184.316 | Program output: 157.000
Correct output: 182.005 | Program output: 169.031
Correct output: 124.203 | Program output: 488.874
Correct output: 66.716 | Program output: 39.331
Correct output: 306.042 | Program output: 360.895
Correct output: 68.394 | Program output: 28.821
Correct output: 139.929 | Program output: 90.127
Correct output: 226.230 | Program output: 204.183
Correct output: 129.442 | Program output: 71.002
Correct output: 723.847 | Program output: 547.274
Correct output: 182.792 | Program output: 168.188
Correct output: 39.803 | Program output: 55.688
Correct output: 128.192 | Program output: 177.934
Correct output: 624.606 | Program output: 556.083
Correct output: 397.298 | Program output: 306.125
Correct output: 12.690 | Program output: 2.072
Correct output: 100.386 | Program output: 39.648
Correct output: 7.550 | Program output: 1.273
Correct output: 30.019 | Program output: 10.046
Correct output: 48.697 | Program output: 22.215
Correct output: 101.830 | Program output: 50.257
Correct output: 54.972 | Program output: 23.271
Correct output: 55.501 | Program output: 29.385
Correct output: 46.143 | Program output: 21.367
Correct output: 808.426 | Program output: 513.652
Correct output: 178.068 | Program output: 59.622
Correct output: 207.417 | Program output: 125.012
Correct output: 93.518 | Program output: 14.803
Correct output: 490.815 | Program output: 279.095
Correct output: 1247.817 | Program output: 608.009
Correct output: 160.740 | Program output: 144.620
Correct output: 1006.197 | Program output: 226.457
Correct output: 385.498 | Program output: 442.597
Correct output: 226.865 | Program output: 427.009
Correct output: 44.815 | Program output: 4.081
Correct output: 139.446 | Program output: 130.383
Correct output: 98.158 | Program output: 30.608
Correct output: 134.416 | Program output: 99.143
Correct output: 57.911 | Program output: 5.481
Correct output: 838.313 | Program output: 674.103
Correct output: 192.012 | Program output: 145.996
Correct output: 241.040 | Program output: 252.255
Correct output: 52.438 | Program output: 3.069
Correct output: 63.745 | Program output: 25.808
Correct output: 276.361 | Program output: 291.815
Correct output: 9.005 | Program output: 1.721
Correct output: 28.509 | Program output: 11.461
Correct output: 26.238 | Program output: 9.459
Correct output: 64.284 | Program output: 27.180
Correct output: 397.628 | Program output: 378.754
Correct output: 161.133 | Program output: 128.870
Correct output: 54.111 | Program output: 24.511
Correct output: 20.954 | Program output: 13.376
Correct output: 279.470 | Program output: 386.685
Correct output: 235.457 | Program output: 115.473
Correct output: 337.121 | Program output: 266.814
Correct output: 141.508 | Program output: 115.654
Correct output: 18.824 | Program output: 2.130
Correct output: 216.404 | Program output: 99.844
Correct output: 120.372 | Program output: 92.951
Correct output: 354.574 | Program output: 373.797
Correct output: 86.713 | Program output: 50.421
Correct output: 37.202 | Program output: 24.409
;;******************************
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 43 43 44 1 3 1 44 44 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 44 1 57 1 8 1 1 1 1 1 1 4 1 1 1 3 1 44 1 1 1 2 1 1 1 43 1 1 44 1 1 1 1 3 1 1 2 1 1 1 1 17 1 1 1 1 1 1 1 1 43 1 1 1 1 5 8 1 1 4 6 1 1 1 1 6 1 1 43 43 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 4 1 1 1 1 43 1 3 1 1 2 1 1 43 1 1 1 1 2 1 1 1 1 1 1 2 3 43 1 1 1 1 1 1 2 1 43 44 1 1 1 1 1 3 1 1 44 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 2 1 1 1 3 1 1 1 1 43 1 1 1 1 2 1 1 1 3 1)
Population mean number of elite cases: 1.15
Count of perfect (error zero) individuals by case: (0 0 43 43 44 0 0 0 44 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 57 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 0 0 0 0 0 0 43 0 0 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 43 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 43 43 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 43 0 0 0 0 0 0 0 43 0 0 0 0 0 0 0 0 0 0 0 0 0 43 0 0 0 0 0 0 0 0 43 44 0 0 0 0 0 0 0 0 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 43 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.88
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction float_pow} {:close 0, :instruction integer_pow} {:close 0, :instruction integer_fromfloat} {:close 0, :instruction in2} {:close 0, :instruction tag_float_19} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction in2} {:close 1, :instruction float_dec} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_sub} {:close 1, :instruction 1.0} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 1, :instruction integer_mult} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction 2.0} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in2} {:close 0, :instruction float_mod} {:close 0, :instruction 0.0} {:close 1, :instruction float_yankdup} {:close 0, :instruction exec_if} {:close 1, :instruction float_sqrt} {:close 0, :instruction float_max} {:close 0, :instruction integer_gte} {:close 0, :instruction in2} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_flush} {:close 0, :instruction in2} {:close 0, :instruction float_shove} {:close 0, :instruction in1} {:close 0, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_min} {:close 1, :instruction float_shove} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dec} {:close 0, :instruction in1} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_y} {:close 1, :instruction 0.0} {:close 2, :instruction in1} {:close 0, :instruction 2.0} {:close 0, :instruction exec_dup_items} {:close 1, :instruction exec_noop} {:close 0, :instruction in1} {:close 1, :instruction integer_dup_times} {:close 0, :instruction float_gte} {:close 1, :instruction 1.0} {:close 0, :instruction in1} {:close 0, :instruction 0.0} {:close 0, :instruction in2} {:close 0, :instruction float_sin} {:close 0, :instruction float_eq} {:close 0, :instruction float_sub} {:close 0, :instruction float_dup} {:close 0, :instruction float_frominteger} {:close 0, :instruction integer_min} {:close 0, :instruction in2} {:close 0, :instruction integer_pow} {:close 0, :instruction integer_abs} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction 1.0} {:close 1, :instruction float_shove} {:close 0, :instruction float_fromboolean} {:close 1, :instruction in2} {:close 0, :instruction float_lte} {:close 0, :instruction integer_yankdup} {:close 0, :instruction float_abs} {:close 0, :instruction float_dup} {:close 0, :instruction float_cos} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_swap} {:close 0, :instruction float_sqrt} {:close 0, :instruction float_mult} {:close 0, :instruction exec_flush} {:close 0, :instruction float_dup} {:close 1, :instruction in2} {:close 0, :instruction tagged_298} {:close 1, :instruction float_dup} {:close 1, :instruction float_empty} {:close 0, :instruction boolean_not} {:close 0, :instruction in1} {:close 0, :instruction float_square} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction float_floor} {:close 0, :instruction integer_rot} {:close 0, :instruction 0.0} {:close 1, :instruction 0.0} {:close 0, :instruction float_negate} {:close 0, :instruction exec_do*count} {:close 0, :instruction 1.0} {:close 0, :instruction exec_dup_times} {:close 0, :instruction float_rot} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_pow} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_not} {:close 1, :instruction in2} {:close 0, :instruction exec_while} {:close 1, :instruction float_rot} {:close 0, :instruction exec_if} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_y} {:close 0, :instruction float_max} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_deepdup} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction boolean_flush} {:close 1, :instruction float_fromboolean} {:close 0, :instruction exec_while} {:close 1, :instruction integer_deepdup} {:close 0, :instruction exec_if} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_while} {:close 0, :instruction exec_noop} {:close 1, :instruction float_fromboolean} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction float_min} {:close 1, :instruction integer_negate} {:close 0, :instruction exec_s} {:close 1, :instruction float_lt} {:close 1, :instruction integer_max} {:close 1, :instruction integer_fromfloat} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction float_div} {:close 0, :instruction float_floor} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction float_mod} {:close 1, :instruction exec_when} {:close 0, :instruction in1} {:close 0, :instruction float_arccos} {:close 0, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_rot} {:close 1, :instruction float_shove} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_dup} {:close 1, :instruction float_negate} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_empty} {:close 0, :instruction float_yankdup} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_add} {:close 1, :instruction integer_abs} {:close 0, :instruction exec_pop} {:close 1, :instruction in1} {:close 0, :instruction integer_abs} {:close 0, :instruction float_sub} {:close 0, :instruction in1} {:close 0, :instruction float_shove} {:close 0, :instruction in3} {:close 0, :instruction float_tan} {:close 1, :instruction boolean_swap} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction float_abs} {:close 0, :instruction exec_when} {:close 1, :instruction in1} {:close 1, :instruction integer_deepdup} {:close 1, :instruction 1.0} {:close 0, :instruction float_dup_items} {:close 0, :instruction integer_mult} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction float_inc} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_s} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_dup})
Best program: (float_pow integer_pow integer_fromfloat in2 tag_float_19 boolean_stackdepth in2 float_dec integer_yankdup integer_sub 1.0 exec_stackdepth in2 in3 integer_mult boolean_frominteger 2.0 integer_fromboolean in2 float_mod 0.0 float_yankdup exec_if (float_sqrt) (float_max integer_gte in2 exec_dup_times (exec_pop (exec_flush in2 float_shove in1 exec_do*count (in2 integer_stackdepth) integer_min float_shove) integer_dup integer_mult exec_empty integer_dec in1 integer_sub integer_shove exec_y (0.0) in1)) 2.0 exec_dup_items exec_noop in1 integer_dup_times float_gte 1.0 in1 0.0 in2 float_sin float_eq float_sub float_dup float_frominteger integer_min in2 integer_pow integer_abs in1 in1 1.0 float_shove float_fromboolean in2 float_lte integer_yankdup float_abs float_dup float_cos boolean_xor exec_swap (float_sqrt float_mult exec_flush float_dup in2) (tagged_298 float_dup) float_empty boolean_not in1 float_square in3 in1 float_floor integer_rot 0.0 0.0 float_negate exec_do*count (1.0 exec_dup_times (float_rot integer_fromboolean) integer_pow exec_do*count (boolean_not in2) exec_while (float_rot) exec_if (in3 in1 in2 exec_y (float_max boolean_invert_second_then_and integer_deepdup in1 in2 boolean_flush float_fromboolean) exec_while (integer_deepdup) exec_if (integer_swap) (exec_pop (exec_while (exec_noop float_fromboolean) integer_mod boolean_invert_first_then_and float_min integer_negate) exec_s (float_lt) (integer_max) (integer_fromfloat) exec_dup () boolean_dup_items float_div) float_floor in2 exec_if (exec_noop boolean_empty float_mod exec_when () in1 float_arccos in1 boolean_stackdepth boolean_rot float_shove) (integer_lt integer_empty exec_dup (float_negate) integer_pop integer_shove exec_empty float_yankdup integer_lt) integer_add integer_abs) (exec_pop (in1) integer_abs float_sub in1 float_shove in3 float_tan boolean_swap) in2 exec_if (float_abs exec_when (in1) integer_deepdup) (1.0) float_dup_items integer_mult in3 boolean_invert_second_then_and float_inc exec_yankdup exec_s (exec_yank boolean_dup) () ()))
Errors: [97.845 9.371 75.17 118.881 44.353 16.583 2.909 73.927 9.444 89.701 84.983 19.054 78.617 15.766 32.309 11.62 71.103 73.844 136.608 40.869 26.974 27.218 59.587 59.833 8.067 118.53 48.723 1.001 26.165 12.847 17.775 99.234 54.144 7.183 73.604 24.901 29.809 57.369 68.077 55.523 21.376 33.273 330.713 13.41 7.814 433.513 134.605 25.39 48.941 126.208 127.926 434.444 26.742 123.309 67.01 88.2 23.325 41.919 28.325 62.229 25.128 2999.615 156.548 9.886 31.16 1214.513 101.02 2.038 26.159 44.821 31.974 347.514 329.742 815.145 30.396 34.262 25.937 103.538 52.397 37.139 11.836 56.166 14.795 41.759 80.847 761.051 5.868 27.505 215.391 63.326 49.285 32.515 34.478 12.01 1.574 58.964 10.186 52.919 45.505 518.347 26.826 91.061 49.354 8.813 56.157 29.16 68.283 75.334 89.651 470.323 32.692 19.981 56.322 382.638 10.378 28.885 90.806 322.186 6.494 9.306 30.699 33.18 0.096 29.684 59.134 262.948 162.007 17.897 215.647 4.586 2.478 210.828 277.338 14.901 44.968 48.262 26.861 27.317 12.974 364.671 27.384 54.853 39.572 49.802 22.047 58.44 176.573 14.604 15.885 49.743 68.523 91.173 10.617 60.738 6.276 19.973 26.482 51.573 31.701 26.116 24.777 294.774 118.446 82.404 78.715 211.72 639.808 16.12 779.74 57.099 200.144 40.734 9.063 67.55 35.273 52.43 164.209 46.016 11.215 49.369 37.937 15.455 7.283 17.047 16.779 37.104 18.874 32.263 29.6 7.578 107.214 119.984 70.307 25.854 16.695 116.56 27.421 19.223 36.292 12.793]
Total: 21116.52199999999
Mean: 105.58261
Genome size: 189
Size: 225
Percent parens: 0.160
Age: 16
--- Population Statistics ---
Average total errors in population: 5.73386368970515E12
Median total errors in population: 42506.170999999995
Error averages by case: (2.7380959735430172E10 1.8480772884260143E10 3.169636950854957E10 3.467473097700373E10 3.1825881964932858E10 1.9683868952194523E10 3.002943937341565E10 2.7762754310109344E10 2.8896209806618954E10 3.292486662935756E10 2.936948376635841E10 3.103588167696035E10 3.1022833802670643E10 2.4767767654385963E10 3.1083218868142845E10 3.003150797005982E10 2.6616576764584385E10 3.0063036855488834E10 2.412479338659641E10 2.5486476087585293E10 2.8156658776205677E10 2.419026598001916E10 2.9102399063462223E10 3.0055799017993645E10 2.753235972561843E10 3.2678870536879066E10 2.828224753966373E10 2.5000042012223392E10 2.8051493440031517E10 2.2295955060221684E10 3.202265854143752E10 3.002301485896028E10 2.2246267527424244E10 1.993776863785747E10 3.103907011754523E10 2.9059176029825912E10 3.1048230169838238E10 2.8064130384536705E10 3.0114221824269154E10 3.1067983856842655E10 2.9022667594647717E10 2.961242684968562E10 3.520759154516681E10 3.102223621481907E10 2.9028144635327496E10 3.1014964488702946E10 3.2015102555648655E10 2.5279514145129993E10 2.902298672930406E10 3.1290017392149673E10 3.2204063992258312E10 2.8023814887790977E10 3.0063002233644753E10 3.3678985549167484E10 3.1031737955264935E10 2.9130892944455418E10 3.10494599129888E10 2.5768759395547314E10 2.6984122580739815E10 3.0047868863926632E10 2.9225924746676456E10 3.1010246730389183E10 2.806087548781091E10 3.0028364832478657E10 3.103689472547666E10 2.9024168968163708E10 2.800024430855422E10 3.103019633222493E10 2.904580406194715E10 2.824357066233037E10 2.9036730797256565E10 2.808295343521225E10 3.002399186073847E10 3.1032501597782154E10 3.111980071770551E10 3.2708804668706913E10 2.7142215111612404E10 2.9015614835060978E10 2.9118597680199375E10 2.6326465195438095E10 2.8807259444953033E10 2.7196582721515766E10 2.3348811720480186E10 3.2015951807428894E10 2.9116094488762375E10 2.9036758239505394E10 2.8072982426386395E10 2.8195166975957664E10 2.708014006526591E10 3.197817651117376E10 3.026042108016079E10 2.9082046217246735E10 3.105880293784349E10 3.275967637453497E10 2.2502486492698715E10 2.8168906067281944E10 1.8679714855247395E10 2.912442354296902E10 3.0389476456289474E10 2.9012829033525215E10 2.7593690081954624E10 2.4422636487221027E10 3.1018291837025497E10 2.9012361410346928E10 2.9027164868460686E10 2.42660282370822E10 3.2024575254275898E10 2.902347197203783E10 2.612497965313697E10 2.8049376808822327E10 2.4763689120675976E10 2.3300435614535248E10 3.108661307199891E10 3.1035951073097145E10 2.119359679972243E10 2.9079674928746803E10 2.4133577822853348E10 3.5813617671277306E10 3.0031659461184868E10 2.2468851148203903E10 3.1071646666605312E10 3.206972696700272E10 2.9012817020226837E10 2.857381562199916E10 2.7067735121250584E10 3.470766948514784E10 2.806664247600164E10 2.4260196944871178E10 3.0026756469185486E10 3.102691319271315E10 3.0018751925264E10 2.70528967689523E10 3.1066836485972393E10 2.8026045058446636E10 2.804398578099974E10 3.3066820582224506E10 2.803759217692115E10 3.0038397651019306E10 3.2032879050492535E10 3.4065735049224186E10 2.8296789243451763E10 2.9019901475981827E10 2.711064709634888E10 2.904979315939235E10 3.116813124025678E10 3.005847892949398E10 3.0015076253880337E10 2.7032890434417004E10 3.174537774707569E10 3.3681431081826836E10 2.851496644892537E10 3.069344293904525E10 1.961679747498757E10 3.008610146993038E10 2.1851329348574005E10 2.3215005977412174E10 2.8138912503274315E10 3.0830507308135456E10 3.1813115449369858E10 2.7114702221698135E10 2.71307564899871E10 3.2015700957608803E10 3.1065860489476635E10 2.9040047944047028E10 2.9014941068508926E10 2.702361248021924E10 3.2014055854581642E10 3.203638713910433E10 2.6526994708024036E10 3.0185113165359722E10 2.736929074267924E10 2.441767390878001E10 3.00389372055577E10 2.716951954873197E10 2.9046739605613754E10 2.6338660392485367E10 3.201336270280695E10 2.653630129533954E10 2.781962290240867E10 2.7473641105529102E10 2.8114892422109653E10 3.302315082168801E10 2.1696266041980934E10 2.319683295459461E10 2.2294149400529278E10 2.6112875568746803E10 3.1019204569991188E10 2.8039243286010967E10 2.7123513706267494E10 2.953265858242891E10 3.1035911840633118E10 2.604618858928054E10 3.119617243543492E10 2.910576619923434E10 2.2604132936003967E10 2.9171337992968132E10 2.7548960509689342E10 3.2049931849960762E10 3.207369607694118E10 2.7119003836226105E10)
Error minima by case: (0.12 0.014 0.0 0.0 0.0 0.066 0.023 0.299 0.0 0.0 0.019 0.176 0.462 0.081 0.155 0.005 1.34 0.072 0.082 0.067 0.021 0.042 0.541 0.765 0.046 0.0 0.069 0.0 0.185 0.012 0.393 0.117 0.078 0.01 0.484 0.441 0.146 0.449 0.503 0.034 0.095 0.232 0.0 0.484 0.396 9.366 2.354 0.007 0.405 4.245 0.0 0.748 0.112 0.0 0.372 0.049 0.156 0.008 0.159 1.414 0.006 0.36 0.339 0.32 0.015 47.304 0.02 0.178 0.009 0.05 0.078 3.99 5.185 0.023 0.234 0.0 0.07 0.181 0.008 0.088 0.686 0.04 0.029 0.096 0.076 5.534 0.02 0.093 2.626 0.05 0.339 0.162 1.084 0.0 0.0 0.248 0.008 0.289 0.186 0.03 0.359 0.183 1.192 0.533 0.892 0.014 4.16 0.559 0.041 0.053 0.213 0.073 0.108 3.306 0.083 0.032 0.152 0.0 0.629 0.003 0.407 0.097 0.096 0.015 0.957 0.0 0.509 0.207 2.035 0.118 2.478 0.521 2.099 1.597 0.349 0.949 0.934 0.191 0.019 0.0 0.092 0.135 0.025 0.267 0.138 0.325 1.178 0.017 0.0 0.0 1.017 0.312 0.041 0.056 0.041 0.032 0.263 0.443 0.0 0.022 0.057 6.036 0.324 0.201 0.005 2.302 1.416 0.347 19.941 1.672 0.043 0.013 0.254 0.626 0.596 0.179 0.924 0.351 0.299 0.042 0.033 0.198 0.027 0.212 0.022 0.35 0.328 0.172 0.11 0.0 0.049 0.233 0.949 0.531 0.022 0.472 0.892 0.691 0.239 0.067)
Average genome size in population (length): 200.382
Average program size in population (points): 233.673
Average percent parens in population: 0.142
Minimum age in population: 16.0
Maximum age in population: 16.0
Average age in population: 16.0
Median age in population: 16.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.778
Error (vector) diversity:			 0.779
Behavioral diversity:				 0.787
--- Run Statistics ---
Number of individuals evaluated (running on all training cases counts as 1 evaluation): 17000
Number of program executions (running on a single case counts as 1 execution): 3400000
Number of point (instruction) evaluations so far: 3024391451
--- Timings ---
Current time: 1745364593450 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... 
